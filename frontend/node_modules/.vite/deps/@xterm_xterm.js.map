{
  "version": 3,
  "sources": ["webpack://@xterm/xterm/webpack/universalModuleDefinition", "webpack://@xterm/xterm/src/browser/AccessibilityManager.ts", "webpack://@xterm/xterm/src/browser/Clipboard.ts", "webpack://@xterm/xterm/src/browser/ColorContrastCache.ts", "webpack://@xterm/xterm/src/browser/Lifecycle.ts", "webpack://@xterm/xterm/src/browser/Linkifier.ts", "webpack://@xterm/xterm/src/browser/LocalizableStrings.ts", "webpack://@xterm/xterm/src/browser/OscLinkProvider.ts", "webpack://@xterm/xterm/src/browser/RenderDebouncer.ts", "webpack://@xterm/xterm/src/browser/Terminal.ts", "webpack://@xterm/xterm/src/browser/TimeBasedDebouncer.ts", "webpack://@xterm/xterm/src/browser/Viewport.ts", "webpack://@xterm/xterm/src/browser/decorations/BufferDecorationRenderer.ts", "webpack://@xterm/xterm/src/browser/decorations/ColorZoneStore.ts", "webpack://@xterm/xterm/src/browser/decorations/OverviewRulerRenderer.ts", "webpack://@xterm/xterm/src/browser/input/CompositionHelper.ts", "webpack://@xterm/xterm/src/browser/input/Mouse.ts", "webpack://@xterm/xterm/src/browser/input/MoveToCell.ts", "webpack://@xterm/xterm/src/browser/renderer/dom/DomRenderer.ts", "webpack://@xterm/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts", "webpack://@xterm/xterm/src/browser/renderer/dom/WidthCache.ts", "webpack://@xterm/xterm/src/browser/renderer/shared/Constants.ts", "webpack://@xterm/xterm/src/browser/renderer/shared/RendererUtils.ts", "webpack://@xterm/xterm/src/browser/renderer/shared/SelectionRenderModel.ts", "webpack://@xterm/xterm/src/browser/selection/SelectionModel.ts", "webpack://@xterm/xterm/src/browser/services/CharSizeService.ts", "webpack://@xterm/xterm/src/browser/services/CharacterJoinerService.ts", "webpack://@xterm/xterm/src/browser/services/CoreBrowserService.ts", "webpack://@xterm/xterm/src/browser/services/LinkProviderService.ts", "webpack://@xterm/xterm/src/browser/services/MouseService.ts", "webpack://@xterm/xterm/src/browser/services/RenderService.ts", "webpack://@xterm/xterm/src/browser/services/SelectionService.ts", "webpack://@xterm/xterm/src/browser/services/Services.ts", "webpack://@xterm/xterm/src/browser/services/ThemeService.ts", "webpack://@xterm/xterm/src/common/CircularList.ts", "webpack://@xterm/xterm/src/common/Clone.ts", "webpack://@xterm/xterm/src/common/Color.ts", "webpack://@xterm/xterm/src/common/CoreTerminal.ts", "webpack://@xterm/xterm/src/common/EventEmitter.ts", "webpack://@xterm/xterm/src/common/InputHandler.ts", "webpack://@xterm/xterm/src/common/Lifecycle.ts", "webpack://@xterm/xterm/src/common/MultiKeyMap.ts", "webpack://@xterm/xterm/src/common/Platform.ts", "webpack://@xterm/xterm/src/common/SortedList.ts", "webpack://@xterm/xterm/src/common/TaskQueue.ts", "webpack://@xterm/xterm/src/common/WindowsMode.ts", "webpack://@xterm/xterm/src/common/buffer/AttributeData.ts", "webpack://@xterm/xterm/src/common/buffer/Buffer.ts", "webpack://@xterm/xterm/src/common/buffer/BufferLine.ts", "webpack://@xterm/xterm/src/common/buffer/BufferRange.ts", "webpack://@xterm/xterm/src/common/buffer/BufferReflow.ts", "webpack://@xterm/xterm/src/common/buffer/BufferSet.ts", "webpack://@xterm/xterm/src/common/buffer/CellData.ts", "webpack://@xterm/xterm/src/common/buffer/Constants.ts", "webpack://@xterm/xterm/src/common/buffer/Marker.ts", "webpack://@xterm/xterm/src/common/data/Charsets.ts", "webpack://@xterm/xterm/src/common/data/EscapeSequences.ts", "webpack://@xterm/xterm/src/common/input/Keyboard.ts", "webpack://@xterm/xterm/src/common/input/TextDecoder.ts", "webpack://@xterm/xterm/src/common/input/UnicodeV6.ts", "webpack://@xterm/xterm/src/common/input/WriteBuffer.ts", "webpack://@xterm/xterm/src/common/input/XParseColor.ts", "webpack://@xterm/xterm/src/common/parser/Constants.ts", "webpack://@xterm/xterm/src/common/parser/DcsParser.ts", "webpack://@xterm/xterm/src/common/parser/EscapeSequenceParser.ts", "webpack://@xterm/xterm/src/common/parser/OscParser.ts", "webpack://@xterm/xterm/src/common/parser/Params.ts", "webpack://@xterm/xterm/src/common/public/AddonManager.ts", "webpack://@xterm/xterm/src/common/public/BufferApiView.ts", "webpack://@xterm/xterm/src/common/public/BufferLineApiView.ts", "webpack://@xterm/xterm/src/common/public/BufferNamespaceApi.ts", "webpack://@xterm/xterm/src/common/public/ParserApi.ts", "webpack://@xterm/xterm/src/common/public/UnicodeApi.ts", "webpack://@xterm/xterm/src/common/services/BufferService.ts", "webpack://@xterm/xterm/src/common/services/CharsetService.ts", "webpack://@xterm/xterm/src/common/services/CoreMouseService.ts", "webpack://@xterm/xterm/src/common/services/CoreService.ts", "webpack://@xterm/xterm/src/common/services/DecorationService.ts", "webpack://@xterm/xterm/src/common/services/InstantiationService.ts", "webpack://@xterm/xterm/src/common/services/LogService.ts", "webpack://@xterm/xterm/src/common/services/OptionsService.ts", "webpack://@xterm/xterm/src/common/services/OscLinkService.ts", "webpack://@xterm/xterm/src/common/services/ServiceRegistry.ts", "webpack://@xterm/xterm/src/common/services/Services.ts", "webpack://@xterm/xterm/src/common/services/UnicodeService.ts", "webpack://@xterm/xterm/webpack/bootstrap", "webpack://@xterm/xterm/src/browser/public/Terminal.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(globalThis, () => {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IInstantiationService } from 'common/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\n// Turn this on to unhide the accessibility tree and display it under\n// (instead of overlapping with) the terminal.\nconst DEBUG = false;\n\nexport class AccessibilityManager extends Disposable {\n  private _debugRootContainer: HTMLElement | undefined;\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _rowColumns: WeakMap<HTMLElement, number[]> = new WeakMap();\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = this._coreBrowserService.mainDocument.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n\n    if (DEBUG) {\n      this._accessibilityContainer.classList.add('debug');\n      this._rowContainer.classList.add('debug');\n\n      // Use a `<div class=\"xterm\">` container so that the css will still apply.\n      this._debugRootContainer = document.createElement('div');\n      this._debugRootContainer.classList.add('xterm');\n\n      this._debugRootContainer.appendChild(document.createTextNode('------start a11y------'));\n      this._debugRootContainer.appendChild(this._accessibilityContainer);\n      this._debugRootContainer.appendChild(document.createTextNode('------end a11y------'));\n\n      this._terminal.element.insertAdjacentElement('afterend', this._debugRootContainer);\n    } else {\n      this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n    }\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n    this.register(addDisposableDomListener(document, 'selectionchange', () => this._handleSelectionChange()));\n    this.register(this._coreBrowserService.onDprChange(() => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      if (DEBUG) {\n        this._debugRootContainer!.remove();\n      } else {\n        this._accessibilityContainer.remove();\n      }\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const line = buffer.lines.get(buffer.ydisp + i);\n      const columns: number[] = [];\n      const lineData = line?.translateToString(true, undefined, undefined, columns) || '';\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n          this._rowColumns.set(element, [0, 1]);\n        } else {\n          element.textContent = lineData;\n          this._rowColumns.set(element, columns);\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleSelectionChange(): void {\n    if (this._rowElements.length === 0) {\n      return;\n    }\n\n    const selection = document.getSelection();\n    if (!selection) {\n      return;\n    }\n\n    if (selection.isCollapsed) {\n      // Only do something when the anchorNode is inside the row container. This\n      // behavior mirrors what we do with mouse --- if the mouse clicks\n      // somewhere outside of the terminal, we don't clear the selection.\n      if (this._rowContainer.contains(selection.anchorNode)) {\n        this._terminal.clearSelection();\n      }\n      return;\n    }\n\n    if (!selection.anchorNode || !selection.focusNode) {\n      console.error('anchorNode and/or focusNode are null');\n      return;\n    }\n\n    // Sort the two selection points in document order.\n    let begin = { node: selection.anchorNode, offset: selection.anchorOffset };\n    let end = { node: selection.focusNode, offset: selection.focusOffset };\n    if ((begin.node.compareDocumentPosition(end.node) & Node.DOCUMENT_POSITION_PRECEDING) || (begin.node === end.node && begin.offset > end.offset) ) {\n      [begin, end] = [end, begin];\n    }\n\n    // Clamp begin/end to the inside of the row container.\n    if (begin.node.compareDocumentPosition(this._rowElements[0]) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_FOLLOWING)) {\n      begin = { node: this._rowElements[0].childNodes[0], offset: 0 };\n    }\n    if (!this._rowContainer.contains(begin.node)) {\n      // This happens when `begin` is below the last row.\n      return;\n    }\n    const lastRowElement = this._rowElements.slice(-1)[0];\n    if (end.node.compareDocumentPosition(lastRowElement) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_PRECEDING)) {\n      end = {\n        node: lastRowElement,\n        offset: lastRowElement.textContent?.length ?? 0\n      };\n    }\n    if (!this._rowContainer.contains(end.node)) {\n      // This happens when `end` is above the first row.\n      return;\n    }\n\n    const toRowColumn = ({ node, offset }: typeof begin): {row: number, column: number} | null => {\n      // `node` is either the row element or the Text node inside it.\n      const rowElement: any = node instanceof Text ? node.parentNode : node;\n      let row = parseInt(rowElement?.getAttribute('aria-posinset'), 10) - 1;\n      if (isNaN(row)) {\n        console.warn('row is invalid. Race condition?');\n        return null;\n      }\n\n      const columns = this._rowColumns.get(rowElement);\n      if (!columns) {\n        console.warn('columns is null. Race condition?');\n        return null;\n      }\n\n      let column = offset < columns.length ? columns[offset] : columns.slice(-1)[0] + 1;\n      if (column >= this._terminal.cols) {\n        ++row;\n        column = 0;\n      }\n      return {\n        row,\n        column\n      };\n    };\n\n    const beginRowColumn = toRowColumn(begin);\n    const endRowColumn = toRowColumn(end);\n\n    if (!beginRowColumn || !endRowColumn) {\n      return;\n    }\n\n    if (beginRowColumn.row > endRowColumn.row || (beginRowColumn.row === endRowColumn.row && beginRowColumn.column >= endRowColumn.column)) {\n      // This should not happen unless we have some bugs.\n      throw new Error('invalid range');\n    }\n\n    this._terminal.select(\n      beginRowColumn.column,\n      beginRowColumn.row,\n      (endRowColumn.row - beginRowColumn.row) * this._terminal.cols - beginRowColumn.column + endRowColumn.column\n    );\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { ILinkProviderService, IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier extends Disposable implements ILinkifier2 {\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILinkProviderService private readonly _linkProviderService: ILinkProviderService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n      // Clear out link providers as they could easily cause an embedder memory leak\n      this._activeProviderReplies?.clear();\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviderService.linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviderService.linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviderService.linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._lastMouseEvent) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n        // Sanity check, this shouldn't happen in practice as this listener would be disposed\n        if (!this._currentLink) {\n          return;\n        }\n        // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n        // cleared.\n        const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n        const end = this._bufferService.buffer.ydisp + 1 + e.end;\n        // Only clear the link if the viewport change happened on this line\n        if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n          this._clearCurrentLink(start, end);\n          if (this._lastMouseEvent) {\n            // re-eval previously active link after changes\n            const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n            if (position) {\n              this._askForLink(position, false);\n            }\n          }\n        }\n      }));\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink } from 'browser/Types';\nimport { ILinkProvider } from 'browser/services/Services';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier } from './Linkifier';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, CustomWheelEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, ILinkProviderService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { channels, color } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from '@xterm/xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { LinkProviderService } from 'browser/services/LinkProviderService';\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  public linkifier: ILinkifier2 | undefined;\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n  private _customWheelEventHandler: CustomWheelEventHandler | undefined;\n\n  // Browser services\n  private _decorationService: DecorationService;\n  private _linkProviderService: ILinkProviderService;\n\n  // Optional browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n    this._linkProviderService = this._instantiationService.createInstance(LinkProviderService);\n    this._instantiationService.setService(ILinkProviderService, this._linkProviderService);\n    this._linkProviderService.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const colorRgb = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(colorRgb)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = channels.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = channels.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: FocusEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    // If the terminal is already opened\n    if (this.element?.ownerDocument.defaultView && this._coreBrowserService) {\n      // Adjust the window if needed\n      if (this.element.ownerDocument.defaultView !== this._coreBrowserService.window) {\n        this._coreBrowserService.window = this.element.ownerDocument.defaultView;\n      }\n      return;\n    }\n\n    this._document = parent.ownerDocument;\n    if (this.options.documentOverride && this.options.documentOverride instanceof Document) {\n      this._document = this.optionsService.rawOptions.documentOverride as Document;\n    }\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = this._document.createDocumentFragment();\n    this._viewportElement = this._document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = this._document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = this._document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    this.register(addDisposableDomListener(this.screenElement, 'mousemove', (ev: MouseEvent) => this.updateCursorStyle(ev)));\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = this._document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = this._document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this.register(this._instantiationService.createInstance(CoreBrowserService,\n      this.textarea,\n      parent.ownerDocument.defaultView ?? window,\n      // Force unsafe null in node.js environment for tests\n      this._document ?? (typeof window !== 'undefined') ? window.document : null as any\n    ));\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: FocusEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = this._document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.linkifier = this.register(this._instantiationService.createInstance(Linkifier, this.screenElement));\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this, this._document!, this.element!, this.screenElement!, this._viewportElement!, this._helperContainer!, this.linkifier!);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          if (self._customWheelEventHandler && self._customWheelEventHandler(ev as WheelEvent) === false) {\n            return false;\n          }\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (this._customWheelEventHandler && this._customWheelEventHandler(ev) === false) {\n        return false;\n      }\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent | MouseEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public attachCustomWheelEventHandler(customWheelEventHandler: CustomWheelEventHandler): void {\n    this._customWheelEventHandler = customWheelEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._linkProviderService.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderDimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderDimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderDimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = this._coreBrowserService.mainDocument.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowserService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowserService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowserService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowserService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { createSelectionRenderModel } from 'browser/renderer/shared/SelectionRenderModel';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent, ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ITerminal, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n  private _selectionRenderModel: ISelectionRenderModel = createSelectionRenderModel();\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _document: Document,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _helperContainer: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = this._document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = this._document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(this._document, this._helperContainer);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    const blinkAnimationUnderlineId = `blink_underline_${this._terminalClass}`;\n    const blinkAnimationBarId = `blink_bar_${this._terminalClass}`;\n    const blinkAnimationBlockId = `blink_block_${this._terminalClass}`;\n    styles +=\n      `@keyframes ${blinkAnimationUnderlineId} {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes ${blinkAnimationBarId} {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes ${blinkAnimationBlockId} {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` animation: ${blinkAnimationUnderlineId} 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` animation: ${blinkAnimationBarId} 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: ${blinkAnimationBlockId} 1s step-end infinite;` +\n      `}` +\n      // !important helps fix an issue where the cursor will not render on top of the selection,\n      // however it's very hard to fix this issue and retain the blink animation without the use of\n      // !important. So this edge case fails when cursor blink is on.\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS}:not(.${RowCss.CURSOR_BLINK_CLASS}) {` +\n      ` background-color: ${colors.cursor.css} !important;` +\n      ` color: ${colors.cursorAccent.css} !important;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = this._document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n    this.handleSelectionChanged(this._selectionRenderModel.selectionStart, this._selectionRenderModel.selectionEnd, this._selectionRenderModel.columnSelectMode);\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n    this.renderRows(0, this._bufferService.rows - 1);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    this._selectionRenderModel.update(this._terminal, start, end, columnSelectMode);\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = this._selectionRenderModel.viewportStartRow;\n    const viewportEndRow = this._selectionRenderModel.viewportEndRow;\n    const viewportCappedStartRow = this._selectionRenderModel.viewportCappedStartRow;\n    const viewportCappedEndRow = this._selectionRenderModel.viewportCappedEndRow;\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = this._document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = this._document.createElement('div');\n    const left = colStart * this.dimensions.css.cell.width;\n    let width = this.dimensions.css.cell.width * (colEnd - colStart);\n    if (left + width > this.dimensions.css.canvas.width) {\n      width = this.dimensions.css.canvas.width - left;\n    }\n\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${left}px`;\n    element.style.width = `${width}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { channels, color } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { treatGlyphAsBackgroundColor } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          if (cell.isInvisible()) {\n            text += WHITESPACE_CELL_CHAR;\n          } else {\n            text += chars;\n          }\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell && this._coreService.isCursorInitialized) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = channels.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = channels.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, fgOverride)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || treatGlyphAsBackgroundColor(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n", "/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document, _helperContainer: HTMLElement) {\n    this._container = _document.createElement('div');\n    this._container.classList.add('xterm-width-cache-measure-container');\n    this._container.setAttribute('aria-hidden', 'true');\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n    regular.classList.add('xterm-char-measure-element');\n\n    const bold = _document.createElement('span');\n    bold.classList.add('xterm-char-measure-element');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.classList.add('xterm-char-measure-element');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.classList.add('xterm-char-measure-element');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _helperContainer.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      if (this._flat[cp] !== WidthCacheSettings.FLAT_UNSET) {\n        return this._flat[cp];\n      }\n      const width = this._measure(c, 0);\n      if (width > 0) {\n        this._flat[cp] = width;\n      }\n      return width;\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      if (width > 0) {\n        this._holey!.set(key, width);\n      }\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isNerdFontGlyph(codepoint: number): boolean {\n  return 0xE000 <= codepoint && codepoint <= 0xF8FF;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function isEmoji(codepoint: number): boolean {\n  return (\n    codepoint >= 0x1F600 && codepoint <= 0x1F64F || // Emoticons\n    codepoint >= 0x1F300 && codepoint <= 0x1F5FF || // Misc Symbols and Pictographs\n    codepoint >= 0x1F680 && codepoint <= 0x1F6FF || // Transport and Map\n    codepoint >= 0x2600  && codepoint <= 0x26FF  || // Misc symbols\n    codepoint >= 0x2700  && codepoint <= 0x27BF  || // Dingbats\n    codepoint >= 0xFE00  && codepoint <= 0xFE0F  || // Variation Selectors\n    codepoint >= 0x1F900 && codepoint <= 0x1F9FF || // Supplemental Symbols and Pictographs\n    codepoint >= 0x1F1E6 && codepoint <= 0x1F1FF\n  );\n}\n\nexport function allowRescaling(codepoint: number | undefined, width: number, glyphSizeX: number, deviceCellWidth: number): boolean {\n  return (\n    // Is single cell width\n    width === 1 &&\n    // Glyph exceeds cell bounds, add 50% to avoid hurting readability by rescaling glyphs that\n    // barely overlap\n    glyphSizeX > Math.ceil(deviceCellWidth * 1.5) &&\n    // Never rescale ascii\n    codepoint !== undefined && codepoint > 0xFF &&\n    // Never rescale emoji\n    !isEmoji(codepoint) &&\n    // Never rescale powerline or nerd fonts\n    !isPowerlineGlyph(codepoint) && !isNerdFontGlyph(codepoint)\n  );\n}\n\nexport function treatGlyphAsBackgroundColor(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n\nexport function computeNextVariantOffset(cellWidth: number, lineWidth: number, currentOffset: number = 0): number {\n  return (cellWidth - (Math.round(lineWidth) * 2 - currentOffset)) % (Math.round(lineWidth) * 2);\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from 'browser/Types';\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { Terminal } from '@xterm/xterm';\n\nclass SelectionRenderModel implements ISelectionRenderModel {\n  public hasSelection!: boolean;\n  public columnSelectMode!: boolean;\n  public viewportStartRow!: number;\n  public viewportEndRow!: number;\n  public viewportCappedStartRow!: number;\n  public viewportCappedEndRow!: number;\n  public startCol!: number;\n  public endCol!: number;\n  public selectionStart: [number, number] | undefined;\n  public selectionEnd: [number, number] | undefined;\n\n  constructor() {\n    this.clear();\n  }\n\n  public clear(): void {\n    this.hasSelection = false;\n    this.columnSelectMode = false;\n    this.viewportStartRow = 0;\n    this.viewportEndRow = 0;\n    this.viewportCappedStartRow = 0;\n    this.viewportCappedEndRow = 0;\n    this.startCol = 0;\n    this.endCol = 0;\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n  }\n\n  public update(terminal: ITerminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this.selectionStart = start;\n    this.selectionEnd = end;\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this.clear();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportY = terminal.buffers.active.ydisp;\n    const viewportStartRow = start[1] - viewportY;\n    const viewportEndRow = end[1] - viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this.clear();\n      return;\n    }\n\n    this.hasSelection = true;\n    this.columnSelectMode = columnSelectMode;\n    this.viewportStartRow = viewportStartRow;\n    this.viewportEndRow = viewportEndRow;\n    this.viewportCappedStartRow = viewportCappedStartRow;\n    this.viewportCappedEndRow = viewportCappedEndRow;\n    this.startCol = start[0];\n    this.endCol = end[0];\n  }\n\n  public isCellSelected(terminal: Terminal, x: number, y: number): boolean {\n    if (!this.hasSelection) {\n      return false;\n    }\n    y -= terminal.buffer.active.viewportY;\n    if (this.columnSelectMode) {\n      if (this.startCol <= this.endCol) {\n        return x >= this.startCol && y >= this.viewportCappedStartRow &&\n          x < this.endCol && y <= this.viewportCappedEndRow;\n      }\n      return x < this.startCol && y >= this.viewportCappedStartRow &&\n        x >= this.endCol && y <= this.viewportCappedEndRow;\n    }\n    return (y > this.viewportStartRow && y < this.viewportEndRow) ||\n      (this.viewportStartRow === this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportEndRow && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol);\n  }\n}\n\nexport function createSelectionRenderModel(): ISelectionRenderModel {\n  return new SelectionRenderModel();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    try {\n      this._measureStrategy = this.register(new TextMetricsMeasureStrategy(this._optionsService));\n    } catch {\n      this._measureStrategy = this.register(new DomMeasureStrategy(document, parentElement, this._optionsService));\n    }\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): Readonly<IMeasureResult>;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\nconst enum DomMeasureStrategyConstants {\n  REPEAT = 32\n}\n\nabstract class BaseMeasureStategy extends Disposable implements IMeasureStrategy {\n  protected _result: IMeasureResult = { width: 0, height: 0 };\n\n  protected _validateAndSet(width: number | undefined, height: number | undefined): void {\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (width !== undefined && width > 0 && height !== undefined && height > 0) {\n      this._result.width = width;\n      this._result.height = height;\n    }\n  }\n\n  public abstract measure(): Readonly<IMeasureResult>;\n}\n\nclass DomMeasureStrategy extends BaseMeasureStategy {\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(DomMeasureStrategyConstants.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): Readonly<IMeasureResult> {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    this._validateAndSet(Number(this._measureElement.offsetWidth) / DomMeasureStrategyConstants.REPEAT, Number(this._measureElement.offsetHeight));\n\n    return this._result;\n  }\n}\n\nclass TextMetricsMeasureStrategy extends BaseMeasureStategy {\n  private _canvas: OffscreenCanvas;\n  private _ctx: OffscreenCanvasRenderingContext2D;\n\n  constructor(\n    private _optionsService: IOptionsService\n  ) {\n    super();\n    // This will throw if any required API is not supported\n    this._canvas = new OffscreenCanvas(100, 100);\n    this._ctx = this._canvas.getContext('2d')!;\n    const a = this._ctx.measureText('W');\n    if (!('width' in a && 'fontBoundingBoxAscent' in a && 'fontBoundingBoxDescent' in a)) {\n      throw new Error('Required font metrics not supported');\n    }\n  }\n\n  public measure(): Readonly<IMeasureResult> {\n    this._ctx.font = `${this._optionsService.rawOptions.fontSize}px ${this._optionsService.rawOptions.fontFamily}`;\n    const metrics = this._ctx.measureText('W');\n    this._validateAndSet(metrics.width, metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent);\n    return this._result;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService } from './Services';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class CoreBrowserService extends Disposable implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n  private _screenDprMonitor = new ScreenDprMonitor(this._window);\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n  private readonly _onWindowChange = this.register(new EventEmitter<Window & typeof globalThis>());\n  public readonly onWindowChange = this._onWindowChange.event;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    private _window: Window & typeof globalThis,\n    public readonly mainDocument: Document\n  ) {\n    super();\n\n    // Monitor device pixel ratio\n    this.register(this.onWindowChange(w => this._screenDprMonitor.setWindow(w)));\n    this.register(forwardEvent(this._screenDprMonitor.onDprChange, this._onDprChange));\n\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get window(): Window & typeof globalThis {\n    return this._window;\n  }\n\n  public set window(value: Window & typeof globalThis) {\n    if (this._window !== value) {\n      this._window = value;\n      this._onWindowChange.fire(this._window);\n    }\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nclass ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n  private _windowResizeListener = this.register(new MutableDisposable());\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n\n  constructor(private _parentWindow: Window) {\n    super();\n\n    // Initialize listener and dpr value\n    this._outerListener = () => this._setDprAndFireIfDiffers();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._updateDpr();\n\n    // Monitor active window resize\n    this._setWindowResizeListener();\n\n    // Setup additional disposables\n    this.register(toDisposable(() => this.clearListener()));\n  }\n\n\n  public setWindow(parentWindow: Window): void {\n    this._parentWindow = parentWindow;\n    this._setWindowResizeListener();\n    this._setDprAndFireIfDiffers();\n  }\n\n  private _setWindowResizeListener(): void {\n    this._windowResizeListener.value = addDisposableDomListener(this._parentWindow, 'resize', () => this._setDprAndFireIfDiffers());\n  }\n\n  private _setDprAndFireIfDiffers(): void {\n    if (this._parentWindow.devicePixelRatio !== this._currentDevicePixelRatio) {\n      this._onDprChange.fire(this._parentWindow.devicePixelRatio);\n    }\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._outerListener = undefined;\n  }\n}\n", "import { ILinkProvider, ILinkProviderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\n\nexport class LinkProviderService extends Disposable implements ILinkProviderService {\n  declare public serviceBrand: undefined;\n\n  public readonly linkProviders: ILinkProvider[] = [];\n\n  constructor() {\n    super();\n    this.register(toDisposable(() => this.linkProviders.length = 0));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this.linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this.linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this.linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _pausedResizeTask = new DebouncedIdleTask();\n  private _observerDisposable = this.register(new MutableDisposable());\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange = this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end), coreBrowserService);\n    this.register(this._renderDebouncer);\n\n    this.register(coreBrowserService.onDprChange(() => this.handleDevicePixelRatioChange()));\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio',\n      'rescaleOverlappingGlyphs'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    this._registerIntersectionObserver(coreBrowserService.window, screenElement);\n    this.register(coreBrowserService.onWindowChange((w) => this._registerIntersectionObserver(w, screenElement)));\n  }\n\n  private _registerIntersectionObserver(w: Window & typeof globalThis, screenElement: HTMLElement): void {\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in w) {\n      const observer = new w.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this._observerDisposable.value = toDisposable(() => observer.disconnect());\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    // If the value was not set, the terminal is being disposed so ignore it\n    if (this._renderer.value) {\n      this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n      // Force a refresh\n      this._needsSelectionRefresh = true;\n      this._fullRefresh();\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value?.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        if (this._model.selectionEnd[0] < this._bufferService.cols) {\n          this._model.selectionEnd[0]++;\n        }\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ILink, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n\n  readonly onDprChange: IEvent<number>;\n  readonly onWindowChange: IEvent<Window & typeof globalThis>;\n\n  /**\n   * Gets or sets the parent window that the terminal is rendered into. DOM and rendering APIs (e.g.\n   * requestAnimationFrame) should be invoked in the context of this window. This should be set when\n   * the window hosting the xterm.js instance changes.\n   */\n  window: Window & typeof globalThis;\n  /**\n   * The document of the primary window to be used to create elements when working with multiple\n   * windows. This is defined by the documentOverride setting.\n   */\n  readonly mainDocument: Document;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n\n\nexport const ILinkProviderService = createDecorator<ILinkProviderService>('LinkProviderService');\nexport interface ILinkProviderService extends IDisposable {\n  serviceBrand: undefined;\n  readonly linkProviders: ReadonlyArray<ILinkProvider>;\n  registerLinkProvider(linkProvider: ILinkProvider): IDisposable;\n}\nexport interface ILinkProvider {\n  provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void;\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return channels.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  // Attempt to set get the shared canvas context\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  try {\n    // This is guaranteed to run in the first window, so document should be correct\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n  catch {\n    // noop\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return channels.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return channels.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return channels.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function blend(bg: number, fg: number): number {\n    $a = (fg & 0xFF) / 0xFF;\n    if ($a === 1) {\n      return fg;\n    }\n    const fgR = (fg >> 24) & 0xFF;\n    const fgG = (fg >> 16) & 0xFF;\n    const fgB = (fg >> 8) & 0xFF;\n    const bgR = (bg >> 24) & 0xFF;\n    const bgG = (bg >> 16) & 0xFF;\n    const bgB = (bg >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    return channels.toRgba($r, $g, $b);\n  }\n\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n", "/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public input(data: string, wasUserInput: boolean = true): void {\n    this.coreService.triggerDataEvent(data, wasUserInput);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n\nexport function runAndSubscribe<T>(event: IEvent<T>, handler: (e: T | undefined) => any): IDisposable {\n  handler(undefined);\n  return event(e => handler(e));\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via @xterm/addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing, fire only for rows within the\n    // _viewport_ which is relative to ydisp, not relative to ybase.\n    const viewportEnd = this._dirtyRowTracker.end + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    const viewportStart = this._dirtyRowTracker.start + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    if (viewportStart < this._bufferService.rows) {\n      this._onRequestRefreshRows.fire(Math.min(viewportStart, this._bufferService.rows - 1), Math.min(viewportEnd, this._bufferService.rows - 1));\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x - 1, 0, 1, curAttr);\n    }\n\n    let precedingJoinState = this._parser.precedingJoinState;\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      const currentInfo = this._unicodeService.charProperties(code, precedingJoinState);\n      chWidth = UnicodeService.extractWidth(currentInfo);\n      const shouldJoin = UnicodeService.extractShouldJoin(currentInfo);\n      const oldWidth = shouldJoin ? UnicodeService.extractWidth(precedingJoinState) : 0;\n      precedingJoinState = currentInfo;\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - oldWidth > cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          const oldRow = bufferRow;\n          let oldCol = this._activeBuffer.x - oldWidth;\n          this._activeBuffer.x = oldWidth;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n          if (oldWidth > 0 && bufferRow instanceof BufferLine) {\n            // Combining character widens 1 column to 2.\n            // Move old character to next line.\n            bufferRow.copyCellsFrom(oldRow as BufferLine,\n              oldCol, 0, oldWidth, false);\n          }\n          // clear left over cells to the right\n          while (oldCol < cols) {\n            oldRow.setCellFromCodepoint(oldCol++, 0, 1, curAttr);\n          }\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (shouldJoin && this._activeBuffer.x) {\n        const offset = bufferRow.getWidth(this._activeBuffer.x - 1) ? 1 : 2;\n        // if empty cell after fullwidth, need to go 2 cells back\n        // it is save to step 2 cells back here\n        // since an empty cell is only set by fullwidth chars\n        bufferRow.addCodepointToCell(this._activeBuffer.x - offset,\n          code, chWidth);\n        for (let delta = chWidth - oldWidth; --delta >= 0; ) {\n          bufferRow.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, curAttr);\n        }\n        continue;\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth - oldWidth, this._activeBuffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodepoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x++, code, chWidth, curAttr);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, curAttr);\n        }\n      }\n    }\n\n    this._parser.precedingJoinState = precedingJoinState;\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x, 0, 1, curAttr);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * We extend xterm's behavior to allow repeating entire grapheme clusters.\n   * This isn't 100% xterm-compatible, but it seems saner and more useful.\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    const joinState = this._parser.precedingJoinState;\n    if (!joinState) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const chWidth = UnicodeService.extractWidth(joinState);\n    const x = this._activeBuffer.x - chWidth;\n    const bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n    const text = bufferRow.getString(x);\n    const data = new Uint32Array(text.length * length);\n    let idata = 0;\n    for (let itext = 0; itext < text.length; ) {\n      const ch = text.codePointAt(itext) || 0;\n      data[idata++] = ch;\n      itext += ch > 0xffff ? 2 : 1;\n    }\n    let tlength = idata;\n    for (let i = 1; i < length; ++i) {\n      data.copyWithin(tlength, 0, idata);\n      tlength += idata;\n    }\n    this.print(data, 0, tlength);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\ndeclare const process: unknown;\n\nexport const isNode = (typeof process !== 'undefined' && 'title' in (process as any)) ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n  public getUnderlineVariantOffset(): number {\n    return this.extended.underlineVariantOffset;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  public get underlineVariantOffset(): number {\n    const val = (this._ext & ExtFlags.VARIANT_OFFSET) >> 29;\n    if (val < 0) {\n      return val ^ 0xFFFFFFF8;\n    }\n    return val;\n  }\n  public set underlineVariantOffset(value: number) {\n    this._ext &= ~ExtFlags.VARIANT_OFFSET;\n    this._ext |= (value << 29) & ExtFlags.VARIANT_OFFSET;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodepoint(index: number, codePoint: number, width: number, attrs: IAttributeData): void {\n    if (attrs.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = attrs.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = attrs.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = attrs.bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number, width: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n    }\n    if (width) {\n      content &= ~Content.WIDTH_MASK;\n      content |= width << Content.WIDTH_SHIFT;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodepoint(pos - 1, 0, 1, fillCellData);\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodepoint(this.length - 1, 0, 1, fillCellData);\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodepoint(pos - 1, 0, 1, fillCellData);\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodepoint(pos, 0, 1, fillCellData);\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodepoint(start - 1, 0, 1, fillCellData);\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodepoint(end, 0, 1, fillCellData);\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodepoint(start - 1, 0, 1, fillCellData);\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodepoint(end, 0, 1, fillCellData);\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  /**\n   * Translates the buffer line to a string.\n   *\n   * @param trimRight Whether to trim any empty cells on the right.\n   * @param startCol The column to start the string (0-based inclusive).\n   * @param endCol The column to end the string (0-based exclusive).\n   * @param outColumns if specified, this array will be filled with column numbers such that\n   * `returnedString[i]` is displayed at `outColumns[i]` column. `outColumns[returnedString.length]`\n   * is where the character following `returnedString` will be displayed.\n   *\n   * When a single cell is translated to multiple UTF-16 code units (e.g. surrogate pair) in the\n   * returned string, the corresponding entries in `outColumns` will have the same column number.\n   */\n  public translateToString(trimRight?: boolean, startCol?: number, endCol?: number, outColumns?: number[]): string {\n    startCol = startCol ?? 0;\n    endCol = endCol ?? this.length;\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    if (outColumns) {\n      outColumns.length = 0;\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      const chars = (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      result += chars;\n      if (outColumns) {\n        for (let i = 0; i < chars.length; ++i) {\n          outColumns.push(startCol);\n        }\n      }\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by at least 1\n    }\n    if (outColumns) {\n      outColumns.push(startCol);\n    }\n    return result;\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from '@xterm/xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..29\n   */\n  UNDERLINE_STYLE = 0x1C000000,\n\n  /**\n   * bit 30..32\n   *\n   * An optional variant for the glyph, this can be used for example to offset underlines by a\n   * number of pixels to create a perfect pattern.\n   */\n  VARIANT_OFFSET = 0xE0000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      result.key = ev.ctrlKey ? '\\b' : C0.DEL; // ^H or ^?\n      if (ev.altKey) {\n        result.key = C0.ESC + result.key;\n      }\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): UnicodeCharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as UnicodeCharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    let width = this.wcwidth(codepoint);\n    let shouldJoin = width === 0 && preceding !== 0;\n    if (shouldJoin) {\n      const oldWidth = UnicodeService.extractWidth(preceding);\n      if (oldWidth === 0) {\n        shouldJoin = false;\n      } else if (oldWidth > width) {\n        width = oldWidth;\n      }\n    }\n    return UnicodeService.createPropertyValue(0, width, shouldJoin);\n  }\n}\n", "\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingJoinState: number; // UnicodeJoinProperties\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingJoinState = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from '@xterm/xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from '@xterm/xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from '@xterm/xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from '@xterm/xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from '@xterm/xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from '@xterm/xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from '@xterm/xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  documentOverride: null,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rescaleOverlappingGlyphs: false,\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n\n    // Clear out options that could link outside xterm.js as they could easily cause an embedder\n    // memory leak\n    this.register(toDisposable(() => {\n      this.rawOptions.linkHandler = null;\n      this.rawOptions.documentOverride = null;\n    }));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from '@xterm/xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  documentOverride?: any | null;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rescaleOverlappingGlyphs?: boolean;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\n/*\n * Width and Grapheme_Cluster_Break properties of a character as a bit mask.\n *\n * bit 0: shouldJoin - should combine with preceding character.\n * bit 1..2: wcwidth - see UnicodeCharWidth.\n * bit 3..31: class of character (currently only 4 bits are used).\n *   This is used to determined grapheme clustering - i.e. which codepoints\n *   are to be combined into a single compound character.\n *\n * Use the UnicodeService static function createPropertyValue to create a\n * UnicodeCharProperties; use extractShouldJoin, extractWidth, and\n * extractCharKind to extract the components.\n */\nexport type UnicodeCharProperties = number;\n\n/**\n * Width in columns of a character.\n * In a CJK context, \"half-width\" characters (such as Latin) are width 1,\n * while \"full-width\" characters (such as Kanji) are 2 columns wide.\n * Combining characters (such as accents) are width 0.\n */\nexport type UnicodeCharWidth = 0 | 1 | 2;\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): UnicodeCharWidth;\n  getStringCellWidth(s: string): number;\n  /**\n   * Return character width and type for grapheme clustering.\n   * If preceding != 0, it is the return code from the previous character;\n   * in that case the result specifies if the characters should be joined.\n   */\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): UnicodeCharWidth;\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  public static extractShouldJoin(value: UnicodeCharProperties): boolean {\n    return (value & 1) !== 0;\n  }\n  public static extractWidth(value: UnicodeCharProperties): UnicodeCharWidth {\n    return ((value >> 1) & 0x3) as UnicodeCharWidth;\n  }\n  public static extractCharKind(value: UnicodeCharProperties): number {\n    return value >> 3;\n  }\n  public static createPropertyValue(state: number, width: number, shouldJoin: boolean = false): UnicodeCharProperties {\n    return ((state & 0xffffff) << 3) | ((width & 3) << 1) | (shouldJoin?1:0);\n  }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): UnicodeCharWidth {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    let precedingInfo = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      const currentInfo = this.charProperties(code, precedingInfo);\n      let chWidth = UnicodeService.extractWidth(currentInfo);\n      if (UnicodeService.extractShouldJoin(currentInfo)) {\n        chWidth -= UnicodeService.extractWidth(precedingInfo);\n      }\n      result += chWidth;\n      precedingInfo = currentInfo;\n    }\n    return result;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    return this._activeProvider.charProperties(codepoint, preceding);\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from '@xterm/xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public input(data: string, wasUserInput: boolean = true): void {\n    this._core.input(data, wasUserInput);\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public attachCustomWheelEventHandler(customWheelEventHandler: (event: WheelEvent) => boolean): void {\n    this._core.attachCustomWheelEventHandler(customWheelEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],
  "mappings": "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IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,OAAQ,KAAA,GAC7C,CAAC,OAAQ,KAAA,GAAS,CAAC,OAAQ,KAAA,GAAS,CAAC,OAAQ,KAAA,GAC7C,CAAC,OAAQ,KAAA,GAAS,CAAC,OAAQ,KAAA,GAAS,CAAC,OAAQ,K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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "a", "i", "globalThis", "e", "t", "s", "r", "n", "o", "AccessibilityManager", "Disposable", "_terminal", "instantiationService", "super", "_coreBrowserService", "_renderService", "_rowColumns", "WeakMap", "_liveRegionLineCount", "_charsToConsume", "_charsToAnnounce", "this", "_accessibilityContainer", "mainDocument", "createElement", "classList", "add", "_rowContainer", "setAttribute", "_rowElements", "rows", "_createAccessibilityTreeNode", "appendChild", "_topBoundaryFocusListener", "_handleBoundaryFocus", "_bottomBoundaryFocusListener", "addEventListener", "length", "_refreshRowsDimensions", "_liveRegion", "_liveRegionDebouncer", "register", "TimeBasedDebouncer", "_renderRows", "bind", "element", "Error", "insertAdjacentElement", "onResize", "_handleResize", "onRender", "_refreshRows", "start", "end", "onScroll", "onA11yChar", "char", "_handleChar", "onLineFeed", "onA11yTab", "spaceCount", "_handleTab", "onKey", "_handleKey", "key", "onBlur", "_clearLiveRegion", "onDimensionsChange", "addDisposableDomListener", "document", "_handleSelectionChange", "onDprChange", "toDisposable", "remove", "MAX_ROWS_TO_READ", "shift", "textContent", "Strings", "tooMuchOutput", "keyChar", "test", "push", "refresh", "buffer", "setSize", "lines", "toString", "line", "get", "ydisp", "columns", "lineData", "translateToString", "undefined", "posInSet", "innerText", "set", "_announceCharacters", "position", "boundaryElement", "target", "beforeBoundaryElement", "getAttribute", "relatedTarget", "topBoundaryElement", "bottomBoundaryElement", "pop", "removeChild", "removeEventListener", "newElement", "unshift", "scrollLines", "focus", "preventDefault", "stopImmediatePropagation", "selection", "getSelection", "isCollapsed", "contains", "anchorNode", "clearSelection", "focusNode", "console", "error", "begin", "node", "offset", "anchorOffset", "focusOffset", "compareDocumentPosition", "Node", "DOCUMENT_POSITION_PRECEDING", "DOCUMENT_POSITION_CONTAINED_BY", "DOCUMENT_POSITION_FOLLOWING", "childNodes", "lastRowElement", "slice", "toRowColumn", "rowElement", "Text", "parentNode", "row", "parseInt", "isNaN", "warn", "column", "cols", "beginRowColumn", "endRowColumn", "select", "children", "tabIndex", "_refreshRowDimensions", "dimensions", "css", "cell", "height", "style", "width", "canvas", "IInstantiationService", "ICoreBrowserService", "IRenderService", "prepareTextForTerminal", "text", "replace", "bracketTextForPaste", "bracketedPasteMode", "paste", "textarea", "coreService", "optionsService", "decPrivateModes", "rawOptions", "ignoreBracketedPasteMode", "triggerDataEvent", "value", "moveTextAreaUnderMouseCursor", "ev", "screenElement", "pos", "getBoundingClientRect", "left", "clientX", "top", "clientY", "zIndex", "selectionService", "clipboardData", "setData", "selectionText", "stopPropagation", "getData", "shouldSelectWord", "rightClickSelect", "_color", "TwoKeyMap", "_css", "bg", "fg", "clear", "type", "handler", "options", "disposed", "dispose", "Linkifier", "currentLink", "_currentLink", "_element", "_mouseService", "_bufferService", "_linkProviderService", "_linkCacheDisposables", "_isMouseOut", "_wasResized", "_activeLine", "_onShowLinkUnderline", "EventEmitter", "onShowLinkUnderline", "event", "_onHideLinkUnderline", "onHideLinkUnderline", "getDisposeArrayDisposable", "_lastMouseEvent", "_activeProviderReplies", "_clearCurrentLink", "_handleMouseMove", "_handleMouseDown", "_handleMouseUp", "_positionFromMouseEvent", "composedPath", "_lastBufferCell", "x", "y", "_handleHover", "_askForLink", "_linkAtPosition", "link", "useLineCache", "forEach", "reply", "linkWithState", "Map", "linkProvided", "linkProvider", "linkProviders", "entries", "existingReply", "_checkLinkProviderResult", "provideLinks", "links", "linksWithState", "map", "size", "_removeIntersectingLinks", "replies", "occupiedCells", "Set", "providerReply", "startX", "range", "endX", "has", "splice", "index", "hasLinkBefore", "j", "linkAtPosition", "find", "_handleNewLink", "_mouseDownLink", "activate", "startRow", "endRow", "_linkLeave", "disposeArray", "state", "decorations", "underline", "pointerCursor", "isHovered", "_linkHover", "Object", "defineProperties", "v", "toggle", "_fireUnderlineEvent", "onRenderedViewportChange", "hover", "showEvent", "scrollOffset", "_createLinkUnderlineEvent", "fire", "leave", "lower", "upper", "current", "mouseService", "coords", "getCoords", "x1", "y1", "x2", "y2", "IMouseService", "IBufferService", "ILinkProviderService", "promptLabel", "OscLinkProvider", "_optionsService", "_oscLinkService", "callback", "result", "linkHandler", "CellData", "lineLength", "getTrimmedLength", "currentLinkId", "currentStart", "finishLink", "hasContent", "loadCell", "hasExtendedAttrs", "extended", "urlId", "getLinkData", "uri", "ignoreLink", "allowNonHttpProtocols", "parsed", "URL", "includes", "protocol", "defaultActivate", "confirm", "newWindow", "window", "open", "opener", "location", "href", "IOptionsService", "IOscLinkService", "_renderCallback", "_refreshCallbacks", "_animationFrame", "cancelAnimationFrame", "requestAnimationFrame", "_innerRefresh", "rowStart", "rowEnd", "rowCount", "_rowCount", "_rowStart", "Math", "min", "_rowEnd", "max", "_runRefreshCallbacks", "Terminal", "CoreTerminal", "onFocus", "_onFocus", "_onBlur", "_onA11yCharEmitter", "_onA11yTabEmitter", "onWillOpen", "_onWillOpen", "browser", "Browser", "_keyDownHandled", "_keyDownSeen", "_keyPressHandled", "_unprocessedDeadKey", "_accessibilityManager", "MutableDisposable", "_onCursorMove", "onCursorMove", "_onKey", "_onRender", "_onSelectionChange", "onSelectionChange", "_onTitleChange", "onTitleChange", "_onBell", "onBell", "_setup", "_decorationService", "_instantiationService", "createInstance", "DecorationService", "setService", "IDecorationService", "LinkProviderService", "registerLinkProvider", "_inputHandler", "onRequestBell", "onRequestRefreshRows", "onRequestSendFocus", "_reportFocus", "onRequestReset", "reset", "onRequestWindowsOptionsReport", "_reportWindowsOptions", "onColor", "_handleColorEvent", "forwardEvent", "_afterResize", "_customKeyEventHandler", "_themeService", "req", "acc", "ident", "colorRgb", "color", "toColorRGB", "colors", "ansi", "C0", "ESC", "toRgbString", "C1_ESCAPED", "ST", "modifyColors", "channels", "toColor", "narrowedAcc", "restoreColor", "buffers", "active", "preventScroll", "sendFocus", "_showCursor", "blur", "_handleTextAreaBlur", "_syncTextArea", "isCursorInViewport", "_compositionHelper", "isComposing", "cursorY", "ybase", "bufferLine", "cursorX", "cellHeight", "getWidth", "cellWidth", "cursorTop", "cursorLeft", "lineHeight", "_initGlobal", "_bindKeys", "hasSelection", "copyHandler", "_selectionService", "pasteHandlerWrapper", "handlePasteEvent", "isFirefox", "button", "rightClickHandler", "rightClickSelectsWord", "isLinux", "_keyUp", "_keyDown", "_keyPress", "compositionstart", "compositionupdate", "compositionend", "_inputEvent", "updateCompositionElements", "parent", "isConnected", "_logService", "debug", "ownerDocument", "defaultView", "_document", "documentOverride", "Document", "dir", "fragment", "createDocumentFragment", "_viewportElement", "_viewportScrollArea", "updateCursorStyle", "_helperContainer", "isChromeOS", "CoreBrowserService", "_handleTextAreaFocus", "_charSizeService", "CharSizeService", "ICharSizeService", "ThemeService", "IThemeService", "_characterJoinerService", "CharacterJoinerService", "ICharacterJoinerService", "RenderService", "resize", "_compositionView", "CompositionHelper", "MouseService", "linkifier", "hasRenderer", "setRenderer", "_createRenderer", "viewport", "Viewport", "onRequestScrollLines", "amount", "suppressScrollEvent", "onRequestSyncScrollBar", "syncScrollArea", "handleCursorMove", "handleResize", "handleBlur", "handleFocus", "SelectionService", "ISelectionService", "onRequestRedraw", "handleSelectionChanged", "columnSelectMode", "onLinuxMouseSelection", "_onScroll", "BufferDecorationRenderer", "handleMouseDown", "coreMouseService", "areMouseEventsActive", "disable", "enable", "screenReaderMode", "onSpecificOptionChange", "_handleScreenReaderModeOptionChange", "overviewRulerWidth", "_overviewRulerRenderer", "OverviewRulerRenderer", "measure", "bindMouse", "DomRenderer", "self", "el", "sendEvent", "getMouseReportCoords", "but", "action", "overrideType", "buttons", "_customWheelEventHandler", "getLinesScrolled", "deltaY", "triggerMouseEvent", "col", "ctrl", "ctrlKey", "alt", "altKey", "shiftKey", "requestedEvents", "mouseup", "wheel", "mousedrag", "mousemove", "eventListeners", "cancel", "onProtocolChange", "events", "logLevel", "explainEvents", "passive", "activeProtocol", "shouldForceSelection", "hasScrollback", "sequence", "applicationCursorKeys", "data", "abs", "handleWheel", "handleTouchStart", "handleTouchMove", "refreshRows", "shouldColumnSelect", "isCursorInitialized", "disp", "source", "customKeyEventHandler", "customWheelEventHandler", "joinerId", "deregister", "markers", "cursorYOffset", "addMarker", "decorationOptions", "registerDecoration", "setSelection", "getSelectionPosition", "selectionStart", "selectionEnd", "selectAll", "selectLines", "shouldIgnoreComposition", "isMac", "macOptionIsMeta", "keydown", "scrollOnUserInput", "scrollToBottom", "evaluateKeyboardEvent", "scrollCount", "_isThirdLevelShift", "metaKey", "charCodeAt", "ETX", "CR", "domEvent", "thirdLevelKey", "isWindows", "getModifierState", "keyCode", "charCode", "which", "String", "fromCharCode", "inputType", "composed", "hasValidSize", "clearAllMarkers", "getBlankLine", "DEFAULT_ATTR_DATA", "clearTextureAtlas", "WindowsOptionsReportType", "GET_WIN_SIZE_PIXELS", "canvasWidth", "toFixed", "canvasHeight", "GET_CELL_SIZE_PIXELS", "force", "cancelEvents", "_debounceThresholdMS", "_lastRefreshMs", "_additionalRefreshRequested", "_refreshTimeoutID", "clearTimeout", "refreshRequestTime", "Date", "now", "elapsed", "waitPeriodBeforeTrailingRefresh", "setTimeout", "_scrollArea", "h", "themeService", "scrollBarWidth", "_currentRowHeight", "_currentDeviceCellHeight", "_lastRecordedBufferLength", "_lastRecordedViewportHeight", "_lastRecordedBufferHeight", "_lastTouchY", "_lastScrollTop", "_wheelPartialScroll", "_refreshAnimationFrame", "_ignoreNextScrollEvent", "_smoothScrollState", "startTime", "origin", "_onRequestScrollLines", "offsetWidth", "_handleScroll", "_activeBuffer", "onBufferActivate", "activeBuffer", "_renderDimensions", "_handleThemeChange", "onChangeColors", "backgroundColor", "background", "immediate", "device", "dpr", "offsetHeight", "newBufferHeight", "round", "scrollTop", "_refresh", "offsetParent", "diff", "_smoothScroll", "_isDisposed", "percent", "_smoothScrollPercent", "_clearSmoothScrollState", "smoothScrollDuration", "scrollPosFromTop", "cancelable", "_getPixelsScrolled", "scrollHeight", "_bubbleScroll", "_applyScrollModifier", "deltaMode", "WheelEvent", "DOM_DELTA_LINE", "DOM_DELTA_PAGE", "startLine", "endLine", "cursorElement", "currentLine", "bufferElements", "isWrapped", "div", "DOM_DELTA_PIXEL", "floor", "modifier", "fastScrollModifier", "fastScrollSensitivity", "scrollSensitivity", "touches", "pageY", "_screenElement", "_decorationElements", "_altBufferIsActive", "_dimensionsChanged", "_container", "_doRefreshDecorations", "_queueRefresh", "onDecorationRegistered", "onDecorationRemoved", "decoration", "_removeDecoration", "addRefreshCallback", "_renderDecoration", "_refreshStyle", "_refreshXPosition", "layer", "marker", "display", "onRenderEmitter", "_createElement", "onDispose", "delete", "anchor", "right", "_zones", "_zonePool", "_zonePoolIndex", "_linePadding", "full", "center", "zones", "overviewRulerOptions", "z", "_lineIntersectsZone", "_lineAdjacentToZone", "_addLineToZone", "startBufferLine", "endBufferLine", "padding", "zone", "drawHeight", "drawWidth", "drawX", "_width", "_colorZoneStore", "ColorZoneStore", "_shouldUpdateDimensions", "_shouldUpdateAnchor", "_lastKnownBufferLength", "_canvas", "_refreshCanvasDimensions", "parentElement", "insertBefore", "ctx", "getContext", "_ctx", "_registerDecorationListeners", "_registerBufferChangeListeners", "_registerDimensionChangeListeners", "normal", "_refreshDrawHeightConstants", "_refreshColorZonePadding", "_containerHeight", "clientHeight", "_refreshDrawConstants", "outerWidth", "innerWidth", "ceil", "pixelsPerLine", "nonFullHeight", "setPadding", "_refreshDecorations", "clearRect", "addDecoration", "lineWidth", "_renderColorZone", "fillStyle", "fillRect", "updateCanvasDimensions", "updateAnchor", "_isComposing", "_textarea", "_coreService", "_isSendingComposition", "_compositionPosition", "_dataAlreadySent", "_finalizeComposition", "_handleAnyTextareaChanges", "waitForPropagation", "currentCompositionPosition", "input", "substring", "oldValue", "newValue", "DEL", "dontRecurse", "fontFamily", "fontSize", "compositionViewBounds", "ICoreService", "getCoordsRelativeToElement", "rect", "elementStyle", "getComputedStyle", "leftPadding", "getPropertyValue", "topPadding", "colCount", "hasValidCharSize", "cssCellWidth", "cssCellHeight", "isSelection", "moveToRequestedRow", "startY", "targetY", "bufferService", "applicationCursor", "wrappedRowsForRow", "rowsToMove", "wrappedRows", "direction", "verticalDirection", "repeat", "currentRow", "lineWraps", "startCol", "endCol", "forward", "currentCol", "bufferStr", "translateBufferLineToString", "mod", "count", "str", "rpt", "targetX", "rowDifference", "currX", "TERMINAL_CLASS_PREFIX", "ROW_CONTAINER_CLASS", "FG_CLASS_PREFIX", "BG_CLASS_PREFIX", "FOCUS_CLASS", "SELECTION_CLASS", "nextTerminalId", "_linkifier2", "f", "g", "m", "S", "w", "_terminalClass", "_selectionRenderModel", "createSelectionRenderModel", "_refreshRowElements", "_selectionContainer", "createRenderDimensions", "_updateDimensions", "onOptionChange", "_handleOptionsChanged", "_injectCss", "_rowFactory", "DomRendererRowFactory", "_handleLinkHover", "_handleLinkLeave", "_widthCache", "_themeStyleElement", "_dimensionsStyleElement", "WidthCache", "setFont", "fontWeight", "fontWeightBold", "_setDefaultSpacing", "letterSpacing", "overflow", "styles", "_terminalSelector", "foreground", "multiplyOpacity", "blinkAnimationUnderlineId", "blinkAnimationBarId", "blinkAnimationBlockId", "cursor", "cursorAccent", "cursorWidth", "selectionBackgroundOpaque", "selectionInactiveBackgroundOpaque", "c", "INVERTED_DEFAULT_COLOR", "opaque", "spacing", "defaultSpacing", "handleDevicePixelRatioChange", "handleCharSizeChanged", "renderRows", "replaceChildren", "update", "viewportStartRow", "viewportEndRow", "viewportCappedStartRow", "viewportCappedEndRow", "documentFragment", "isXFlipped", "_createSelectionElement", "middleRowsCount", "colStart", "colEnd", "cursorAbsoluteY", "cursorBlink", "cursorStyle", "cursorInactiveStyle", "createRow", "_setCellUnderline", "enabled", "maxY", "bufferline", "_workCell", "_columnSelectMode", "_selectionStart", "_selectionEnd", "isCursorRow", "widthCache", "linkStart", "linkEnd", "elements", "joinedRanges", "getJoinedCharacters", "charElement", "getNoBgTrimmedLength", "cellAmount", "oldBg", "oldFg", "oldExt", "oldLinkHover", "oldSpacing", "oldIsInSelection", "classes", "hasHover", "isJoined", "lastCharX", "JoinedCellData", "isInSelection", "_isCellInSelection", "isCursorCell", "isLinkHover", "isDecorated", "forEachDecorationAtCell", "d", "chars", "getChars", "WHITESPACE_CELL_CHAR", "isUnderline", "isOverline", "isBold", "isItalic", "selectionForeground", "ext", "isInvisible", "isCursorHidden", "isFocused", "isDim", "underlineStyle", "isUnderlineColorDefault", "isUnderlineColorRGB", "textDecorationColor", "AttributeData", "getUnderlineColor", "join", "drawBoldTextInBrightColors", "isStrikethrough", "textDecoration", "getFgColor", "fgColorMode", "getFgColorMode", "getBgColor", "bgColorMode", "getBgColorMode", "isInverse", "temp", "temp2", "bgOverride", "fgOverride", "resolvedBg", "isTop", "backgroundColorRGB", "rgba", "foregroundColorRGB", "_addStyle", "padStart", "_applyMinimumContrast", "className", "minimumContrastRatio", "treatGlyphAsBackgroundColor", "getCode", "cache", "_getContrastCache", "adjustedColor", "getColor", "ratio", "ensureContrastRatio", "setColor", "halfContrastCache", "contrastCache", "padChar", "_flat", "Float32Array", "_font", "_fontSize", "_weight", "_weightBold", "_measureElements", "whiteSpace", "fontKerning", "regular", "bold", "italic", "fontStyle", "boldItalic", "_holey", "fill", "font", "weight", "weightBold", "cp", "_measure", "variant", "DIM_OPACITY", "TEXT_BASELINE", "isLegacyEdge", "isPowerlineGlyph", "codepoint", "isEmoji", "glyphSizeX", "deviceCellWidth", "currentOffset", "SelectionRenderModel", "constructor", "terminal", "viewportY", "isSelectAllActive", "selectionStartLength", "finalSelectionStart", "areSelectionValuesReversed", "finalSelectionEnd", "startPlusLength", "_onCharSizeChange", "onCharSizeChange", "_measureStrategy", "TextMetricsMeasureStrategy", "DomMeasureStrategy", "onMultipleOptionChange", "BaseMeasureStategy", "_result", "_parentElement", "_measureElement", "_validateAndSet", "Number", "OffscreenCanvas", "measureText", "metrics", "fontBoundingBoxAscent", "fontBoundingBoxDescent", "firstCell", "content", "combinedData", "isCombined", "getAsCharData", "_characterJoiners", "_nextCharacterJoinerId", "joiner", "id", "ranges", "lineStr", "rangeStartColumn", "currentStringIndex", "rangeStartStringIndex", "rangeAttrFG", "getFg", "rangeAttrBG", "getBg", "_getJoinedRanges", "startIndex", "endIndex", "allJoinedRanges", "joinerRanges", "_mergeRanges", "_stringRangesToCellRanges", "currentRangeIndex", "currentRangeStarted", "currentRange", "getString", "newRange", "inRange", "_window", "_isFocused", "_cachedIsFocused", "_screenDprMonitor", "ScreenDprMonitor", "_onDprChange", "_onWindowChange", "onWindowChange", "setWindow", "devicePixelRatio", "hasFocus", "queueMicrotask", "_parentWindow", "_windowResizeListener", "_outerListener", "_setDprAndFireIfDiffers", "_currentDevicePixelRatio", "_updateDpr", "_setWindowResizeListener", "clearListener", "parentWindow", "_resolutionMediaMatchList", "removeListener", "matchMedia", "addListener", "providerIndex", "indexOf", "_renderer", "decorationService", "coreBrowserService", "_pausedResizeTask", "DebouncedIdleTask", "_observerDisposable", "_isPaused", "_needsFullRefresh", "_isNextRenderRedrawOnly", "_needsSelectionRefresh", "_canvasWidth", "_canvasHeight", "_selectionState", "_onDimensionsChange", "_onRenderedViewportChange", "_onRefreshRequest", "onRefreshRequest", "_renderDebouncer", "RenderDebouncer", "_fullRefresh", "_registerIntersectionObserver", "observer", "IntersectionObserver", "_handleIntersectionChange", "threshold", "observe", "disconnect", "entry", "isIntersecting", "intersectionRatio", "flush", "isRedrawOnly", "_fireOnCanvasResize", "renderer", "NON_BREAKING_SPACE_CHAR", "ALL_NON_BREAKING_SPACE_REGEX", "RegExp", "_linkifier", "_dragScrollAmount", "_enabled", "_mouseDownTimeStamp", "_oldHasSelection", "_oldSelectionStart", "_oldSelectionEnd", "_onLinuxMouseSelection", "_onRedrawRequest", "_mouseMoveListener", "_mouseUpListener", "onUserInput", "_trimListener", "onTrim", "_handleTrim", "_handleBufferActivate", "_model", "SelectionModel", "_activeSelectionMode", "_removeMouseDownListeners", "lineText", "startRowEndCol", "isLinuxMouseSelection", "_getMouseBufferCoords", "_areCoordsInSelection", "allowWhitespaceOnlySelection", "getRangeLength", "_selectWordAt", "handleTrim", "terminalHeight", "macOptionClickForcesSelection", "timeStamp", "_handleIncrementalClick", "detail", "_handleSingleClick", "_handleDoubleClick", "_handleTripleClick", "_addMouseDownListeners", "_dragScrollIntervalTimer", "setInterval", "_dragScroll", "clearInterval", "hasWidth", "_selectWordAtCursor", "_selectLineAt", "previousSelectionEnd", "_selectToWordAt", "_getMouseEventScrollAmount", "timeElapsed", "altClickMovesCursor", "coordinates", "moveToCellSequence", "_fireEventIfSelectionChanged", "_fireOnSelectionChange", "charIndex", "_isClickInSelection", "followWrappedLinesAbove", "followWrappedLinesBelow", "_convertViewportColToCharacterIndex", "charOffset", "leftWideCharCount", "rightWideCharCount", "leftLongCharOffset", "rightLongCharOffset", "charAt", "_isCharWordSeparator", "trim", "getCodePoint", "previousBufferLine", "previousLineWordPosition", "_getWordAt", "nextBufferLine", "nextLineWordPosition", "wordPosition", "wordSeparator", "wrappedRange", "getWrappedRangeForLine", "first", "last", "createDecorator", "DEFAULT_FOREGROUND", "DEFAULT_BACKGROUND", "DEFAULT_CURSOR", "DEFAULT_CURSOR_ACCENT", "DEFAULT_SELECTION", "DEFAULT_ANSI_COLORS", "freeze", "b", "toCss", "toRgba", "_colors", "_contrastCache", "ColorContrastCache", "_halfContrastCache", "_onChangeColors", "selectionBackgroundTransparent", "blend", "selectionInactiveBackgroundTransparent", "_updateRestoreColors", "_setTheme", "theme", "parseColor", "selectionBackground", "selectionInactiveBackground", "NULL_COLOR", "isOpaque", "opacity", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "brightBlack", "brightRed", "brightGreen", "brightYellow", "brightBlue", "brightMagenta", "brightCyan", "brightWhite", "extendedAnsi", "colorCount", "slot", "_restoreColor", "_restoreColors", "cssString", "fallback", "CircularList", "_maxLength", "onDeleteEmitter", "onDelete", "onInsertEmitter", "onInsert", "onTrimEmitter", "_array", "Array", "_startIndex", "_length", "maxLength", "newMaxLength", "newArray", "_getCyclicIndex", "newLength", "recycle", "isFull", "deleteCount", "items", "countToTrim", "expandListBy", "clone", "val", "depth", "clonedObject", "isArray", "$r", "$g", "$b", "$a", "rgb", "toPaddedHex", "contrastRatio", "l1", "l2", "toChannels", "fgR", "fgG", "fgB", "bgR", "bgG", "bgB", "rgbaColor", "factor", "$ctx", "$litmusColor", "willReadFrequently", "globalCompositeOperation", "createLinearGradient", "match", "rgbaMatch", "parseFloat", "getImageData", "relativeLuminance2", "rs", "gs", "bs", "pow", "relativeLuminance", "reduceLuminance", "bgRgba", "fgRgba", "cr", "increaseLuminance", "bgL", "fgL", "resultA", "resultARatio", "resultB", "hasWriteSyncWarnHappened", "_onScrollApi", "_windowsWrappingHeuristics", "_onBinary", "onBinary", "_onData", "onData", "_onLineFeed", "_onResize", "_onWriteParsed", "onWriteParsed", "InstantiationService", "OptionsService", "BufferService", "LogService", "ILogService", "CoreService", "CoreMouseService", "ICoreMouseService", "unicodeService", "UnicodeService", "IUnicodeService", "_charsetService", "CharsetService", "ICharsetService", "OscLinkService", "InputHandler", "onRequestScrollToBottom", "_writeBuffer", "handleUserInput", "_handleWindowsPtyOptionChange", "markRangeDirty", "scrollBottom", "WriteBuffer", "promiseResult", "parse", "write", "maxSubsequentCalls", "LogLevelEnum", "WARN", "writeSync", "wasUserInput", "MINIMUM_COLS", "MINIMUM_ROWS", "eraseAttr", "scroll", "pageCount", "scrollToTop", "scrollAmount", "registerEscHandler", "registerDcsHandler", "registerCsiHandler", "registerOscHandler", "windowsPty", "buildNumber", "backend", "windowsMode", "_enableWindowsWrappingHeuristics", "disposables", "updateWindowsModeWrappedState", "final", "_listeners", "_disposed", "_event", "listener", "arg1", "arg2", "queue", "call", "clearListeners", "from", "to", "GLEVEL", "MAX_PARSEBUFFER_LENGTH", "paramToWindowOption", "opts", "setWinLines", "restoreWin", "minimizeWin", "setWinPosition", "setWinSizePixels", "raiseWin", "lowerWin", "refreshWin", "setWinSizeChars", "maximizeWin", "fullscreenWin", "getWinState", "getWinPosition", "getWinSizePixels", "getScreenSizePixels", "getCellSizePixels", "getWinSizeChars", "getScreenSizeChars", "getIconTitle", "getWinTitle", "pushTitle", "popTitle", "$temp", "getAttrData", "_curAttrData", "_coreMouseService", "_unicodeService", "_parser", "EscapeSequenceParser", "_parseBuffer", "Uint32Array", "_stringDecoder", "StringToUtf32", "_utf8Decoder", "Utf8ToUtf32", "_windowTitle", "_iconName", "_windowTitleStack", "_iconNameStack", "_eraseAttrDataInternal", "_onRequestBell", "_onRequestRefreshRows", "_onRequestReset", "_onRequestSendFocus", "_onRequestSyncScrollBar", "_onRequestWindowsOptionsReport", "_onA11yChar", "_onA11yTab", "_onColor", "_parseStack", "paused", "cursorStartX", "cursorStartY", "decodedLength", "_specialColors", "_dirtyRowTracker", "DirtyRowTracker", "setCsiHandlerFallback", "params", "identifier", "identToString", "toArray", "setEscHandlerFallback", "setExecuteHandlerFallback", "code", "setOscHandlerFallback", "setDcsHandlerFallback", "payload", "setPrintHandler", "print", "insertChars", "intermediates", "scrollLeft", "cursorUp", "scrollRight", "cursorDown", "cursorForward", "cursorBackward", "cursorNextLine", "cursorPrecedingLine", "cursorCharAbsolute", "cursorPosition", "cursorForwardTab", "eraseInDisplay", "prefix", "eraseInLine", "insertLines", "deleteLines", "deleteChars", "scrollUp", "scrollDown", "eraseChars", "cursorBackwardTab", "charPosAbsolute", "hPositionRelative", "repeatPrecedingCharacter", "sendDeviceAttributesPrimary", "sendDeviceAttributesSecondary", "linePosAbsolute", "vPositionRelative", "hVPosition", "tabClear", "setMode", "setModePrivate", "resetMode", "resetModePrivate", "charAttributes", "deviceStatus", "deviceStatusPrivate", "softReset", "setCursorStyle", "setScrollRegion", "saveCursor", "windowOptions", "restoreCursor", "insertColumns", "deleteColumns", "selectProtected", "requestMode", "setExecuteHandler", "BEL", "bell", "LF", "lineFeed", "VT", "FF", "carriageReturn", "BS", "backspace", "HT", "tab", "SO", "shiftOut", "SI", "shiftIn", "C1", "IND", "NEL", "nextLine", "HTS", "tabSet", "OscHandler", "setTitle", "setIconName", "setOrReportIndexedColor", "setHyperlink", "setOrReportFgColor", "setOrReportBgColor", "setOrReportCursorColor", "restoreIndexedColor", "restoreFgColor", "restoreBgColor", "restoreCursorColor", "reverseIndex", "keypadApplicationMode", "keypadNumericMode", "fullReset", "setgLevel", "selectDefaultCharset", "flag", "CHARSETS", "selectCharset", "screenAlignmentPattern", "setErrorHandler", "DcsHandler", "requestStatusString", "p", "Promise", "race", "res", "rej", "catch", "err", "_getCurrentLinkId", "wasPaused", "_logSlowResolvingAsync", "DEBUG", "prototype", "split", "clearRange", "len", "decode", "subarray", "_preserveStack", "viewportEnd", "viewportStart", "chWidth", "charset", "wraparoundMode", "wraparound", "insertMode", "modes", "curAttr", "bufferRow", "markDirty", "setCellFromCodepoint", "precedingJoinState", "ch", "currentInfo", "charProperties", "extractWidth", "shouldJoin", "extractShouldJoin", "oldWidth", "stringFromCodePoint", "addLineToLink", "oldRow", "oldCol", "_eraseAttrData", "BufferLine", "copyCellsFrom", "addCodepointToCell", "delta", "insertCells", "getNullCell", "NULL_CELL_CODE", "NULL_CELL_WIDTH", "convertEol", "reverseWraparound", "_restrictCursor", "originalX", "nextStop", "maxCol", "_setCursor", "diffToTop", "_moveCursor", "diffToBottom", "param", "tabs", "prevStop", "clearWrap", "respectProtect", "replaceCells", "clearMarkers", "_eraseInBufferLine", "_resetBufferLine", "scrollBackSize", "trimStart", "scrollBottomRowsOffset", "scrollBottomAbsolute", "deleteCells", "joinState", "idata", "itext", "codePointAt", "tlength", "copyWithin", "_is", "term", "termName", "setgCharset", "DEFAULT_CHARSET", "applicationKeypad", "activeEncoding", "activateAltBuffer", "activateNormalBuffer", "dm", "mouseProtocol", "mouseEncoding", "cs", "b2v", "mode", "c1", "c2", "c3", "fromColorRGB", "attr", "accu", "cSpace", "advance", "hasSubParams", "subparams", "getSubParams", "_updateAttrColor", "underlineColor", "updateExtended", "_processSGR0", "l", "_processUnderline", "_extractColor", "savedX", "savedY", "savedCurAttrData", "savedCharset", "isBlinking", "bottom", "second", "_savedCharset", "slots", "idx", "spec", "exec", "isValidColorIndex", "args", "_createHyperlink", "_finishHyperlink", "parsedParams", "idParamIndex", "findIndex", "startsWith", "registerLink", "_setOrReportSpecialColor", "collectAndFlag", "scrollRegionHeight", "shiftElements", "level", "yOffset", "markAllDirty", "isProtected", "_disposables", "_value", "array", "_data", "third", "fourth", "isNode", "process", "userAgent", "navigator", "platform", "isSafari", "majorVersion", "isIpad", "isIphone", "_getKey", "_search", "values", "mid", "midKey", "TaskQueue", "_tasks", "_i", "task", "_start", "_idleCallback", "_cancelCallback", "_requestCallback", "_process", "deadline", "taskDuration", "longestTask", "lastDeadlineRemaining", "timeRemaining", "deadlineRemaining", "PriorityTaskQueue", "_createDeadline", "duration", "IdleTaskQueue", "requestIdleCallback", "cancelIdleCallback", "_queue", "enqueue", "lastChar", "CHAR_DATA_CODE_INDEX", "WHITESPACE_CELL_CODE", "ExtendedAttrs", "newObj", "isBlink", "isFgRGB", "isBgRGB", "isFgPalette", "isBgPalette", "isFgDefault", "isBgDefault", "isAttributeDefault", "isEmpty", "getUnderlineColorMode", "isUnderlineColorPalette", "getUnderlineStyle", "getUnderlineVariantOffset", "underlineVariantOffset", "_urlId", "_ext", "MAX_BUFFER_SIZE", "_hasScrollback", "_nullCell", "fromCharData", "NULL_CELL_CHAR", "_whitespaceCell", "WHITESPACE_CELL_WIDTH", "_isClearing", "_memoryCleanupQueue", "_memoryCleanupPosition", "_cols", "_rows", "_getCorrectBufferLength", "setupTabStops", "relativeY", "correctBufferLength", "scrollback", "fillAttr", "newCols", "newRows", "nullCell", "dirtyMemoryLines", "addToY", "amountToTrim", "_isReflowEnabled", "_reflow", "_batchedMemoryCleanup", "normalRun", "counted", "cleanupMemory", "_reflowLarger", "_reflowSmaller", "toRemove", "reflowLargerGetLinesToRemove", "newLayoutResult", "reflowLargerCreateNewLayout", "reflowLargerApplyNewLayout", "layout", "_reflowLargerAdjustViewport", "countRemoved", "viewportAdjustments", "toInsert", "countToInsert", "wrappedLines", "absoluteY", "lastLineLength", "destLineLengths", "reflowSmallerGetNewLineLengths", "linesToAdd", "trimmedLines", "newLines", "newLine", "destLineIndex", "destCol", "srcLineIndex", "srcCol", "cellsToCopy", "wrappedLinesIndex", "getWrappedLineTrimmedLength", "setCell", "insertEvents", "originalLines", "originalLinesLength", "originalLineIndex", "nextToInsertIndex", "nextToInsert", "countInsertedSoFar", "nextI", "insertCountEmitted", "lineIndex", "trimRight", "tabStopWidth", "Marker", "_removeMarker", "$startIndex", "fillCellData", "_combined", "_extendedAttrs", "CHAR_DATA_ATTR_INDEX", "CHAR_DATA_CHAR_INDEX", "CHAR_DATA_WIDTH_INDEX", "codePoint", "attrs", "byteLength", "uint32Cells", "keys", "extKeys", "src", "applyInReverse", "srcData", "srcCombinedKeys", "outColumns", "bufferCols", "endsInNull", "followingLineStartsWithWide", "oldCols", "bufferAbsoluteY", "srcTrimmedTineLength", "srcRemainingCells", "destRemainingCells", "countToRemove", "nextToRemoveIndex", "nextToRemoveStart", "countRemovedSoFar", "newLayout", "newLayoutLines", "newLineLengths", "cellsNeeded", "reduce", "srcLine", "cellsAvailable", "oldTrimmedLength", "endsWithWide", "BufferSet", "_onBufferActivate", "_normal", "Buffer", "fillViewportRows", "_alt", "inactiveBuffer", "obj", "setFromCharData", "combined", "DEFAULT_COLOR", "DEFAULT_ATTR", "DEFAULT_EXT", "_id", "isDisposed", "_nextId", "_onDispose", "disposable", "C", "NUL", "SOH", "STX", "EOT", "ENQ", "ACK", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "EM", "SUB", "FS", "GS", "RS", "US", "SP", "PAD", "HOP", "BPH", "NBH", "SSA", "ESA", "HTJ", "VTS", "PLD", "PLU", "RI", "SS2", "SS3", "DCS", "PU1", "PU2", "STS", "CCH", "MW", "SPA", "EPA", "SOS", "SGCI", "SCI", "CSI", "OSC", "PM", "APC", "KEYCODE_KEY_MAPPINGS", "applicationCursorMode", "modifiers", "keyMapping", "keyString", "toUpperCase", "toLowerCase", "_interim", "startPos", "interim", "Uint8Array", "byte1", "byte2", "byte3", "byte4", "discardInterim", "tmp", "missing", "fourStop", "BMP_COMBINING", "HIGH_COMBINING", "table", "version", "num", "ucs", "preceding", "wcwidth", "createPropertyValue", "_action", "_callbacks", "_pendingData", "_bufferOffset", "_isSyncWriting", "_syncCalls", "_didUserInput", "chunk", "cb", "_innerWrite", "lastTime", "continuation", "resolve", "then", "RGB_REX", "HASH_REX", "pad", "bits", "s2", "low", "base", "adv", "PAYLOAD_LIMIT", "EMPTY_HANDLERS", "_handlers", "create", "_active", "_ident", "_handlerFb", "_stack", "loopPosition", "fallThrough", "handlerList", "handlerIndex", "unhook", "hook", "put", "utf32ToString", "success", "handlerResult", "EMPTY_PARAMS", "Params", "addParam", "_handler", "_params", "_hitLimit", "ret", "TransitionTable", "next", "codes", "NON_ASCII_PRINTABLE", "VT500_TRANSITION_TABLE", "blueprint", "apply", "unused", "PRINTABLES", "EXECUTABLES", "states", "setDefault", "addMany", "_transitions", "handlers", "handlerPos", "transition", "chunkPos", "initialState", "currentState", "_collect", "_printHandlerFb", "_executeHandlerFb", "_csiHandlerFb", "_escHandlerFb", "_errorHandlerFb", "_printHandler", "_executeHandlers", "_csiHandlers", "_escHandlers", "_oscParser", "OscParser", "_dcsParser", "DcsParser", "_errorHandler", "finalRange", "intermediate", "finalCode", "reverse", "clearPrintHandler", "_identifier", "registerHandler", "clearHandler", "setHandlerFallback", "clearErrorHandler", "collect", "abort", "addSubParam", "addDigit", "handlersEsc", "jj", "_state", "_put", "MAX_VALUE", "k", "maxSubParamsLength", "Int32Array", "_subParams", "_subParamsLength", "_subParamsIdx", "Uint16Array", "_rejectDigits", "_rejectSubDigits", "_digitIsSub", "newParams", "getSubParamsAll", "store", "cur", "_addons", "instance", "loadedAddon", "_wrappedAddonDispose", "_buffer", "baseY", "BufferLineApiView", "_line", "startColumn", "endColumn", "BufferNamespaceApi", "_core", "_onBufferChange", "onBufferChange", "BufferApiView", "_alternate", "alternate", "init", "provider", "versions", "activeVersion", "isUserScrolling", "_cachedBlankLine", "topRow", "bottomRow", "willBufferBeTrimmed", "copyFrom", "oldYdisp", "glevel", "_charsets", "DEFAULT_PROTOCOLS", "NONE", "restrict", "X10", "VT200", "DRAG", "ANY", "eventCode", "isSGR", "DEFAULT_ENCODINGS", "DEFAULT", "SGR", "SGR_PIXELS", "_protocols", "_encodings", "_activeProtocol", "_activeEncoding", "_lastEvent", "_onProtocolChange", "name", "addProtocol", "addEncoding", "encoding", "_equalEvents", "report", "triggerBinaryEvent", "down", "up", "drag", "move", "e1", "e2", "pixels", "DEFAULT_MODES", "DEFAULT_DEC_PRIVATE_MODES", "_onUserInput", "_onRequestScrollToBottom", "disableStdin", "$xmin", "$xmax", "_decorations", "SortedList", "_onDecorationRegistered", "_onDecorationRemoved", "Decoration", "markerDispose", "insert", "xmin", "xmax", "getKeyIterator", "forEachByKey", "_cachedBg", "_cachedFg", "foregroundColor", "ServiceCollection", "_entries", "service", "_services", "ctor", "serviceDependencies", "getServiceDependencies", "sort", "serviceArgs", "dependency", "firstServiceArgPos", "optionsKeyToLogLevel", "trace", "TRACE", "info", "INFO", "ERROR", "off", "OFF", "traceLogger", "_logLevel", "_updateLogLevel", "optionalParams", "message", "_evalLazyOptionalParams", "logger", "_log", "log", "_target", "descriptor", "fn", "JSON", "stringify", "DEFAULT_OPTIONS", "customGlyphs", "allowProposedApi", "allowTransparency", "rescaleOverlappingGlyphs", "FONT_WEIGHT_OPTIONS", "_onOptionChange", "defaultOptions", "_sanitizeAndValidateOption", "_setupOptions", "eventKey", "getter", "propName", "setter", "desc", "defineProperty", "_entriesWithId", "_dataByLinkId", "_removeMarkerFromLink", "castData", "_getEntryIdKey", "linkId", "every", "linkData", "DI_TARGET", "DI_DEPENDENCIES", "serviceRegistry", "decorator", "arguments", "_providers", "_onChange", "onChange", "defaultProvider", "UnicodeV6", "_activeProvider", "precedingInfo", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "CONSTRUCTOR_ONLY_OPTIONS", "_addonManager", "AddonManager", "_publicOptions", "_checkReadonlyOptions", "_checkProposedApi", "parser", "ParserApi", "unicode", "UnicodeApi", "mouseTrackingMode", "applicationCursorKeysMode", "applicationKeypadMode", "originMode", "reverseWraparoundMode", "sendFocusMode", "_verifyIntegers", "attachCustomKeyEventHandler", "attachCustomWheelEventHandler", "registerCharacterJoiner", "deregisterCharacterJoiner", "registerMarker", "_verifyPositiveIntegers", "scrollPages", "scrollToLine", "addon", "loadAddon", "strings", "Infinity"]
}
