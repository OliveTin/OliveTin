{
  "version": 3,
  "sources": ["../../@bufbuild/protobuf/dist/esm/reflect/names.js", "../../@bufbuild/protobuf/dist/esm/wire/varint.js", "../../@bufbuild/protobuf/dist/esm/proto-int64.js", "../../@bufbuild/protobuf/dist/esm/descriptors.js", "../../@bufbuild/protobuf/dist/esm/reflect/scalar.js", "../../@bufbuild/protobuf/dist/esm/reflect/unsafe.js", "../../@bufbuild/protobuf/dist/esm/codegenv2/restore-json-names.js", "../../@bufbuild/protobuf/dist/esm/wire/text-format.js", "../../@bufbuild/protobuf/dist/esm/reflect/nested-types.js", "../../@bufbuild/protobuf/dist/esm/registry.js", "../../@bufbuild/protobuf/dist/esm/codegenv2/boot.js", "../../@bufbuild/protobuf/dist/esm/fields.js", "../../@bufbuild/protobuf/dist/esm/wire/base64-encoding.js", "../../@bufbuild/protobuf/dist/esm/is-message.js", "../../@bufbuild/protobuf/dist/esm/reflect/error.js", "../../@bufbuild/protobuf/dist/esm/reflect/guard.js", "../../@bufbuild/protobuf/dist/esm/wire/text-encoding.js", "../../@bufbuild/protobuf/dist/esm/wire/binary-encoding.js", "../../@bufbuild/protobuf/dist/esm/reflect/reflect-check.js", "../../@bufbuild/protobuf/dist/esm/wkt/wrappers.js", "../../@bufbuild/protobuf/dist/esm/create.js", "../../@bufbuild/protobuf/dist/esm/reflect/reflect.js", "../../@bufbuild/protobuf/dist/esm/to-binary.js", "../../@bufbuild/protobuf/dist/esm/clone.js", "../../@bufbuild/protobuf/dist/esm/codegenv2/message.js", "../../@bufbuild/protobuf/dist/esm/codegenv2/enum.js", "../../@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/descriptor_pb.js", "../../@bufbuild/protobuf/dist/esm/codegenv2/embed.js", "../../@bufbuild/protobuf/dist/esm/codegenv2/extension.js", "../../@bufbuild/protobuf/dist/esm/from-binary.js", "../../@bufbuild/protobuf/dist/esm/codegenv2/file.js", "../../@bufbuild/protobuf/dist/esm/codegenv2/service.js", "../../@bufbuild/protobuf/dist/esm/codegenv2/symbols.js", "../../@bufbuild/protobuf/dist/esm/codegenv2/scalar.js"],
  "sourcesContent": ["// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Return a fully-qualified name for a Protobuf descriptor.\n * For a file descriptor, return the original file path.\n *\n * See https://protobuf.com/docs/language-spec#fully-qualified-names\n */\nexport function qualifiedName(desc) {\n    switch (desc.kind) {\n        case \"field\":\n        case \"oneof\":\n        case \"rpc\":\n            return desc.parent.typeName + \".\" + desc.name;\n        case \"enum_value\": {\n            const p = desc.parent.parent\n                ? desc.parent.parent.typeName\n                : desc.parent.file.proto.package;\n            return p + (p.length > 0 ? \".\" : \"\") + desc.name;\n        }\n        case \"service\":\n        case \"message\":\n        case \"enum\":\n        case \"extension\":\n            return desc.typeName;\n        case \"file\":\n            return desc.proto.name;\n    }\n}\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */\nexport function protoCamelCase(snakeCase) {\n    let capNext = false;\n    const b = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let c = snakeCase.charAt(i);\n        switch (c) {\n            case \"_\":\n                capNext = true;\n                break;\n            case \"0\":\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                b.push(c);\n                capNext = false;\n                break;\n            default:\n                if (capNext) {\n                    capNext = false;\n                    c = c.toUpperCase();\n                }\n                b.push(c);\n                break;\n        }\n    }\n    return b.join(\"\");\n}\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst reservedObjectProperties = new Set([\n    // names reserved by JavaScript\n    \"constructor\",\n    \"toString\",\n    \"toJSON\",\n    \"valueOf\",\n]);\n/**\n * Escapes names that are reserved for ECMAScript built-in object properties.\n *\n * Also see safeIdentifier() from @bufbuild/protoplugin.\n */\nexport function safeObjectProperty(name) {\n    return reservedObjectProperties.has(name) ? name + \"$\" : name;\n}\n", "// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = bits.hi & 0x80000000;\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1fffff) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xffffff;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xffffff;\n    const high = (hi >> 16) & 0xffff;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + mid * 6777216 + high * 6710656;\n    let digitB = mid + high * 8147497;\n    let digitC = high * 2;\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return (digitC.toString() +\n        decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA));\n}\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { int64FromString, int64ToString, uInt64ToString, } from \"./wire/varint.js\";\n/**\n * Int64Support for the current environment.\n */\nexport const protoInt64 = /*@__PURE__*/ makeInt64Support();\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\");\n        const MAX = BigInt(\"9223372036854775807\");\n        const UMIN = BigInt(\"0\");\n        const UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`invalid int64: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`invalid uint64: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return int64FromString(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return int64FromString(value);\n        },\n        dec(lo, hi) {\n            return int64ToString(lo, hi);\n        },\n        uDec(lo, hi) {\n            return uInt64ToString(lo, hi);\n        },\n    };\n}\nfunction assertInt64String(value) {\n    if (!/^-?[0-9]+$/.test(value)) {\n        throw new Error(\"invalid int64: \" + value);\n    }\n}\nfunction assertUInt64String(value) {\n    if (!/^[0-9]+$/.test(value)) {\n        throw new Error(\"invalid uint64: \" + value);\n    }\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { protoInt64 } from \"../proto-int64.js\";\nimport { ScalarType } from \"../descriptors.js\";\n/**\n * Returns true if both scalar values are equal.\n */\nexport function scalarEquals(type, a, b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    switch (type) {\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\n/**\n * Returns the zero value for the given scalar type.\n */\nexport function scalarZeroValue(type, longAsString) {\n    switch (type) {\n        case ScalarType.STRING:\n            return \"\";\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.INT64:\n        case ScalarType.UINT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.FIXED64:\n        case ScalarType.SINT64:\n            return (longAsString ? \"0\" : protoInt64.zero);\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n    }\n}\n/**\n * Returns true for a zero-value. For example, an integer has the zero-value `0`,\n * a boolean is `false`, a string is `\"\"`, and bytes is an empty Uint8Array.\n *\n * In proto3, zero-values are not written to the wire, unless the field is\n * optional or repeated.\n */\nexport function isScalarZeroValue(type, value) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return value === false;\n        case ScalarType.STRING:\n            return value === \"\";\n        case ScalarType.BYTES:\n            return value instanceof Uint8Array && !value.byteLength;\n        default:\n            return value == 0; // Loose comparison matches 0n, 0 and \"0\"\n    }\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { isScalarZeroValue, scalarZeroValue } from \"./scalar.js\";\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.IMPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst IMPLICIT = 2;\nexport const unsafeLocal = Symbol.for(\"reflect unsafe local\");\n/**\n * Return the selected field of a oneof group.\n *\n * @private\n */\nexport function unsafeOneofCase(\n// biome-ignore lint/suspicious/noExplicitAny: `any` is the best choice for dynamic access\ntarget, oneof) {\n    const c = target[oneof.localName].case;\n    if (c === undefined) {\n        return c;\n    }\n    return oneof.fields.find((f) => f.localName === c);\n}\n/**\n * Returns true if the field is set.\n *\n * @private\n */\nexport function unsafeIsSet(\n// biome-ignore lint/suspicious/noExplicitAny: `any` is the best choice for dynamic access\ntarget, field) {\n    const name = field.localName;\n    if (field.oneof) {\n        return target[field.oneof.localName].case === name;\n    }\n    if (field.presence != IMPLICIT) {\n        // Fields with explicit presence have properties on the prototype chain\n        // for default / zero values (except for proto3).\n        return (target[name] !== undefined &&\n            Object.prototype.hasOwnProperty.call(target, name));\n    }\n    switch (field.fieldKind) {\n        case \"list\":\n            return target[name].length > 0;\n        case \"map\":\n            return Object.keys(target[name]).length > 0;\n        case \"scalar\":\n            return !isScalarZeroValue(field.scalar, target[name]);\n        case \"enum\":\n            return target[name] !== field.enum.values[0].number;\n    }\n    throw new Error(\"message field with implicit presence\");\n}\n/**\n * Returns true if the field is set, but only for singular fields with explicit\n * presence (proto2).\n *\n * @private\n */\nexport function unsafeIsSetExplicit(target, localName) {\n    return (Object.prototype.hasOwnProperty.call(target, localName) &&\n        target[localName] !== undefined);\n}\n/**\n * Return a field value, respecting oneof groups.\n *\n * @private\n */\nexport function unsafeGet(target, field) {\n    if (field.oneof) {\n        const oneof = target[field.oneof.localName];\n        if (oneof.case === field.localName) {\n            return oneof.value;\n        }\n        return undefined;\n    }\n    return target[field.localName];\n}\n/**\n * Set a field value, respecting oneof groups.\n *\n * @private\n */\nexport function unsafeSet(target, field, value) {\n    if (field.oneof) {\n        target[field.oneof.localName] = {\n            case: field.localName,\n            value: value,\n        };\n    }\n    else {\n        target[field.localName] = value;\n    }\n}\n/**\n * Resets the field, so that unsafeIsSet() will return false.\n *\n * @private\n */\nexport function unsafeClear(\n// biome-ignore lint/suspicious/noExplicitAny: `any` is the best choice for dynamic access\ntarget, field) {\n    const name = field.localName;\n    if (field.oneof) {\n        const oneofLocalName = field.oneof.localName;\n        if (target[oneofLocalName].case === name) {\n            target[oneofLocalName] = { case: undefined };\n        }\n    }\n    else if (field.presence != IMPLICIT) {\n        // Fields with explicit presence have properties on the prototype chain\n        // for default / zero values (except for proto3). By deleting their own\n        // property, the field is reset.\n        delete target[name];\n    }\n    else {\n        switch (field.fieldKind) {\n            case \"map\":\n                target[name] = {};\n                break;\n            case \"list\":\n                target[name] = [];\n                break;\n            case \"enum\":\n                target[name] = field.enum.values[0].number;\n                break;\n            case \"scalar\":\n                target[name] = scalarZeroValue(field.scalar, field.longAsString);\n                break;\n        }\n    }\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { protoCamelCase } from \"../reflect/names.js\";\nimport { unsafeIsSetExplicit } from \"../reflect/unsafe.js\";\n/**\n * @private\n */\nexport function restoreJsonNames(message) {\n    for (const f of message.field) {\n        if (!unsafeIsSetExplicit(f, \"jsonName\")) {\n            f.jsonName = protoCamelCase(f.name);\n        }\n    }\n    message.nestedType.forEach(restoreJsonNames);\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType } from \"../descriptors.js\";\nimport { protoInt64 } from \"../proto-int64.js\";\n/**\n * Parse an enum value from the Protobuf text format.\n *\n * @private\n */\nexport function parseTextFormatEnumValue(descEnum, value) {\n    const enumValue = descEnum.values.find((v) => v.name === value);\n    if (!enumValue) {\n        throw new Error(`cannot parse ${descEnum} default value: ${value}`);\n    }\n    return enumValue.number;\n}\n/**\n * Parse a scalar value from the Protobuf text format.\n *\n * @private\n */\nexport function parseTextFormatScalarValue(type, value) {\n    switch (type) {\n        case ScalarType.STRING:\n            return value;\n        case ScalarType.BYTES: {\n            const u = unescapeBytesDefaultValue(value);\n            if (u === false) {\n                throw new Error(`cannot parse ${ScalarType[type]} default value: ${value}`);\n            }\n            return u;\n        }\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            return protoInt64.parse(value);\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n            return protoInt64.uParse(value);\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            switch (value) {\n                case \"inf\":\n                    return Number.POSITIVE_INFINITY;\n                case \"-inf\":\n                    return Number.NEGATIVE_INFINITY;\n                case \"nan\":\n                    return Number.NaN;\n                default:\n                    return parseFloat(value);\n            }\n        case ScalarType.BOOL:\n            return value === \"true\";\n        case ScalarType.INT32:\n        case ScalarType.UINT32:\n        case ScalarType.SINT32:\n        case ScalarType.FIXED32:\n        case ScalarType.SFIXED32:\n            return parseInt(value, 10);\n    }\n}\n/**\n * Parses a text-encoded default value (proto2) of a BYTES field.\n */\nfunction unescapeBytesDefaultValue(str) {\n    const b = [];\n    const input = {\n        tail: str,\n        c: \"\",\n        next() {\n            if (this.tail.length == 0) {\n                return false;\n            }\n            this.c = this.tail[0];\n            this.tail = this.tail.substring(1);\n            return true;\n        },\n        take(n) {\n            if (this.tail.length >= n) {\n                const r = this.tail.substring(0, n);\n                this.tail = this.tail.substring(n);\n                return r;\n            }\n            return false;\n        },\n    };\n    while (input.next()) {\n        switch (input.c) {\n            case \"\\\\\":\n                if (input.next()) {\n                    switch (input.c) {\n                        case \"\\\\\":\n                            b.push(input.c.charCodeAt(0));\n                            break;\n                        case \"b\":\n                            b.push(0x08);\n                            break;\n                        case \"f\":\n                            b.push(0x0c);\n                            break;\n                        case \"n\":\n                            b.push(0x0a);\n                            break;\n                        case \"r\":\n                            b.push(0x0d);\n                            break;\n                        case \"t\":\n                            b.push(0x09);\n                            break;\n                        case \"v\":\n                            b.push(0x0b);\n                            break;\n                        case \"0\":\n                        case \"1\":\n                        case \"2\":\n                        case \"3\":\n                        case \"4\":\n                        case \"5\":\n                        case \"6\":\n                        case \"7\": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 8);\n                            if (Number.isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case \"x\": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 16);\n                            if (Number.isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case \"u\": {\n                            const s = input.c;\n                            const t = input.take(4);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 16);\n                            if (Number.isNaN(n)) {\n                                return false;\n                            }\n                            const chunk = new Uint8Array(4);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0, n, true);\n                            b.push(chunk[0], chunk[1], chunk[2], chunk[3]);\n                            break;\n                        }\n                        case \"U\": {\n                            const s = input.c;\n                            const t = input.take(8);\n                            if (t === false) {\n                                return false;\n                            }\n                            const tc = protoInt64.uEnc(s + t);\n                            const chunk = new Uint8Array(8);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0, tc.lo, true);\n                            view.setInt32(4, tc.hi, true);\n                            b.push(chunk[0], chunk[1], chunk[2], chunk[3], chunk[4], chunk[5], chunk[6], chunk[7]);\n                            break;\n                        }\n                    }\n                }\n                break;\n            default:\n                b.push(input.c.charCodeAt(0));\n        }\n    }\n    return new Uint8Array(b);\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Iterate over all types - enumerations, extensions, services, messages -\n * and enumerations, extensions and messages nested in messages.\n */\nexport function* nestedTypes(desc) {\n    switch (desc.kind) {\n        case \"file\":\n            for (const message of desc.messages) {\n                yield message;\n                yield* nestedTypes(message);\n            }\n            yield* desc.enums;\n            yield* desc.services;\n            yield* desc.extensions;\n            break;\n        case \"message\":\n            for (const message of desc.nestedMessages) {\n                yield message;\n                yield* nestedTypes(message);\n            }\n            yield* desc.nestedEnums;\n            yield* desc.nestedExtensions;\n            break;\n    }\n}\n/**\n * Iterate over types referenced by fields of the given message.\n *\n * For example:\n *\n * ```proto\n * syntax=\"proto3\";\n *\n * message Example {\n *   Msg singular = 1;\n *   repeated Level list = 2;\n * }\n *\n * message Msg {}\n *\n * enum Level {\n *   LEVEL_UNSPECIFIED = 0;\n * }\n * ```\n *\n * The message Example references the message Msg, and the enum Level.\n */\nexport function usedTypes(descMessage) {\n    return usedTypesInternal(descMessage, new Set());\n}\nfunction* usedTypesInternal(descMessage, seen) {\n    var _a, _b;\n    for (const field of descMessage.fields) {\n        const ref = (_b = (_a = field.enum) !== null && _a !== void 0 ? _a : field.message) !== null && _b !== void 0 ? _b : undefined;\n        if (!ref || seen.has(ref.typeName)) {\n            continue;\n        }\n        seen.add(ref.typeName);\n        yield ref;\n        if (ref.kind == \"message\") {\n            yield* usedTypesInternal(ref, seen);\n        }\n    }\n}\n/**\n * Returns the ancestors of a given Protobuf element, up to the file.\n */\nexport function parentTypes(desc) {\n    const parents = [];\n    while (desc.kind !== \"file\") {\n        const p = parent(desc);\n        desc = p;\n        parents.push(p);\n    }\n    return parents;\n}\nfunction parent(desc) {\n    var _a;\n    switch (desc.kind) {\n        case \"enum_value\":\n        case \"field\":\n        case \"oneof\":\n        case \"rpc\":\n            return desc.parent;\n        case \"service\":\n            return desc.file;\n        case \"extension\":\n        case \"enum\":\n        case \"message\":\n            return (_a = desc.parent) !== null && _a !== void 0 ? _a : desc.file;\n    }\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType, } from \"./descriptors.js\";\nimport { parseTextFormatEnumValue, parseTextFormatScalarValue, } from \"./wire/text-format.js\";\nimport { nestedTypes } from \"./reflect/nested-types.js\";\nimport { unsafeIsSetExplicit } from \"./reflect/unsafe.js\";\nimport { protoCamelCase, safeObjectProperty } from \"./reflect/names.js\";\n/**\n * Create a registry from the given inputs.\n *\n * An input can be:\n * - Any message, enum, service, or extension descriptor, which adds just the\n *   descriptor for this type.\n * - A file descriptor, which adds all typed defined in this file.\n * - A registry, which adds all types from the registry.\n *\n * For duplicate descriptors (same type name), the one given last wins.\n */\nexport function createRegistry(...input) {\n    return initBaseRegistry(input);\n}\n/**\n * Create a registry that allows adding and removing descriptors.\n */\nexport function createMutableRegistry(...input) {\n    const reg = initBaseRegistry(input);\n    return Object.assign(Object.assign({}, reg), { remove(desc) {\n            var _a;\n            if (desc.kind == \"extension\") {\n                (_a = reg.extendees.get(desc.extendee.typeName)) === null || _a === void 0 ? void 0 : _a.delete(desc.number);\n            }\n            reg.types.delete(desc.typeName);\n        } });\n}\nexport function createFileRegistry(...args) {\n    const registry = createBaseRegistry();\n    if (!args.length) {\n        return registry;\n    }\n    if (\"$typeName\" in args[0] &&\n        args[0].$typeName == \"google.protobuf.FileDescriptorSet\") {\n        for (const file of args[0].file) {\n            addFile(file, registry);\n        }\n        return registry;\n    }\n    if (\"$typeName\" in args[0]) {\n        const input = args[0];\n        const resolve = args[1];\n        const seen = new Set();\n        function recurseDeps(file) {\n            const deps = [];\n            for (const protoFileName of file.dependency) {\n                if (registry.getFile(protoFileName) != undefined) {\n                    continue;\n                }\n                if (seen.has(protoFileName)) {\n                    continue;\n                }\n                const dep = resolve(protoFileName);\n                if (!dep) {\n                    throw new Error(`Unable to resolve ${protoFileName}, imported by ${file.name}`);\n                }\n                if (\"kind\" in dep) {\n                    registry.addFile(dep, false, true);\n                }\n                else {\n                    seen.add(dep.name);\n                    deps.push(dep);\n                }\n            }\n            return deps.concat(...deps.map(recurseDeps));\n        }\n        for (const file of [input, ...recurseDeps(input)].reverse()) {\n            addFile(file, registry);\n        }\n    }\n    else {\n        for (const fileReg of args) {\n            for (const file of fileReg.files) {\n                registry.addFile(file);\n            }\n        }\n    }\n    return registry;\n}\n/**\n * @private\n */\nfunction createBaseRegistry() {\n    const types = new Map();\n    const extendees = new Map();\n    const files = new Map();\n    return {\n        kind: \"registry\",\n        types,\n        extendees,\n        [Symbol.iterator]() {\n            return types.values();\n        },\n        get files() {\n            return files.values();\n        },\n        addFile(file, skipTypes, withDeps) {\n            files.set(file.proto.name, file);\n            if (!skipTypes) {\n                for (const type of nestedTypes(file)) {\n                    this.add(type);\n                }\n            }\n            if (withDeps) {\n                for (const f of file.dependencies) {\n                    this.addFile(f, skipTypes, withDeps);\n                }\n            }\n        },\n        add(desc) {\n            if (desc.kind == \"extension\") {\n                let numberToExt = extendees.get(desc.extendee.typeName);\n                if (!numberToExt) {\n                    extendees.set(desc.extendee.typeName, \n                    // biome-ignore lint/suspicious/noAssignInExpressions: no\n                    (numberToExt = new Map()));\n                }\n                numberToExt.set(desc.number, desc);\n            }\n            types.set(desc.typeName, desc);\n        },\n        get(typeName) {\n            return types.get(typeName);\n        },\n        getFile(fileName) {\n            return files.get(fileName);\n        },\n        getMessage(typeName) {\n            const t = types.get(typeName);\n            return (t === null || t === void 0 ? void 0 : t.kind) == \"message\" ? t : undefined;\n        },\n        getEnum(typeName) {\n            const t = types.get(typeName);\n            return (t === null || t === void 0 ? void 0 : t.kind) == \"enum\" ? t : undefined;\n        },\n        getExtension(typeName) {\n            const t = types.get(typeName);\n            return (t === null || t === void 0 ? void 0 : t.kind) == \"extension\" ? t : undefined;\n        },\n        getExtensionFor(extendee, no) {\n            var _a;\n            return (_a = extendees.get(extendee.typeName)) === null || _a === void 0 ? void 0 : _a.get(no);\n        },\n        getService(typeName) {\n            const t = types.get(typeName);\n            return (t === null || t === void 0 ? void 0 : t.kind) == \"service\" ? t : undefined;\n        },\n    };\n}\n/**\n * @private\n */\nfunction initBaseRegistry(inputs) {\n    const registry = createBaseRegistry();\n    for (const input of inputs) {\n        switch (input.kind) {\n            case \"registry\":\n                for (const n of input) {\n                    registry.add(n);\n                }\n                break;\n            case \"file\":\n                registry.addFile(input);\n                break;\n            default:\n                registry.add(input);\n                break;\n        }\n    }\n    return registry;\n}\n// bootstrap-inject google.protobuf.Edition.EDITION_PROTO2: const $name: Edition.$localName = $number;\nconst EDITION_PROTO2 = 998;\n// bootstrap-inject google.protobuf.Edition.EDITION_PROTO3: const $name: Edition.$localName = $number;\nconst EDITION_PROTO3 = 999;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Type.TYPE_STRING: const $name: FieldDescriptorProto_Type.$localName = $number;\nconst TYPE_STRING = 9;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Type.TYPE_GROUP: const $name: FieldDescriptorProto_Type.$localName = $number;\nconst TYPE_GROUP = 10;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Type.TYPE_MESSAGE: const $name: FieldDescriptorProto_Type.$localName = $number;\nconst TYPE_MESSAGE = 11;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Type.TYPE_BYTES: const $name: FieldDescriptorProto_Type.$localName = $number;\nconst TYPE_BYTES = 12;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Type.TYPE_ENUM: const $name: FieldDescriptorProto_Type.$localName = $number;\nconst TYPE_ENUM = 14;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Label.LABEL_REPEATED: const $name: FieldDescriptorProto_Label.$localName = $number;\nconst LABEL_REPEATED = 3;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Label.LABEL_REQUIRED: const $name: FieldDescriptorProto_Label.$localName = $number;\nconst LABEL_REQUIRED = 2;\n// bootstrap-inject google.protobuf.FieldOptions.JSType.JS_STRING: const $name: FieldOptions_JSType.$localName = $number;\nconst JS_STRING = 1;\n// bootstrap-inject google.protobuf.MethodOptions.IdempotencyLevel.IDEMPOTENCY_UNKNOWN: const $name: MethodOptions_IdempotencyLevel.$localName = $number;\nconst IDEMPOTENCY_UNKNOWN = 0;\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.EXPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst EXPLICIT = 1;\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.IMPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst IMPLICIT = 2;\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.LEGACY_REQUIRED: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst LEGACY_REQUIRED = 3;\n// bootstrap-inject google.protobuf.FeatureSet.RepeatedFieldEncoding.PACKED: const $name: FeatureSet_RepeatedFieldEncoding.$localName = $number;\nconst PACKED = 1;\n// bootstrap-inject google.protobuf.FeatureSet.MessageEncoding.DELIMITED: const $name: FeatureSet_MessageEncoding.$localName = $number;\nconst DELIMITED = 2;\n// bootstrap-inject google.protobuf.FeatureSet.EnumType.OPEN: const $name: FeatureSet_EnumType.$localName = $number;\nconst OPEN = 1;\n// biome-ignore format: want this to read well\n// bootstrap-inject defaults: EDITION_PROTO2 to EDITION_2023: export const minimumEdition: SupportedEdition = $minimumEdition, maximumEdition: SupportedEdition = $maximumEdition;\n// generated from protoc v31.1\nexport const minimumEdition = 998, maximumEdition = 1000;\nconst featureDefaults = {\n    // EDITION_PROTO2\n    998: {\n        fieldPresence: 1, // EXPLICIT,\n        enumType: 2, // CLOSED,\n        repeatedFieldEncoding: 2, // EXPANDED,\n        utf8Validation: 3, // NONE,\n        messageEncoding: 1, // LENGTH_PREFIXED,\n        jsonFormat: 2, // LEGACY_BEST_EFFORT,\n        enforceNamingStyle: 2, // STYLE_LEGACY,\n        defaultSymbolVisibility: 1, // EXPORT_ALL,\n    },\n    // EDITION_PROTO3\n    999: {\n        fieldPresence: 2, // IMPLICIT,\n        enumType: 1, // OPEN,\n        repeatedFieldEncoding: 1, // PACKED,\n        utf8Validation: 2, // VERIFY,\n        messageEncoding: 1, // LENGTH_PREFIXED,\n        jsonFormat: 1, // ALLOW,\n        enforceNamingStyle: 2, // STYLE_LEGACY,\n        defaultSymbolVisibility: 1, // EXPORT_ALL,\n    },\n    // EDITION_2023\n    1000: {\n        fieldPresence: 1, // EXPLICIT,\n        enumType: 1, // OPEN,\n        repeatedFieldEncoding: 1, // PACKED,\n        utf8Validation: 2, // VERIFY,\n        messageEncoding: 1, // LENGTH_PREFIXED,\n        jsonFormat: 1, // ALLOW,\n        enforceNamingStyle: 2, // STYLE_LEGACY,\n        defaultSymbolVisibility: 1, // EXPORT_ALL,\n    },\n};\n/**\n * Create a descriptor for a file, add it to the registry.\n */\nfunction addFile(proto, reg) {\n    var _a, _b;\n    const file = {\n        kind: \"file\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        edition: getFileEdition(proto),\n        name: proto.name.replace(/\\.proto$/, \"\"),\n        dependencies: findFileDependencies(proto, reg),\n        enums: [],\n        messages: [],\n        extensions: [],\n        services: [],\n        toString() {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions -- we asserted above\n            return `file ${proto.name}`;\n        },\n    };\n    const mapEntriesStore = new Map();\n    const mapEntries = {\n        get(typeName) {\n            return mapEntriesStore.get(typeName);\n        },\n        add(desc) {\n            var _a;\n            assert(((_a = desc.proto.options) === null || _a === void 0 ? void 0 : _a.mapEntry) === true);\n            mapEntriesStore.set(desc.typeName, desc);\n        },\n    };\n    for (const enumProto of proto.enumType) {\n        addEnum(enumProto, file, undefined, reg);\n    }\n    for (const messageProto of proto.messageType) {\n        addMessage(messageProto, file, undefined, reg, mapEntries);\n    }\n    for (const serviceProto of proto.service) {\n        addService(serviceProto, file, reg);\n    }\n    addExtensions(file, reg);\n    for (const mapEntry of mapEntriesStore.values()) {\n        // to create a map field, we need access to the map entry's fields\n        addFields(mapEntry, reg, mapEntries);\n    }\n    for (const message of file.messages) {\n        addFields(message, reg, mapEntries);\n        addExtensions(message, reg);\n    }\n    reg.addFile(file, true);\n}\n/**\n * Create descriptors for extensions, and add them to the message / file,\n * and to our cart.\n * Recurses into nested types.\n */\nfunction addExtensions(desc, reg) {\n    switch (desc.kind) {\n        case \"file\":\n            for (const proto of desc.proto.extension) {\n                const ext = newField(proto, desc, reg);\n                desc.extensions.push(ext);\n                reg.add(ext);\n            }\n            break;\n        case \"message\":\n            for (const proto of desc.proto.extension) {\n                const ext = newField(proto, desc, reg);\n                desc.nestedExtensions.push(ext);\n                reg.add(ext);\n            }\n            for (const message of desc.nestedMessages) {\n                addExtensions(message, reg);\n            }\n            break;\n    }\n}\n/**\n * Create descriptors for fields and oneof groups, and add them to the message.\n * Recurses into nested types.\n */\nfunction addFields(message, reg, mapEntries) {\n    const allOneofs = message.proto.oneofDecl.map((proto) => newOneof(proto, message));\n    const oneofsSeen = new Set();\n    for (const proto of message.proto.field) {\n        const oneof = findOneof(proto, allOneofs);\n        const field = newField(proto, message, reg, oneof, mapEntries);\n        message.fields.push(field);\n        message.field[field.localName] = field;\n        if (oneof === undefined) {\n            message.members.push(field);\n        }\n        else {\n            oneof.fields.push(field);\n            if (!oneofsSeen.has(oneof)) {\n                oneofsSeen.add(oneof);\n                message.members.push(oneof);\n            }\n        }\n    }\n    for (const oneof of allOneofs.filter((o) => oneofsSeen.has(o))) {\n        message.oneofs.push(oneof);\n    }\n    for (const child of message.nestedMessages) {\n        addFields(child, reg, mapEntries);\n    }\n}\n/**\n * Create a descriptor for an enumeration, and add it our cart and to the\n * parent type, if any.\n */\nfunction addEnum(proto, file, parent, reg) {\n    var _a, _b, _c, _d, _e;\n    const sharedPrefix = findEnumSharedPrefix(proto.name, proto.value);\n    const desc = {\n        kind: \"enum\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        parent,\n        open: true,\n        name: proto.name,\n        typeName: makeTypeName(proto, parent, file),\n        value: {},\n        values: [],\n        sharedPrefix,\n        toString() {\n            return `enum ${this.typeName}`;\n        },\n    };\n    desc.open = isEnumOpen(desc);\n    reg.add(desc);\n    for (const p of proto.value) {\n        const name = p.name;\n        desc.values.push(\n        // biome-ignore lint/suspicious/noAssignInExpressions: no\n        (desc.value[p.number] = {\n            kind: \"enum_value\",\n            proto: p,\n            deprecated: (_d = (_c = p.options) === null || _c === void 0 ? void 0 : _c.deprecated) !== null && _d !== void 0 ? _d : false,\n            parent: desc,\n            name,\n            localName: safeObjectProperty(sharedPrefix == undefined\n                ? name\n                : name.substring(sharedPrefix.length)),\n            number: p.number,\n            toString() {\n                return `enum value ${desc.typeName}.${name}`;\n            },\n        }));\n    }\n    ((_e = parent === null || parent === void 0 ? void 0 : parent.nestedEnums) !== null && _e !== void 0 ? _e : file.enums).push(desc);\n}\n/**\n * Create a descriptor for a message, including nested types, and add it to our\n * cart. Note that this does not create descriptors fields.\n */\nfunction addMessage(proto, file, parent, reg, mapEntries) {\n    var _a, _b, _c, _d;\n    const desc = {\n        kind: \"message\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        parent,\n        name: proto.name,\n        typeName: makeTypeName(proto, parent, file),\n        fields: [],\n        field: {},\n        oneofs: [],\n        members: [],\n        nestedEnums: [],\n        nestedMessages: [],\n        nestedExtensions: [],\n        toString() {\n            return `message ${this.typeName}`;\n        },\n    };\n    if (((_c = proto.options) === null || _c === void 0 ? void 0 : _c.mapEntry) === true) {\n        mapEntries.add(desc);\n    }\n    else {\n        ((_d = parent === null || parent === void 0 ? void 0 : parent.nestedMessages) !== null && _d !== void 0 ? _d : file.messages).push(desc);\n        reg.add(desc);\n    }\n    for (const enumProto of proto.enumType) {\n        addEnum(enumProto, file, desc, reg);\n    }\n    for (const messageProto of proto.nestedType) {\n        addMessage(messageProto, file, desc, reg, mapEntries);\n    }\n}\n/**\n * Create a descriptor for a service, including methods, and add it to our\n * cart.\n */\nfunction addService(proto, file, reg) {\n    var _a, _b;\n    const desc = {\n        kind: \"service\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        name: proto.name,\n        typeName: makeTypeName(proto, undefined, file),\n        methods: [],\n        method: {},\n        toString() {\n            return `service ${this.typeName}`;\n        },\n    };\n    file.services.push(desc);\n    reg.add(desc);\n    for (const methodProto of proto.method) {\n        const method = newMethod(methodProto, desc, reg);\n        desc.methods.push(method);\n        desc.method[method.localName] = method;\n    }\n}\n/**\n * Create a descriptor for a method.\n */\nfunction newMethod(proto, parent, reg) {\n    var _a, _b, _c, _d;\n    let methodKind;\n    if (proto.clientStreaming && proto.serverStreaming) {\n        methodKind = \"bidi_streaming\";\n    }\n    else if (proto.clientStreaming) {\n        methodKind = \"client_streaming\";\n    }\n    else if (proto.serverStreaming) {\n        methodKind = \"server_streaming\";\n    }\n    else {\n        methodKind = \"unary\";\n    }\n    const input = reg.getMessage(trimLeadingDot(proto.inputType));\n    const output = reg.getMessage(trimLeadingDot(proto.outputType));\n    assert(input, `invalid MethodDescriptorProto: input_type ${proto.inputType} not found`);\n    assert(output, `invalid MethodDescriptorProto: output_type ${proto.inputType} not found`);\n    const name = proto.name;\n    return {\n        kind: \"rpc\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        parent,\n        name,\n        localName: safeObjectProperty(name.length\n            ? safeObjectProperty(name[0].toLowerCase() + name.substring(1))\n            : name),\n        methodKind,\n        input,\n        output,\n        idempotency: (_d = (_c = proto.options) === null || _c === void 0 ? void 0 : _c.idempotencyLevel) !== null && _d !== void 0 ? _d : IDEMPOTENCY_UNKNOWN,\n        toString() {\n            return `rpc ${parent.typeName}.${name}`;\n        },\n    };\n}\n/**\n * Create a descriptor for a oneof group.\n */\nfunction newOneof(proto, parent) {\n    return {\n        kind: \"oneof\",\n        proto,\n        deprecated: false,\n        parent,\n        fields: [],\n        name: proto.name,\n        localName: safeObjectProperty(protoCamelCase(proto.name)),\n        toString() {\n            return `oneof ${parent.typeName}.${this.name}`;\n        },\n    };\n}\nfunction newField(proto, parentOrFile, reg, oneof, mapEntries) {\n    var _a, _b, _c;\n    const isExtension = mapEntries === undefined;\n    const field = {\n        kind: \"field\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        name: proto.name,\n        number: proto.number,\n        scalar: undefined,\n        message: undefined,\n        enum: undefined,\n        presence: getFieldPresence(proto, oneof, isExtension, parentOrFile),\n        listKind: undefined,\n        mapKind: undefined,\n        mapKey: undefined,\n        delimitedEncoding: undefined,\n        packed: undefined,\n        longAsString: false,\n        getDefaultValue: undefined,\n    };\n    if (isExtension) {\n        // extension field\n        const file = parentOrFile.kind == \"file\" ? parentOrFile : parentOrFile.file;\n        const parent = parentOrFile.kind == \"file\" ? undefined : parentOrFile;\n        const typeName = makeTypeName(proto, parent, file);\n        field.kind = \"extension\";\n        field.file = file;\n        field.parent = parent;\n        field.oneof = undefined;\n        field.typeName = typeName;\n        field.jsonName = `[${typeName}]`; // option json_name is not allowed on extension fields\n        field.toString = () => `extension ${typeName}`;\n        const extendee = reg.getMessage(trimLeadingDot(proto.extendee));\n        assert(extendee, `invalid FieldDescriptorProto: extendee ${proto.extendee} not found`);\n        field.extendee = extendee;\n    }\n    else {\n        // regular field\n        const parent = parentOrFile;\n        assert(parent.kind == \"message\");\n        field.parent = parent;\n        field.oneof = oneof;\n        field.localName = oneof\n            ? protoCamelCase(proto.name)\n            : safeObjectProperty(protoCamelCase(proto.name));\n        field.jsonName = proto.jsonName;\n        field.toString = () => `field ${parent.typeName}.${proto.name}`;\n    }\n    const label = proto.label;\n    const type = proto.type;\n    const jstype = (_c = proto.options) === null || _c === void 0 ? void 0 : _c.jstype;\n    if (label === LABEL_REPEATED) {\n        // list or map field\n        const mapEntry = type == TYPE_MESSAGE\n            ? mapEntries === null || mapEntries === void 0 ? void 0 : mapEntries.get(trimLeadingDot(proto.typeName))\n            : undefined;\n        if (mapEntry) {\n            // map field\n            field.fieldKind = \"map\";\n            const { key, value } = findMapEntryFields(mapEntry);\n            field.mapKey = key.scalar;\n            field.mapKind = value.fieldKind;\n            field.message = value.message;\n            field.delimitedEncoding = false; // map fields are always LENGTH_PREFIXED\n            field.enum = value.enum;\n            field.scalar = value.scalar;\n            return field;\n        }\n        // list field\n        field.fieldKind = \"list\";\n        switch (type) {\n            case TYPE_MESSAGE:\n            case TYPE_GROUP:\n                field.listKind = \"message\";\n                field.message = reg.getMessage(trimLeadingDot(proto.typeName));\n                assert(field.message);\n                field.delimitedEncoding = isDelimitedEncoding(proto, parentOrFile);\n                break;\n            case TYPE_ENUM:\n                field.listKind = \"enum\";\n                field.enum = reg.getEnum(trimLeadingDot(proto.typeName));\n                assert(field.enum);\n                break;\n            default:\n                field.listKind = \"scalar\";\n                field.scalar = type;\n                field.longAsString = jstype == JS_STRING;\n                break;\n        }\n        field.packed = isPackedField(proto, parentOrFile);\n        return field;\n    }\n    // singular\n    switch (type) {\n        case TYPE_MESSAGE:\n        case TYPE_GROUP:\n            field.fieldKind = \"message\";\n            field.message = reg.getMessage(trimLeadingDot(proto.typeName));\n            assert(field.message, `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n            field.delimitedEncoding = isDelimitedEncoding(proto, parentOrFile);\n            field.getDefaultValue = () => undefined;\n            break;\n        case TYPE_ENUM: {\n            const enumeration = reg.getEnum(trimLeadingDot(proto.typeName));\n            assert(enumeration !== undefined, `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n            field.fieldKind = \"enum\";\n            field.enum = reg.getEnum(trimLeadingDot(proto.typeName));\n            field.getDefaultValue = () => {\n                return unsafeIsSetExplicit(proto, \"defaultValue\")\n                    ? parseTextFormatEnumValue(enumeration, proto.defaultValue)\n                    : undefined;\n            };\n            break;\n        }\n        default: {\n            field.fieldKind = \"scalar\";\n            field.scalar = type;\n            field.longAsString = jstype == JS_STRING;\n            field.getDefaultValue = () => {\n                return unsafeIsSetExplicit(proto, \"defaultValue\")\n                    ? parseTextFormatScalarValue(type, proto.defaultValue)\n                    : undefined;\n            };\n            break;\n        }\n    }\n    return field;\n}\n/**\n * Parse the \"syntax\" and \"edition\" fields, returning one of the supported\n * editions.\n */\nfunction getFileEdition(proto) {\n    switch (proto.syntax) {\n        case \"\":\n        case \"proto2\":\n            return EDITION_PROTO2;\n        case \"proto3\":\n            return EDITION_PROTO3;\n        case \"editions\":\n            if (proto.edition in featureDefaults) {\n                return proto.edition;\n            }\n            throw new Error(`${proto.name}: unsupported edition`);\n        default:\n            throw new Error(`${proto.name}: unsupported syntax \"${proto.syntax}\"`);\n    }\n}\n/**\n * Resolve dependencies of FileDescriptorProto to DescFile.\n */\nfunction findFileDependencies(proto, reg) {\n    return proto.dependency.map((wantName) => {\n        const dep = reg.getFile(wantName);\n        if (!dep) {\n            throw new Error(`Cannot find ${wantName}, imported by ${proto.name}`);\n        }\n        return dep;\n    });\n}\n/**\n * Finds a prefix shared by enum values, for example `my_enum_` for\n * `enum MyEnum {MY_ENUM_A=0; MY_ENUM_B=1;}`.\n */\nfunction findEnumSharedPrefix(enumName, values) {\n    const prefix = camelToSnakeCase(enumName) + \"_\";\n    for (const value of values) {\n        if (!value.name.toLowerCase().startsWith(prefix)) {\n            return undefined;\n        }\n        const shortName = value.name.substring(prefix.length);\n        if (shortName.length == 0) {\n            return undefined;\n        }\n        if (/^\\d/.test(shortName)) {\n            // identifiers must not start with numbers\n            return undefined;\n        }\n    }\n    return prefix;\n}\n/**\n * Converts lowerCamelCase or UpperCamelCase into lower_snake_case.\n * This is used to find shared prefixes in an enum.\n */\nfunction camelToSnakeCase(camel) {\n    return (camel.substring(0, 1) + camel.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c)).toLowerCase();\n}\n/**\n * Create a fully qualified name for a protobuf type or extension field.\n *\n * The fully qualified name for messages, enumerations, and services is\n * constructed by concatenating the package name (if present), parent\n * message names (for nested types), and the type name. We omit the leading\n * dot added by protobuf compilers. Examples:\n * - mypackage.MyMessage\n * - mypackage.MyMessage.NestedMessage\n *\n * The fully qualified name for extension fields is constructed by\n * concatenating the package name (if present), parent message names (for\n * extensions declared within a message), and the field name. Examples:\n * - mypackage.extfield\n * - mypackage.MyMessage.extfield\n */\nfunction makeTypeName(proto, parent, file) {\n    let typeName;\n    if (parent) {\n        typeName = `${parent.typeName}.${proto.name}`;\n    }\n    else if (file.proto.package.length > 0) {\n        typeName = `${file.proto.package}.${proto.name}`;\n    }\n    else {\n        typeName = `${proto.name}`;\n    }\n    return typeName;\n}\n/**\n * Remove the leading dot from a fully qualified type name.\n */\nfunction trimLeadingDot(typeName) {\n    return typeName.startsWith(\".\") ? typeName.substring(1) : typeName;\n}\n/**\n * Did the user put the field in a oneof group?\n * Synthetic oneofs for proto3 optionals are ignored.\n */\nfunction findOneof(proto, allOneofs) {\n    if (!unsafeIsSetExplicit(proto, \"oneofIndex\")) {\n        return undefined;\n    }\n    if (proto.proto3Optional) {\n        return undefined;\n    }\n    const oneof = allOneofs[proto.oneofIndex];\n    assert(oneof, `invalid FieldDescriptorProto: oneof #${proto.oneofIndex} for field #${proto.number} not found`);\n    return oneof;\n}\n/**\n * Presence of the field.\n * See https://protobuf.dev/programming-guides/field_presence/\n */\nfunction getFieldPresence(proto, oneof, isExtension, parent) {\n    if (proto.label == LABEL_REQUIRED) {\n        // proto2 required is LEGACY_REQUIRED\n        return LEGACY_REQUIRED;\n    }\n    if (proto.label == LABEL_REPEATED) {\n        // repeated fields (including maps) do not track presence\n        return IMPLICIT;\n    }\n    if (!!oneof || proto.proto3Optional) {\n        // oneof is always explicit\n        return EXPLICIT;\n    }\n    if (isExtension) {\n        // extensions always track presence\n        return EXPLICIT;\n    }\n    const resolved = resolveFeature(\"fieldPresence\", { proto, parent });\n    if (resolved == IMPLICIT &&\n        (proto.type == TYPE_MESSAGE || proto.type == TYPE_GROUP)) {\n        // singular message field cannot be implicit\n        return EXPLICIT;\n    }\n    return resolved;\n}\n/**\n * Pack this repeated field?\n */\nfunction isPackedField(proto, parent) {\n    if (proto.label != LABEL_REPEATED) {\n        return false;\n    }\n    switch (proto.type) {\n        case TYPE_STRING:\n        case TYPE_BYTES:\n        case TYPE_GROUP:\n        case TYPE_MESSAGE:\n            // length-delimited types cannot be packed\n            return false;\n    }\n    const o = proto.options;\n    if (o && unsafeIsSetExplicit(o, \"packed\")) {\n        // prefer the field option over edition features\n        return o.packed;\n    }\n    return (PACKED ==\n        resolveFeature(\"repeatedFieldEncoding\", {\n            proto,\n            parent,\n        }));\n}\n/**\n * Find the key and value fields of a synthetic map entry message.\n */\nfunction findMapEntryFields(mapEntry) {\n    const key = mapEntry.fields.find((f) => f.number === 1);\n    const value = mapEntry.fields.find((f) => f.number === 2);\n    assert(key &&\n        key.fieldKind == \"scalar\" &&\n        key.scalar != ScalarType.BYTES &&\n        key.scalar != ScalarType.FLOAT &&\n        key.scalar != ScalarType.DOUBLE &&\n        value &&\n        value.fieldKind != \"list\" &&\n        value.fieldKind != \"map\");\n    return { key, value };\n}\n/**\n * Enumerations can be open or closed.\n * See https://protobuf.dev/programming-guides/enum/\n */\nfunction isEnumOpen(desc) {\n    var _a;\n    return (OPEN ==\n        resolveFeature(\"enumType\", {\n            proto: desc.proto,\n            parent: (_a = desc.parent) !== null && _a !== void 0 ? _a : desc.file,\n        }));\n}\n/**\n * Encode the message delimited (a.k.a. proto2 group encoding), or\n * length-prefixed?\n */\nfunction isDelimitedEncoding(proto, parent) {\n    if (proto.type == TYPE_GROUP) {\n        return true;\n    }\n    return (DELIMITED ==\n        resolveFeature(\"messageEncoding\", {\n            proto,\n            parent,\n        }));\n}\nfunction resolveFeature(name, ref) {\n    var _a, _b;\n    const featureSet = (_a = ref.proto.options) === null || _a === void 0 ? void 0 : _a.features;\n    if (featureSet) {\n        const val = featureSet[name];\n        if (val != 0) {\n            return val;\n        }\n    }\n    if (\"kind\" in ref) {\n        if (ref.kind == \"message\") {\n            return resolveFeature(name, (_b = ref.parent) !== null && _b !== void 0 ? _b : ref.file);\n        }\n        const editionDefaults = featureDefaults[ref.edition];\n        if (!editionDefaults) {\n            throw new Error(`feature default for edition ${ref.edition} not found`);\n        }\n        return editionDefaults[name];\n    }\n    return resolveFeature(name, ref.parent);\n}\n/**\n * Assert that condition is truthy or throw error (with message)\n */\nfunction assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { restoreJsonNames } from \"./restore-json-names.js\";\nimport { createFileRegistry } from \"../registry.js\";\n/**\n * Hydrate a file descriptor for google/protobuf/descriptor.proto from a plain\n * object.\n *\n * See createFileDescriptorProtoBoot() for details.\n *\n * @private\n */\nexport function boot(boot) {\n    const root = bootFileDescriptorProto(boot);\n    root.messageType.forEach(restoreJsonNames);\n    const reg = createFileRegistry(root, () => undefined);\n    // biome-ignore lint/style/noNonNullAssertion: non-null assertion because we just created the registry from the file we look up\n    return reg.getFile(root.name);\n}\n/**\n * Creates the message google.protobuf.FileDescriptorProto from an object literal.\n *\n * See createFileDescriptorProtoBoot() for details.\n *\n * @private\n */\nexport function bootFileDescriptorProto(init) {\n    const proto = Object.create({\n        syntax: \"\",\n        edition: 0,\n    });\n    return Object.assign(proto, Object.assign(Object.assign({ $typeName: \"google.protobuf.FileDescriptorProto\", dependency: [], publicDependency: [], weakDependency: [], optionDependency: [], service: [], extension: [] }, init), { messageType: init.messageType.map(bootDescriptorProto), enumType: init.enumType.map(bootEnumDescriptorProto) }));\n}\nfunction bootDescriptorProto(init) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const proto = Object.create({\n        visibility: 0,\n    });\n    return Object.assign(proto, {\n        $typeName: \"google.protobuf.DescriptorProto\",\n        name: init.name,\n        field: (_b = (_a = init.field) === null || _a === void 0 ? void 0 : _a.map(bootFieldDescriptorProto)) !== null && _b !== void 0 ? _b : [],\n        extension: [],\n        nestedType: (_d = (_c = init.nestedType) === null || _c === void 0 ? void 0 : _c.map(bootDescriptorProto)) !== null && _d !== void 0 ? _d : [],\n        enumType: (_f = (_e = init.enumType) === null || _e === void 0 ? void 0 : _e.map(bootEnumDescriptorProto)) !== null && _f !== void 0 ? _f : [],\n        extensionRange: (_h = (_g = init.extensionRange) === null || _g === void 0 ? void 0 : _g.map((e) => (Object.assign({ $typeName: \"google.protobuf.DescriptorProto.ExtensionRange\" }, e)))) !== null && _h !== void 0 ? _h : [],\n        oneofDecl: [],\n        reservedRange: [],\n        reservedName: [],\n    });\n}\nfunction bootFieldDescriptorProto(init) {\n    const proto = Object.create({\n        label: 1,\n        typeName: \"\",\n        extendee: \"\",\n        defaultValue: \"\",\n        oneofIndex: 0,\n        jsonName: \"\",\n        proto3Optional: false,\n    });\n    return Object.assign(proto, Object.assign(Object.assign({ $typeName: \"google.protobuf.FieldDescriptorProto\" }, init), { options: init.options ? bootFieldOptions(init.options) : undefined }));\n}\nfunction bootFieldOptions(init) {\n    var _a, _b, _c;\n    const proto = Object.create({\n        ctype: 0,\n        packed: false,\n        jstype: 0,\n        lazy: false,\n        unverifiedLazy: false,\n        deprecated: false,\n        weak: false,\n        debugRedact: false,\n        retention: 0,\n    });\n    return Object.assign(proto, Object.assign(Object.assign({ $typeName: \"google.protobuf.FieldOptions\" }, init), { targets: (_a = init.targets) !== null && _a !== void 0 ? _a : [], editionDefaults: (_c = (_b = init.editionDefaults) === null || _b === void 0 ? void 0 : _b.map((e) => (Object.assign({ $typeName: \"google.protobuf.FieldOptions.EditionDefault\" }, e)))) !== null && _c !== void 0 ? _c : [], uninterpretedOption: [] }));\n}\nfunction bootEnumDescriptorProto(init) {\n    const proto = Object.create({\n        visibility: 0,\n    });\n    return Object.assign(proto, {\n        $typeName: \"google.protobuf.EnumDescriptorProto\",\n        name: init.name,\n        reservedName: [],\n        reservedRange: [],\n        value: init.value.map((e) => (Object.assign({ $typeName: \"google.protobuf.EnumValueDescriptorProto\" }, e))),\n    });\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { unsafeClear, unsafeIsSet } from \"./reflect/unsafe.js\";\n/**\n * Returns true if the field is set.\n *\n * - Scalar and enum fields with implicit presence (proto3):\n *   Set if not a zero value.\n *\n * - Scalar and enum fields with explicit presence (proto2, oneof):\n *   Set if a value was set when creating or parsing the message, or when a\n *   value was assigned to the field's property.\n *\n * - Message fields:\n *   Set if the property is not undefined.\n *\n * - List and map fields:\n *   Set if not empty.\n */\nexport function isFieldSet(message, field) {\n    return (field.parent.typeName == message.$typeName && unsafeIsSet(message, field));\n}\n/**\n * Resets the field, so that isFieldSet() will return false.\n */\nexport function clearField(message, field) {\n    if (field.parent.typeName == message.$typeName) {\n        unsafeClear(message, field);\n    }\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Decodes a base64 string to a byte array.\n *\n * - ignores white-space, including line breaks and tabs\n * - allows inner padding (can decode concatenated base64 strings)\n * - does not require padding\n * - understands base64url encoding:\n *   \"-\" instead of \"+\",\n *   \"_\" instead of \"/\",\n *   no padding\n */\nexport function base64Decode(base64Str) {\n    const table = getDecodeTable();\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = (base64Str.length * 3) / 4;\n    if (base64Str[base64Str.length - 2] == \"=\")\n        es -= 2;\n    else if (base64Str[base64Str.length - 1] == \"=\")\n        es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n    groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // previous byte\n    for (let i = 0; i < base64Str.length; i++) {\n        b = table[base64Str.charCodeAt(i)];\n        if (b === undefined) {\n            switch (base64Str[i]) {\n                // @ts-ignore TS7029: Fallthrough case in switch -- ignore instead of expect-error for compiler settings without noFallthroughCasesInSwitch: true\n                case \"=\":\n                    groupPos = 0; // reset state when padding found\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\t\":\n                case \" \":\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(\"invalid base64 string\");\n            }\n        }\n        switch (groupPos) {\n            case 0:\n                p = b;\n                groupPos = 1;\n                break;\n            case 1:\n                bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                p = b;\n                groupPos = 2;\n                break;\n            case 2:\n                bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                p = b;\n                groupPos = 3;\n                break;\n            case 3:\n                bytes[bytePos++] = ((p & 3) << 6) | b;\n                groupPos = 0;\n                break;\n        }\n    }\n    if (groupPos == 1)\n        throw Error(\"invalid base64 string\");\n    return bytes.subarray(0, bytePos);\n}\n/**\n * Encode a byte array to a base64 string.\n *\n * By default, this function uses the standard base64 encoding with padding.\n *\n * To encode without padding, use encoding = \"std_raw\".\n *\n * To encode with the URL encoding, use encoding = \"url\", which replaces the\n * characters +/ by their URL-safe counterparts -_, and omits padding.\n */\nexport function base64Encode(bytes, encoding = \"std\") {\n    const table = getEncodeTable(encoding);\n    const pad = encoding == \"std\";\n    let base64 = \"\", groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n        b = bytes[i];\n        switch (groupPos) {\n            case 0:\n                base64 += table[b >> 2];\n                p = (b & 3) << 4;\n                groupPos = 1;\n                break;\n            case 1:\n                base64 += table[p | (b >> 4)];\n                p = (b & 15) << 2;\n                groupPos = 2;\n                break;\n            case 2:\n                base64 += table[p | (b >> 6)];\n                base64 += table[b & 63];\n                groupPos = 0;\n                break;\n        }\n    }\n    // add output padding\n    if (groupPos) {\n        base64 += table[p];\n        if (pad) {\n            base64 += \"=\";\n            if (groupPos == 1)\n                base64 += \"=\";\n        }\n    }\n    return base64;\n}\n// lookup table from base64 character to byte\nlet encodeTableStd;\nlet encodeTableUrl;\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decodeTable;\nfunction getEncodeTable(encoding) {\n    if (!encodeTableStd) {\n        encodeTableStd =\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n        encodeTableUrl = encodeTableStd.slice(0, -2).concat(\"-\", \"_\");\n    }\n    return encoding == \"url\"\n        ? // biome-ignore lint/style/noNonNullAssertion: TS fails to narrow down\n            encodeTableUrl\n        : encodeTableStd;\n}\nfunction getDecodeTable() {\n    if (!decodeTable) {\n        decodeTable = [];\n        const encodeTable = getEncodeTable(\"std\");\n        for (let i = 0; i < encodeTable.length; i++)\n            decodeTable[encodeTable[i].charCodeAt(0)] = i;\n        // support base64url variants\n        decodeTable[\"-\".charCodeAt(0)] = encodeTable.indexOf(\"+\");\n        decodeTable[\"_\".charCodeAt(0)] = encodeTable.indexOf(\"/\");\n    }\n    return decodeTable;\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Determine whether the given `arg` is a message.\n * If `desc` is set, determine whether `arg` is this specific message.\n */\nexport function isMessage(arg, schema) {\n    const isMessage = arg !== null &&\n        typeof arg == \"object\" &&\n        \"$typeName\" in arg &&\n        typeof arg.$typeName == \"string\";\n    if (!isMessage) {\n        return false;\n    }\n    if (schema === undefined) {\n        return true;\n    }\n    return schema.typeName === arg.$typeName;\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst errorNames = [\n    \"FieldValueInvalidError\",\n    \"FieldListRangeError\",\n    \"ForeignFieldError\",\n];\nexport class FieldError extends Error {\n    constructor(fieldOrOneof, message, name = \"FieldValueInvalidError\") {\n        super(message);\n        this.name = name;\n        this.field = () => fieldOrOneof;\n    }\n}\nexport function isFieldError(arg) {\n    return (arg instanceof Error &&\n        errorNames.includes(arg.name) &&\n        \"field\" in arg &&\n        typeof arg.field == \"function\");\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { unsafeLocal } from \"./unsafe.js\";\nexport function isObject(arg) {\n    return arg !== null && typeof arg == \"object\" && !Array.isArray(arg);\n}\nexport function isOneofADT(arg) {\n    return (arg !== null &&\n        typeof arg == \"object\" &&\n        \"case\" in arg &&\n        ((typeof arg.case == \"string\" && \"value\" in arg && arg.value != null) ||\n            (arg.case === undefined &&\n                (!(\"value\" in arg) || arg.value === undefined))));\n}\nexport function isReflectList(arg, field) {\n    var _a, _b, _c, _d;\n    if (isObject(arg) &&\n        unsafeLocal in arg &&\n        \"add\" in arg &&\n        \"field\" in arg &&\n        typeof arg.field == \"function\") {\n        if (field !== undefined) {\n            const a = field;\n            const b = arg.field();\n            return (a.listKind == b.listKind &&\n                a.scalar === b.scalar &&\n                ((_a = a.message) === null || _a === void 0 ? void 0 : _a.typeName) === ((_b = b.message) === null || _b === void 0 ? void 0 : _b.typeName) &&\n                ((_c = a.enum) === null || _c === void 0 ? void 0 : _c.typeName) === ((_d = b.enum) === null || _d === void 0 ? void 0 : _d.typeName));\n        }\n        return true;\n    }\n    return false;\n}\nexport function isReflectMap(arg, field) {\n    var _a, _b, _c, _d;\n    if (isObject(arg) &&\n        unsafeLocal in arg &&\n        \"has\" in arg &&\n        \"field\" in arg &&\n        typeof arg.field == \"function\") {\n        if (field !== undefined) {\n            const a = field, b = arg.field();\n            return (a.mapKey === b.mapKey &&\n                a.mapKind == b.mapKind &&\n                a.scalar === b.scalar &&\n                ((_a = a.message) === null || _a === void 0 ? void 0 : _a.typeName) === ((_b = b.message) === null || _b === void 0 ? void 0 : _b.typeName) &&\n                ((_c = a.enum) === null || _c === void 0 ? void 0 : _c.typeName) === ((_d = b.enum) === null || _d === void 0 ? void 0 : _d.typeName));\n        }\n        return true;\n    }\n    return false;\n}\nexport function isReflectMessage(arg, messageDesc) {\n    return (isObject(arg) &&\n        unsafeLocal in arg &&\n        \"desc\" in arg &&\n        isObject(arg.desc) &&\n        arg.desc.kind === \"message\" &&\n        (messageDesc === undefined || arg.desc.typeName == messageDesc.typeName));\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst symbol = Symbol.for(\"@bufbuild/protobuf/text-encoding\");\n/**\n * Protobuf-ES requires the Text Encoding API to convert UTF-8 from and to\n * binary. This WHATWG API is widely available, but it is not part of the\n * ECMAScript standard. On runtimes where it is not available, use this\n * function to provide your own implementation.\n *\n * Note that the Text Encoding API does not provide a way to validate UTF-8.\n * Our implementation falls back to use encodeURIComponent().\n */\nexport function configureTextEncoding(textEncoding) {\n    globalThis[symbol] = textEncoding;\n}\nexport function getTextEncoding() {\n    if (globalThis[symbol] == undefined) {\n        const te = new globalThis.TextEncoder();\n        const td = new globalThis.TextDecoder();\n        globalThis[symbol] = {\n            encodeUtf8(text) {\n                return te.encode(text);\n            },\n            decodeUtf8(bytes) {\n                return td.decode(bytes);\n            },\n            checkUtf8(text) {\n                try {\n                    encodeURIComponent(text);\n                    return true;\n                }\n                catch (_) {\n                    return false;\n                }\n            },\n        };\n    }\n    return globalThis[symbol];\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { varint32read, varint32write, varint64read, varint64write, } from \"./varint.js\";\nimport { protoInt64 } from \"../proto-int64.js\";\nimport { getTextEncoding } from \"./text-encoding.js\";\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Start of a tag-delimited aggregate, such as a proto2 group, or a message\n     * in editions with message_encoding = DELIMITED.\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * End of a tag-delimited aggregate.\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\n/**\n * Maximum value for a 32-bit floating point value (Protobuf FLOAT).\n */\nexport const FLOAT32_MAX = 3.4028234663852886e38;\n/**\n * Minimum value for a 32-bit floating point value (Protobuf FLOAT).\n */\nexport const FLOAT32_MIN = -3.4028234663852886e38;\n/**\n * Maximum value for an unsigned 32-bit integer (Protobuf UINT32, FIXED32).\n */\nexport const UINT32_MAX = 0xffffffff;\n/**\n * Maximum value for a signed 32-bit integer (Protobuf INT32, SFIXED32, SINT32).\n */\nexport const INT32_MAX = 0x7fffffff;\n/**\n * Minimum value for a signed 32-bit integer (Protobuf INT32, SFIXED32, SINT32).\n */\nexport const INT32_MIN = -0x80000000;\nexport class BinaryWriter {\n    constructor(encodeUtf8 = getTextEncoding().encodeUtf8) {\n        this.encodeUtf8 = encodeUtf8;\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n            this.buf = [];\n        }\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.encodeUtf8(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = protoInt64.enc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        const tc = protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        const tc = protoInt64.uEnc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nexport class BinaryReader {\n    constructor(buf, decodeUtf8 = getTextEncoding().decodeUtf8) {\n        this.decodeUtf8 = decodeUtf8;\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read;\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element and return the skipped data.\n     *\n     * When skipping StartGroup, provide the tags field number to check for\n     * matching field number in the EndGroup tag.\n     */\n    skip(wireType, fieldNo) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // @ts-ignore TS7029: Fallthrough case in switch -- ignore instead of expect-error for compiler settings without noFallthroughCasesInSwitch: true\n            case WireType.Bit64:\n                this.pos += 4;\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                for (;;) {\n                    const [fn, wt] = this.tag();\n                    if (wt === WireType.EndGroup) {\n                        if (fieldNo !== undefined && fn !== fieldNo) {\n                            throw new Error(\"invalid end group tag\");\n                        }\n                        break;\n                    }\n                    this.skip(wt, fn);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        // biome-ignore lint/suspicious/noAssignInExpressions: no\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        // biome-ignore lint/suspicious/noAssignInExpressions: no\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        // biome-ignore lint/suspicious/noAssignInExpressions: no\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        // biome-ignore lint/suspicious/noAssignInExpressions: no\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.decodeUtf8(this.bytes());\n    }\n}\n/**\n * Assert a valid signed protobuf 32-bit integer as a number or string.\n */\nfunction assertInt32(arg) {\n    if (typeof arg == \"string\") {\n        arg = Number(arg);\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid int32: \" + typeof arg);\n    }\n    if (!Number.isInteger(arg) ||\n        arg > INT32_MAX ||\n        arg < INT32_MIN)\n        throw new Error(\"invalid int32: \" + arg);\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer as a number or string.\n */\nfunction assertUInt32(arg) {\n    if (typeof arg == \"string\") {\n        arg = Number(arg);\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid uint32: \" + typeof arg);\n    }\n    if (!Number.isInteger(arg) ||\n        arg > UINT32_MAX ||\n        arg < 0)\n        throw new Error(\"invalid uint32: \" + arg);\n}\n/**\n * Assert a valid protobuf float value as a number or string.\n */\nfunction assertFloat32(arg) {\n    if (typeof arg == \"string\") {\n        const o = arg;\n        arg = Number(arg);\n        if (Number.isNaN(arg) && o !== \"NaN\") {\n            throw new Error(\"invalid float32: \" + o);\n        }\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid float32: \" + typeof arg);\n    }\n    if (Number.isFinite(arg) &&\n        (arg > FLOAT32_MAX || arg < FLOAT32_MIN))\n        throw new Error(\"invalid float32: \" + arg);\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType, } from \"../descriptors.js\";\nimport { isMessage } from \"../is-message.js\";\nimport { FieldError } from \"./error.js\";\nimport { isReflectList, isReflectMap, isReflectMessage } from \"./guard.js\";\nimport { FLOAT32_MAX, FLOAT32_MIN, INT32_MAX, INT32_MIN, UINT32_MAX, } from \"../wire/binary-encoding.js\";\nimport { getTextEncoding } from \"../wire/text-encoding.js\";\nimport { protoInt64 } from \"../proto-int64.js\";\n/**\n * Check whether the given field value is valid for the reflect API.\n */\nexport function checkField(field, value) {\n    const check = field.fieldKind == \"list\"\n        ? isReflectList(value, field)\n        : field.fieldKind == \"map\"\n            ? isReflectMap(value, field)\n            : checkSingular(field, value);\n    if (check === true) {\n        return undefined;\n    }\n    let reason;\n    switch (field.fieldKind) {\n        case \"list\":\n            reason = `expected ${formatReflectList(field)}, got ${formatVal(value)}`;\n            break;\n        case \"map\":\n            reason = `expected ${formatReflectMap(field)}, got ${formatVal(value)}`;\n            break;\n        default: {\n            reason = reasonSingular(field, value, check);\n        }\n    }\n    return new FieldError(field, reason);\n}\n/**\n * Check whether the given list item is valid for the reflect API.\n */\nexport function checkListItem(field, index, value) {\n    const check = checkSingular(field, value);\n    if (check !== true) {\n        return new FieldError(field, `list item #${index + 1}: ${reasonSingular(field, value, check)}`);\n    }\n    return undefined;\n}\n/**\n * Check whether the given map key and value are valid for the reflect API.\n */\nexport function checkMapEntry(field, key, value) {\n    const checkKey = checkScalarValue(key, field.mapKey);\n    if (checkKey !== true) {\n        return new FieldError(field, `invalid map key: ${reasonSingular({ scalar: field.mapKey }, key, checkKey)}`);\n    }\n    const checkVal = checkSingular(field, value);\n    if (checkVal !== true) {\n        return new FieldError(field, `map entry ${formatVal(key)}: ${reasonSingular(field, value, checkVal)}`);\n    }\n    return undefined;\n}\nfunction checkSingular(field, value) {\n    if (field.scalar !== undefined) {\n        return checkScalarValue(value, field.scalar);\n    }\n    if (field.enum !== undefined) {\n        if (field.enum.open) {\n            return Number.isInteger(value);\n        }\n        return field.enum.values.some((v) => v.number === value);\n    }\n    return isReflectMessage(value, field.message);\n}\nfunction checkScalarValue(value, scalar) {\n    switch (scalar) {\n        case ScalarType.DOUBLE:\n            return typeof value == \"number\";\n        case ScalarType.FLOAT:\n            if (typeof value != \"number\") {\n                return false;\n            }\n            if (Number.isNaN(value) || !Number.isFinite(value)) {\n                return true;\n            }\n            if (value > FLOAT32_MAX || value < FLOAT32_MIN) {\n                return `${value.toFixed()} out of range`;\n            }\n            return true;\n        case ScalarType.INT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n            // signed\n            if (typeof value !== \"number\" || !Number.isInteger(value)) {\n                return false;\n            }\n            if (value > INT32_MAX || value < INT32_MIN) {\n                return `${value.toFixed()} out of range`;\n            }\n            return true;\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n            // unsigned\n            if (typeof value !== \"number\" || !Number.isInteger(value)) {\n                return false;\n            }\n            if (value > UINT32_MAX || value < 0) {\n                return `${value.toFixed()} out of range`;\n            }\n            return true;\n        case ScalarType.BOOL:\n            return typeof value == \"boolean\";\n        case ScalarType.STRING:\n            if (typeof value != \"string\") {\n                return false;\n            }\n            return getTextEncoding().checkUtf8(value) || \"invalid UTF8\";\n        case ScalarType.BYTES:\n            return value instanceof Uint8Array;\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            // signed\n            if (typeof value == \"bigint\" ||\n                typeof value == \"number\" ||\n                (typeof value == \"string\" && value.length > 0)) {\n                try {\n                    protoInt64.parse(value);\n                    return true;\n                }\n                catch (_) {\n                    return `${value} out of range`;\n                }\n            }\n            return false;\n        case ScalarType.FIXED64:\n        case ScalarType.UINT64:\n            // unsigned\n            if (typeof value == \"bigint\" ||\n                typeof value == \"number\" ||\n                (typeof value == \"string\" && value.length > 0)) {\n                try {\n                    protoInt64.uParse(value);\n                    return true;\n                }\n                catch (_) {\n                    return `${value} out of range`;\n                }\n            }\n            return false;\n    }\n}\nfunction reasonSingular(field, val, details) {\n    details =\n        typeof details == \"string\" ? `: ${details}` : `, got ${formatVal(val)}`;\n    if (field.scalar !== undefined) {\n        return `expected ${scalarTypeDescription(field.scalar)}` + details;\n    }\n    if (field.enum !== undefined) {\n        return `expected ${field.enum.toString()}` + details;\n    }\n    return `expected ${formatReflectMessage(field.message)}` + details;\n}\nexport function formatVal(val) {\n    switch (typeof val) {\n        case \"object\":\n            if (val === null) {\n                return \"null\";\n            }\n            if (val instanceof Uint8Array) {\n                return `Uint8Array(${val.length})`;\n            }\n            if (Array.isArray(val)) {\n                return `Array(${val.length})`;\n            }\n            if (isReflectList(val)) {\n                return formatReflectList(val.field());\n            }\n            if (isReflectMap(val)) {\n                return formatReflectMap(val.field());\n            }\n            if (isReflectMessage(val)) {\n                return formatReflectMessage(val.desc);\n            }\n            if (isMessage(val)) {\n                return `message ${val.$typeName}`;\n            }\n            return \"object\";\n        case \"string\":\n            return val.length > 30 ? \"string\" : `\"${val.split('\"').join('\\\\\"')}\"`;\n        case \"boolean\":\n            return String(val);\n        case \"number\":\n            return String(val);\n        case \"bigint\":\n            return String(val) + \"n\";\n        default:\n            // \"symbol\" | \"undefined\" | \"object\" | \"function\"\n            return typeof val;\n    }\n}\nfunction formatReflectMessage(desc) {\n    return `ReflectMessage (${desc.typeName})`;\n}\nfunction formatReflectList(field) {\n    switch (field.listKind) {\n        case \"message\":\n            return `ReflectList (${field.message.toString()})`;\n        case \"enum\":\n            return `ReflectList (${field.enum.toString()})`;\n        case \"scalar\":\n            return `ReflectList (${ScalarType[field.scalar]})`;\n    }\n}\nfunction formatReflectMap(field) {\n    switch (field.mapKind) {\n        case \"message\":\n            return `ReflectMap (${ScalarType[field.mapKey]}, ${field.message.toString()})`;\n        case \"enum\":\n            return `ReflectMap (${ScalarType[field.mapKey]}, ${field.enum.toString()})`;\n        case \"scalar\":\n            return `ReflectMap (${ScalarType[field.mapKey]}, ${ScalarType[field.scalar]})`;\n    }\n}\nfunction scalarTypeDescription(scalar) {\n    switch (scalar) {\n        case ScalarType.STRING:\n            return \"string\";\n        case ScalarType.BOOL:\n            return \"boolean\";\n        case ScalarType.INT64:\n        case ScalarType.SINT64:\n        case ScalarType.SFIXED64:\n            return \"bigint (int64)\";\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n            return \"bigint (uint64)\";\n        case ScalarType.BYTES:\n            return \"Uint8Array\";\n        case ScalarType.DOUBLE:\n            return \"number (float64)\";\n        case ScalarType.FLOAT:\n            return \"number (float32)\";\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n            return \"number (uint32)\";\n        case ScalarType.INT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n            return \"number (int32)\";\n    }\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport function isWrapper(arg) {\n    return isWrapperTypeName(arg.$typeName);\n}\nexport function isWrapperDesc(messageDesc) {\n    const f = messageDesc.fields[0];\n    return (isWrapperTypeName(messageDesc.typeName) &&\n        f !== undefined &&\n        f.fieldKind == \"scalar\" &&\n        f.name == \"value\" &&\n        f.number == 1);\n}\nfunction isWrapperTypeName(name) {\n    return (name.startsWith(\"google.protobuf.\") &&\n        [\n            \"DoubleValue\",\n            \"FloatValue\",\n            \"Int64Value\",\n            \"UInt64Value\",\n            \"Int32Value\",\n            \"UInt32Value\",\n            \"BoolValue\",\n            \"StringValue\",\n            \"BytesValue\",\n        ].includes(name.substring(16)));\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { isMessage } from \"./is-message.js\";\nimport { ScalarType, } from \"./descriptors.js\";\nimport { scalarZeroValue } from \"./reflect/scalar.js\";\nimport { isObject } from \"./reflect/guard.js\";\nimport { unsafeGet, unsafeOneofCase, unsafeSet } from \"./reflect/unsafe.js\";\nimport { isWrapperDesc } from \"./wkt/wrappers.js\";\n// bootstrap-inject google.protobuf.Edition.EDITION_PROTO3: const $name: Edition.$localName = $number;\nconst EDITION_PROTO3 = 999;\n// bootstrap-inject google.protobuf.Edition.EDITION_PROTO2: const $name: Edition.$localName = $number;\nconst EDITION_PROTO2 = 998;\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.IMPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst IMPLICIT = 2;\n/**\n * Create a new message instance.\n *\n * The second argument is an optional initializer object, where all fields are\n * optional.\n */\nexport function create(schema, init) {\n    if (isMessage(init, schema)) {\n        return init;\n    }\n    const message = createZeroMessage(schema);\n    if (init !== undefined) {\n        initMessage(schema, message, init);\n    }\n    return message;\n}\n/**\n * Sets field values from a MessageInitShape on a zero message.\n */\nfunction initMessage(messageDesc, message, init) {\n    for (const member of messageDesc.members) {\n        let value = init[member.localName];\n        if (value == null) {\n            // intentionally ignore undefined and null\n            continue;\n        }\n        let field;\n        if (member.kind == \"oneof\") {\n            const oneofField = unsafeOneofCase(init, member);\n            if (!oneofField) {\n                continue;\n            }\n            field = oneofField;\n            value = unsafeGet(init, oneofField);\n        }\n        else {\n            field = member;\n        }\n        switch (field.fieldKind) {\n            case \"message\":\n                value = toMessage(field, value);\n                break;\n            case \"scalar\":\n                value = initScalar(field, value);\n                break;\n            case \"list\":\n                value = initList(field, value);\n                break;\n            case \"map\":\n                value = initMap(field, value);\n                break;\n        }\n        unsafeSet(message, field, value);\n    }\n    return message;\n}\nfunction initScalar(field, value) {\n    if (field.scalar == ScalarType.BYTES) {\n        return toU8Arr(value);\n    }\n    return value;\n}\nfunction initMap(field, value) {\n    if (isObject(value)) {\n        if (field.scalar == ScalarType.BYTES) {\n            return convertObjectValues(value, toU8Arr);\n        }\n        if (field.mapKind == \"message\") {\n            return convertObjectValues(value, (val) => toMessage(field, val));\n        }\n    }\n    return value;\n}\nfunction initList(field, value) {\n    if (Array.isArray(value)) {\n        if (field.scalar == ScalarType.BYTES) {\n            return value.map(toU8Arr);\n        }\n        if (field.listKind == \"message\") {\n            return value.map((item) => toMessage(field, item));\n        }\n    }\n    return value;\n}\nfunction toMessage(field, value) {\n    if (field.fieldKind == \"message\" &&\n        !field.oneof &&\n        isWrapperDesc(field.message)) {\n        // Types from google/protobuf/wrappers.proto are unwrapped when used in\n        // a singular field that is not part of a oneof group.\n        return initScalar(field.message.fields[0], value);\n    }\n    if (isObject(value)) {\n        if (field.message.typeName == \"google.protobuf.Struct\" &&\n            field.parent.typeName !== \"google.protobuf.Value\") {\n            // google.protobuf.Struct is represented with JsonObject when used in a\n            // field, except when used in google.protobuf.Value.\n            return value;\n        }\n        if (!isMessage(value, field.message)) {\n            return create(field.message, value);\n        }\n    }\n    return value;\n}\n// converts any ArrayLike<number> to Uint8Array if necessary.\nfunction toU8Arr(value) {\n    return Array.isArray(value) ? new Uint8Array(value) : value;\n}\nfunction convertObjectValues(obj, fn) {\n    const ret = {};\n    for (const entry of Object.entries(obj)) {\n        ret[entry[0]] = fn(entry[1]);\n    }\n    return ret;\n}\nconst tokenZeroMessageField = Symbol();\nconst messagePrototypes = new WeakMap();\n/**\n * Create a zero message.\n */\nfunction createZeroMessage(desc) {\n    let msg;\n    if (!needsPrototypeChain(desc)) {\n        msg = {\n            $typeName: desc.typeName,\n        };\n        for (const member of desc.members) {\n            if (member.kind == \"oneof\" || member.presence == IMPLICIT) {\n                msg[member.localName] = createZeroField(member);\n            }\n        }\n    }\n    else {\n        // Support default values and track presence via the prototype chain\n        const cached = messagePrototypes.get(desc);\n        let prototype;\n        let members;\n        if (cached) {\n            ({ prototype, members } = cached);\n        }\n        else {\n            prototype = {};\n            members = new Set();\n            for (const member of desc.members) {\n                if (member.kind == \"oneof\") {\n                    // we can only put immutable values on the prototype,\n                    // oneof ADTs are mutable\n                    continue;\n                }\n                if (member.fieldKind != \"scalar\" && member.fieldKind != \"enum\") {\n                    // only scalar and enum values are immutable, map, list, and message\n                    // are not\n                    continue;\n                }\n                if (member.presence == IMPLICIT) {\n                    // implicit presence tracks field presence by zero values - e.g. 0, false, \"\", are unset, 1, true, \"x\" are set.\n                    // message, map, list fields are mutable, and also have IMPLICIT presence.\n                    continue;\n                }\n                members.add(member);\n                prototype[member.localName] = createZeroField(member);\n            }\n            messagePrototypes.set(desc, { prototype, members });\n        }\n        msg = Object.create(prototype);\n        msg.$typeName = desc.typeName;\n        for (const member of desc.members) {\n            if (members.has(member)) {\n                continue;\n            }\n            if (member.kind == \"field\") {\n                if (member.fieldKind == \"message\") {\n                    continue;\n                }\n                if (member.fieldKind == \"scalar\" || member.fieldKind == \"enum\") {\n                    if (member.presence != IMPLICIT) {\n                        continue;\n                    }\n                }\n            }\n            msg[member.localName] = createZeroField(member);\n        }\n    }\n    return msg;\n}\n/**\n * Do we need the prototype chain to track field presence?\n */\nfunction needsPrototypeChain(desc) {\n    switch (desc.file.edition) {\n        case EDITION_PROTO3:\n            // proto3 always uses implicit presence, we never need the prototype chain.\n            return false;\n        case EDITION_PROTO2:\n            // proto2 never uses implicit presence, we always need the prototype chain.\n            return true;\n        default:\n            // If a message uses scalar or enum fields with explicit presence, we need\n            // the prototype chain to track presence. This rule does not apply to fields\n            // in a oneof group - they use a different mechanism to track presence.\n            return desc.fields.some((f) => f.presence != IMPLICIT && f.fieldKind != \"message\" && !f.oneof);\n    }\n}\n/**\n * Returns a zero value for oneof groups, and for every field kind except\n * messages. Scalar and enum fields can have default values.\n */\nfunction createZeroField(field) {\n    if (field.kind == \"oneof\") {\n        return { case: undefined };\n    }\n    if (field.fieldKind == \"list\") {\n        return [];\n    }\n    if (field.fieldKind == \"map\") {\n        return {}; // Object.create(null) would be desirable here, but is unsupported by react https://react.dev/reference/react/use-server#serializable-parameters-and-return-values\n    }\n    if (field.fieldKind == \"message\") {\n        return tokenZeroMessageField;\n    }\n    const defaultValue = field.getDefaultValue();\n    if (defaultValue !== undefined) {\n        return field.fieldKind == \"scalar\" && field.longAsString\n            ? defaultValue.toString()\n            : defaultValue;\n    }\n    return field.fieldKind == \"scalar\"\n        ? scalarZeroValue(field.scalar, field.longAsString)\n        : field.enum.values[0].number;\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType, } from \"../descriptors.js\";\nimport { checkField, checkListItem, checkMapEntry } from \"./reflect-check.js\";\nimport { FieldError } from \"./error.js\";\nimport { unsafeClear, unsafeGet, unsafeIsSet, unsafeLocal, unsafeOneofCase, unsafeSet, } from \"./unsafe.js\";\nimport { create } from \"../create.js\";\nimport { isWrapper, isWrapperDesc } from \"../wkt/wrappers.js\";\nimport { scalarZeroValue } from \"./scalar.js\";\nimport { protoInt64 } from \"../proto-int64.js\";\nimport { isObject, isReflectList, isReflectMap, isReflectMessage, } from \"./guard.js\";\n/**\n * Create a ReflectMessage.\n */\nexport function reflect(messageDesc, message, \n/**\n * By default, field values are validated when setting them. For example,\n * a value for an uint32 field must be a ECMAScript Number >= 0.\n *\n * When field values are trusted, performance can be improved by disabling\n * checks.\n */\ncheck = true) {\n    return new ReflectMessageImpl(messageDesc, message, check);\n}\nclass ReflectMessageImpl {\n    get sortedFields() {\n        var _a;\n        return ((_a = this._sortedFields) !== null && _a !== void 0 ? _a : \n        // biome-ignore lint/suspicious/noAssignInExpressions: no\n        (this._sortedFields = this.desc.fields\n            .concat()\n            .sort((a, b) => a.number - b.number)));\n    }\n    constructor(messageDesc, message, check = true) {\n        this.lists = new Map();\n        this.maps = new Map();\n        this.check = check;\n        this.desc = messageDesc;\n        this.message = this[unsafeLocal] = message !== null && message !== void 0 ? message : create(messageDesc);\n        this.fields = messageDesc.fields;\n        this.oneofs = messageDesc.oneofs;\n        this.members = messageDesc.members;\n    }\n    findNumber(number) {\n        if (!this._fieldsByNumber) {\n            this._fieldsByNumber = new Map(this.desc.fields.map((f) => [f.number, f]));\n        }\n        return this._fieldsByNumber.get(number);\n    }\n    oneofCase(oneof) {\n        assertOwn(this.message, oneof);\n        return unsafeOneofCase(this.message, oneof);\n    }\n    isSet(field) {\n        assertOwn(this.message, field);\n        return unsafeIsSet(this.message, field);\n    }\n    clear(field) {\n        assertOwn(this.message, field);\n        unsafeClear(this.message, field);\n    }\n    get(field) {\n        assertOwn(this.message, field);\n        const value = unsafeGet(this.message, field);\n        switch (field.fieldKind) {\n            case \"list\":\n                // eslint-disable-next-line no-case-declarations\n                let list = this.lists.get(field);\n                if (!list || list[unsafeLocal] !== value) {\n                    this.lists.set(field, \n                    // biome-ignore lint/suspicious/noAssignInExpressions: no\n                    (list = new ReflectListImpl(field, value, this.check)));\n                }\n                return list;\n            case \"map\":\n                let map = this.maps.get(field);\n                if (!map || map[unsafeLocal] !== value) {\n                    this.maps.set(field, \n                    // biome-ignore lint/suspicious/noAssignInExpressions: no\n                    (map = new ReflectMapImpl(field, value, this.check)));\n                }\n                return map;\n            case \"message\":\n                return messageToReflect(field, value, this.check);\n            case \"scalar\":\n                return (value === undefined\n                    ? scalarZeroValue(field.scalar, false)\n                    : longToReflect(field, value));\n            case \"enum\":\n                return (value !== null && value !== void 0 ? value : field.enum.values[0].number);\n        }\n    }\n    set(field, value) {\n        assertOwn(this.message, field);\n        if (this.check) {\n            const err = checkField(field, value);\n            if (err) {\n                throw err;\n            }\n        }\n        let local;\n        if (field.fieldKind == \"message\") {\n            local = messageToLocal(field, value);\n        }\n        else if (isReflectMap(value) || isReflectList(value)) {\n            local = value[unsafeLocal];\n        }\n        else {\n            local = longToLocal(field, value);\n        }\n        unsafeSet(this.message, field, local);\n    }\n    getUnknown() {\n        return this.message.$unknown;\n    }\n    setUnknown(value) {\n        this.message.$unknown = value;\n    }\n}\nfunction assertOwn(owner, member) {\n    if (member.parent.typeName !== owner.$typeName) {\n        throw new FieldError(member, `cannot use ${member.toString()} with message ${owner.$typeName}`, \"ForeignFieldError\");\n    }\n}\n/**\n * Create a ReflectList.\n */\nexport function reflectList(field, unsafeInput, \n/**\n * By default, field values are validated when setting them. For example,\n * a value for an uint32 field must be a ECMAScript Number >= 0.\n *\n * When field values are trusted, performance can be improved by disabling\n * checks.\n */\ncheck = true) {\n    return new ReflectListImpl(field, unsafeInput !== null && unsafeInput !== void 0 ? unsafeInput : [], check);\n}\nclass ReflectListImpl {\n    field() {\n        return this._field;\n    }\n    get size() {\n        return this._arr.length;\n    }\n    constructor(field, unsafeInput, check) {\n        this._field = field;\n        this._arr = this[unsafeLocal] = unsafeInput;\n        this.check = check;\n    }\n    get(index) {\n        const item = this._arr[index];\n        return item === undefined\n            ? undefined\n            : listItemToReflect(this._field, item, this.check);\n    }\n    set(index, item) {\n        if (index < 0 || index >= this._arr.length) {\n            throw new FieldError(this._field, `list item #${index + 1}: out of range`);\n        }\n        if (this.check) {\n            const err = checkListItem(this._field, index, item);\n            if (err) {\n                throw err;\n            }\n        }\n        this._arr[index] = listItemToLocal(this._field, item);\n    }\n    add(item) {\n        if (this.check) {\n            const err = checkListItem(this._field, this._arr.length, item);\n            if (err) {\n                throw err;\n            }\n        }\n        this._arr.push(listItemToLocal(this._field, item));\n        return undefined;\n    }\n    clear() {\n        this._arr.splice(0, this._arr.length);\n    }\n    [Symbol.iterator]() {\n        return this.values();\n    }\n    keys() {\n        return this._arr.keys();\n    }\n    *values() {\n        for (const item of this._arr) {\n            yield listItemToReflect(this._field, item, this.check);\n        }\n    }\n    *entries() {\n        for (let i = 0; i < this._arr.length; i++) {\n            yield [i, listItemToReflect(this._field, this._arr[i], this.check)];\n        }\n    }\n}\n/**\n * Create a ReflectMap.\n */\nexport function reflectMap(field, unsafeInput, \n/**\n * By default, field values are validated when setting them. For example,\n * a value for an uint32 field must be a ECMAScript Number >= 0.\n *\n * When field values are trusted, performance can be improved by disabling\n * checks.\n */\ncheck = true) {\n    return new ReflectMapImpl(field, unsafeInput, check);\n}\nclass ReflectMapImpl {\n    constructor(field, unsafeInput, check = true) {\n        this.obj = this[unsafeLocal] = unsafeInput !== null && unsafeInput !== void 0 ? unsafeInput : {};\n        this.check = check;\n        this._field = field;\n    }\n    field() {\n        return this._field;\n    }\n    set(key, value) {\n        if (this.check) {\n            const err = checkMapEntry(this._field, key, value);\n            if (err) {\n                throw err;\n            }\n        }\n        this.obj[mapKeyToLocal(key)] = mapValueToLocal(this._field, value);\n        return this;\n    }\n    delete(key) {\n        const k = mapKeyToLocal(key);\n        const has = Object.prototype.hasOwnProperty.call(this.obj, k);\n        if (has) {\n            delete this.obj[k];\n        }\n        return has;\n    }\n    clear() {\n        for (const key of Object.keys(this.obj)) {\n            delete this.obj[key];\n        }\n    }\n    get(key) {\n        let val = this.obj[mapKeyToLocal(key)];\n        if (val !== undefined) {\n            val = mapValueToReflect(this._field, val, this.check);\n        }\n        return val;\n    }\n    has(key) {\n        return Object.prototype.hasOwnProperty.call(this.obj, mapKeyToLocal(key));\n    }\n    *keys() {\n        for (const objKey of Object.keys(this.obj)) {\n            yield mapKeyToReflect(objKey, this._field.mapKey);\n        }\n    }\n    *entries() {\n        for (const objEntry of Object.entries(this.obj)) {\n            yield [\n                mapKeyToReflect(objEntry[0], this._field.mapKey),\n                mapValueToReflect(this._field, objEntry[1], this.check),\n            ];\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    get size() {\n        return Object.keys(this.obj).length;\n    }\n    *values() {\n        for (const val of Object.values(this.obj)) {\n            yield mapValueToReflect(this._field, val, this.check);\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        for (const mapEntry of this.entries()) {\n            callbackfn.call(thisArg, mapEntry[1], mapEntry[0], this);\n        }\n    }\n}\nfunction messageToLocal(field, value) {\n    if (!isReflectMessage(value)) {\n        return value;\n    }\n    if (isWrapper(value.message) &&\n        !field.oneof &&\n        field.fieldKind == \"message\") {\n        // Types from google/protobuf/wrappers.proto are unwrapped when used in\n        // a singular field that is not part of a oneof group.\n        return value.message.value;\n    }\n    if (value.desc.typeName == \"google.protobuf.Struct\" &&\n        field.parent.typeName != \"google.protobuf.Value\") {\n        // google.protobuf.Struct is represented with JsonObject when used in a\n        // field, except when used in google.protobuf.Value.\n        return wktStructToLocal(value.message);\n    }\n    return value.message;\n}\nfunction messageToReflect(field, value, check) {\n    if (value !== undefined) {\n        if (isWrapperDesc(field.message) &&\n            !field.oneof &&\n            field.fieldKind == \"message\") {\n            // Types from google/protobuf/wrappers.proto are unwrapped when used in\n            // a singular field that is not part of a oneof group.\n            value = {\n                $typeName: field.message.typeName,\n                value: longToReflect(field.message.fields[0], value),\n            };\n        }\n        else if (field.message.typeName == \"google.protobuf.Struct\" &&\n            field.parent.typeName != \"google.protobuf.Value\" &&\n            isObject(value)) {\n            // google.protobuf.Struct is represented with JsonObject when used in a\n            // field, except when used in google.protobuf.Value.\n            value = wktStructToReflect(value);\n        }\n    }\n    return new ReflectMessageImpl(field.message, value, check);\n}\nfunction listItemToLocal(field, value) {\n    if (field.listKind == \"message\") {\n        return messageToLocal(field, value);\n    }\n    return longToLocal(field, value);\n}\nfunction listItemToReflect(field, value, check) {\n    if (field.listKind == \"message\") {\n        return messageToReflect(field, value, check);\n    }\n    return longToReflect(field, value);\n}\nfunction mapValueToLocal(field, value) {\n    if (field.mapKind == \"message\") {\n        return messageToLocal(field, value);\n    }\n    return longToLocal(field, value);\n}\nfunction mapValueToReflect(field, value, check) {\n    if (field.mapKind == \"message\") {\n        return messageToReflect(field, value, check);\n    }\n    return value;\n}\nfunction mapKeyToLocal(key) {\n    return typeof key == \"string\" || typeof key == \"number\" ? key : String(key);\n}\n/**\n * Converts a map key (any scalar value except float, double, or bytes) from its\n * representation in a message (string or number, the only possible object key\n * types) to the closest possible type in ECMAScript.\n */\nfunction mapKeyToReflect(key, type) {\n    switch (type) {\n        case ScalarType.STRING:\n            return key;\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32: {\n            const n = Number.parseInt(key);\n            if (Number.isFinite(n)) {\n                return n;\n            }\n            break;\n        }\n        case ScalarType.BOOL:\n            switch (key) {\n                case \"true\":\n                    return true;\n                case \"false\":\n                    return false;\n            }\n            break;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n            try {\n                return protoInt64.uParse(key);\n            }\n            catch (_a) {\n                //\n            }\n            break;\n        default:\n            // INT64, SFIXED64, SINT64\n            try {\n                return protoInt64.parse(key);\n            }\n            catch (_b) {\n                //\n            }\n            break;\n    }\n    return key;\n}\nfunction longToReflect(field, value) {\n    switch (field.scalar) {\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            if (\"longAsString\" in field &&\n                field.longAsString &&\n                typeof value == \"string\") {\n                value = protoInt64.parse(value);\n            }\n            break;\n        case ScalarType.FIXED64:\n        case ScalarType.UINT64:\n            if (\"longAsString\" in field &&\n                field.longAsString &&\n                typeof value == \"string\") {\n                value = protoInt64.uParse(value);\n            }\n            break;\n    }\n    return value;\n}\nfunction longToLocal(field, value) {\n    switch (field.scalar) {\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            if (\"longAsString\" in field && field.longAsString) {\n                value = String(value);\n            }\n            else if (typeof value == \"string\" || typeof value == \"number\") {\n                value = protoInt64.parse(value);\n            }\n            break;\n        case ScalarType.FIXED64:\n        case ScalarType.UINT64:\n            if (\"longAsString\" in field && field.longAsString) {\n                value = String(value);\n            }\n            else if (typeof value == \"string\" || typeof value == \"number\") {\n                value = protoInt64.uParse(value);\n            }\n            break;\n    }\n    return value;\n}\nfunction wktStructToReflect(json) {\n    const struct = {\n        $typeName: \"google.protobuf.Struct\",\n        fields: {},\n    };\n    if (isObject(json)) {\n        for (const [k, v] of Object.entries(json)) {\n            struct.fields[k] = wktValueToReflect(v);\n        }\n    }\n    return struct;\n}\nfunction wktStructToLocal(val) {\n    const json = {};\n    for (const [k, v] of Object.entries(val.fields)) {\n        json[k] = wktValueToLocal(v);\n    }\n    return json;\n}\nfunction wktValueToLocal(val) {\n    switch (val.kind.case) {\n        case \"structValue\":\n            return wktStructToLocal(val.kind.value);\n        case \"listValue\":\n            return val.kind.value.values.map(wktValueToLocal);\n        case \"nullValue\":\n        case undefined:\n            return null;\n        default:\n            return val.kind.value;\n    }\n}\nfunction wktValueToReflect(json) {\n    const value = {\n        $typeName: \"google.protobuf.Value\",\n        kind: { case: undefined },\n    };\n    switch (typeof json) {\n        case \"number\":\n            value.kind = { case: \"numberValue\", value: json };\n            break;\n        case \"string\":\n            value.kind = { case: \"stringValue\", value: json };\n            break;\n        case \"boolean\":\n            value.kind = { case: \"boolValue\", value: json };\n            break;\n        case \"object\":\n            if (json === null) {\n                const nullValue = 0;\n                value.kind = { case: \"nullValue\", value: nullValue };\n            }\n            else if (Array.isArray(json)) {\n                const listValue = {\n                    $typeName: \"google.protobuf.ListValue\",\n                    values: [],\n                };\n                if (Array.isArray(json)) {\n                    for (const e of json) {\n                        listValue.values.push(wktValueToReflect(e));\n                    }\n                }\n                value.kind = {\n                    case: \"listValue\",\n                    value: listValue,\n                };\n            }\n            else {\n                value.kind = {\n                    case: \"structValue\",\n                    value: wktStructToReflect(json),\n                };\n            }\n            break;\n    }\n    return value;\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { reflect } from \"./reflect/reflect.js\";\nimport { BinaryWriter, WireType } from \"./wire/binary-encoding.js\";\nimport { ScalarType } from \"./descriptors.js\";\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.LEGACY_REQUIRED: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst LEGACY_REQUIRED = 3;\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true,\n};\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nexport function toBinary(schema, message, options) {\n    return writeFields(new BinaryWriter(), makeWriteOptions(options), reflect(schema, message)).finish();\n}\nfunction writeFields(writer, opts, msg) {\n    var _a;\n    for (const f of msg.sortedFields) {\n        if (!msg.isSet(f)) {\n            if (f.presence == LEGACY_REQUIRED) {\n                throw new Error(`cannot encode ${f} to binary: required field not set`);\n            }\n            continue;\n        }\n        writeField(writer, opts, msg, f);\n    }\n    if (opts.writeUnknownFields) {\n        for (const { no, wireType, data } of (_a = msg.getUnknown()) !== null && _a !== void 0 ? _a : []) {\n            writer.tag(no, wireType).raw(data);\n        }\n    }\n    return writer;\n}\n/**\n * @private\n */\nexport function writeField(writer, opts, msg, field) {\n    var _a;\n    switch (field.fieldKind) {\n        case \"scalar\":\n        case \"enum\":\n            writeScalar(writer, msg.desc.typeName, field.name, (_a = field.scalar) !== null && _a !== void 0 ? _a : ScalarType.INT32, field.number, msg.get(field));\n            break;\n        case \"list\":\n            writeListField(writer, opts, field, msg.get(field));\n            break;\n        case \"message\":\n            writeMessageField(writer, opts, field, msg.get(field));\n            break;\n        case \"map\":\n            for (const [key, val] of msg.get(field)) {\n                writeMapEntry(writer, opts, field, key, val);\n            }\n            break;\n    }\n}\nfunction writeScalar(writer, msgName, fieldName, scalarType, fieldNo, value) {\n    writeScalarValue(writer.tag(fieldNo, writeTypeOfScalar(scalarType)), msgName, fieldName, scalarType, value);\n}\nfunction writeMessageField(writer, opts, field, message) {\n    if (field.delimitedEncoding) {\n        writeFields(writer.tag(field.number, WireType.StartGroup), opts, message).tag(field.number, WireType.EndGroup);\n    }\n    else {\n        writeFields(writer.tag(field.number, WireType.LengthDelimited).fork(), opts, message).join();\n    }\n}\nfunction writeListField(writer, opts, field, list) {\n    var _a;\n    if (field.listKind == \"message\") {\n        for (const item of list) {\n            writeMessageField(writer, opts, field, item);\n        }\n        return;\n    }\n    const scalarType = (_a = field.scalar) !== null && _a !== void 0 ? _a : ScalarType.INT32;\n    if (field.packed) {\n        if (!list.size) {\n            return;\n        }\n        writer.tag(field.number, WireType.LengthDelimited).fork();\n        for (const item of list) {\n            writeScalarValue(writer, field.parent.typeName, field.name, scalarType, item);\n        }\n        writer.join();\n        return;\n    }\n    for (const item of list) {\n        writeScalar(writer, field.parent.typeName, field.name, scalarType, field.number, item);\n    }\n}\nfunction writeMapEntry(writer, opts, field, key, value) {\n    var _a;\n    writer.tag(field.number, WireType.LengthDelimited).fork();\n    // write key, expecting key field number = 1\n    writeScalar(writer, field.parent.typeName, field.name, field.mapKey, 1, key);\n    // write value, expecting value field number = 2\n    switch (field.mapKind) {\n        case \"scalar\":\n        case \"enum\":\n            writeScalar(writer, field.parent.typeName, field.name, (_a = field.scalar) !== null && _a !== void 0 ? _a : ScalarType.INT32, 2, value);\n            break;\n        case \"message\":\n            writeFields(writer.tag(2, WireType.LengthDelimited).fork(), opts, value).join();\n            break;\n    }\n    writer.join();\n}\nfunction writeScalarValue(writer, msgName, fieldName, type, value) {\n    try {\n        switch (type) {\n            case ScalarType.STRING:\n                writer.string(value);\n                break;\n            case ScalarType.BOOL:\n                writer.bool(value);\n                break;\n            case ScalarType.DOUBLE:\n                writer.double(value);\n                break;\n            case ScalarType.FLOAT:\n                writer.float(value);\n                break;\n            case ScalarType.INT32:\n                writer.int32(value);\n                break;\n            case ScalarType.INT64:\n                writer.int64(value);\n                break;\n            case ScalarType.UINT64:\n                writer.uint64(value);\n                break;\n            case ScalarType.FIXED64:\n                writer.fixed64(value);\n                break;\n            case ScalarType.BYTES:\n                writer.bytes(value);\n                break;\n            case ScalarType.FIXED32:\n                writer.fixed32(value);\n                break;\n            case ScalarType.SFIXED32:\n                writer.sfixed32(value);\n                break;\n            case ScalarType.SFIXED64:\n                writer.sfixed64(value);\n                break;\n            case ScalarType.SINT64:\n                writer.sint64(value);\n                break;\n            case ScalarType.UINT32:\n                writer.uint32(value);\n                break;\n            case ScalarType.SINT32:\n                writer.sint32(value);\n                break;\n        }\n    }\n    catch (e) {\n        if (e instanceof Error) {\n            throw new Error(`cannot encode field ${msgName}.${fieldName} to binary: ${e.message}`);\n        }\n        throw e;\n    }\n}\nfunction writeTypeOfScalar(type) {\n    switch (type) {\n        case ScalarType.BYTES:\n        case ScalarType.STRING:\n            return WireType.LengthDelimited;\n        case ScalarType.DOUBLE:\n        case ScalarType.FIXED64:\n        case ScalarType.SFIXED64:\n            return WireType.Bit64;\n        case ScalarType.FIXED32:\n        case ScalarType.SFIXED32:\n        case ScalarType.FLOAT:\n            return WireType.Bit32;\n        default:\n            return WireType.Varint;\n    }\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType } from \"./descriptors.js\";\nimport { reflect } from \"./reflect/reflect.js\";\nimport { isReflectMessage } from \"./reflect/guard.js\";\n/**\n * Create a deep copy of a message, including extensions and unknown fields.\n */\nexport function clone(schema, message) {\n    return cloneReflect(reflect(schema, message)).message;\n}\nfunction cloneReflect(i) {\n    const o = reflect(i.desc);\n    for (const f of i.fields) {\n        if (!i.isSet(f)) {\n            continue;\n        }\n        switch (f.fieldKind) {\n            case \"list\":\n                const list = o.get(f);\n                for (const item of i.get(f)) {\n                    list.add(cloneSingular(f, item));\n                }\n                break;\n            case \"map\":\n                const map = o.get(f);\n                for (const entry of i.get(f).entries()) {\n                    map.set(entry[0], cloneSingular(f, entry[1]));\n                }\n                break;\n            default: {\n                o.set(f, cloneSingular(f, i.get(f)));\n                break;\n            }\n        }\n    }\n    const unknown = i.getUnknown();\n    if (unknown && unknown.length > 0) {\n        o.setUnknown([...unknown]);\n    }\n    return o;\n}\nfunction cloneSingular(field, value) {\n    if (field.message !== undefined && isReflectMessage(value)) {\n        return cloneReflect(value);\n    }\n    if (field.scalar == ScalarType.BYTES && value instanceof Uint8Array) {\n        // @ts-expect-error T cannot extend Uint8Array in practice\n        return value.slice();\n    }\n    return value;\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Hydrate a message descriptor.\n *\n * @private\n */\nexport function messageDesc(file, path, ...paths) {\n    return paths.reduce((acc, cur) => acc.nestedMessages[cur], file.messages[path]);\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Hydrate an enum descriptor.\n *\n * @private\n */\nexport function enumDesc(file, path, ...paths) {\n    if (paths.length == 0) {\n        return file.enums[path];\n    }\n    const e = paths.pop(); // we checked length above\n    return paths.reduce((acc, cur) => acc.nestedMessages[cur], file.messages[path]).nestedEnums[e];\n}\n/**\n * Construct a TypeScript enum object at runtime from a descriptor.\n */\nexport function tsEnum(desc) {\n    const enumObject = {};\n    for (const value of desc.values) {\n        enumObject[value.localName] = value.number;\n        enumObject[value.number] = value.localName;\n    }\n    return enumObject;\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { boot } from \"../../../../codegenv2/boot.js\";\nimport { messageDesc } from \"../../../../codegenv2/message.js\";\nimport { enumDesc } from \"../../../../codegenv2/enum.js\";\n/**\n * Describes the file google/protobuf/descriptor.proto.\n */\nexport const file_google_protobuf_descriptor = /*@__PURE__*/ boot({ \"name\": \"google/protobuf/descriptor.proto\", \"package\": \"google.protobuf\", \"messageType\": [{ \"name\": \"FileDescriptorSet\", \"field\": [{ \"name\": \"file\", \"number\": 1, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.FileDescriptorProto\" }], \"extensionRange\": [{ \"start\": 536000000, \"end\": 536000001 }] }, { \"name\": \"FileDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"package\", \"number\": 2, \"type\": 9, \"label\": 1 }, { \"name\": \"dependency\", \"number\": 3, \"type\": 9, \"label\": 3 }, { \"name\": \"public_dependency\", \"number\": 10, \"type\": 5, \"label\": 3 }, { \"name\": \"weak_dependency\", \"number\": 11, \"type\": 5, \"label\": 3 }, { \"name\": \"option_dependency\", \"number\": 15, \"type\": 9, \"label\": 3 }, { \"name\": \"message_type\", \"number\": 4, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.DescriptorProto\" }, { \"name\": \"enum_type\", \"number\": 5, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.EnumDescriptorProto\" }, { \"name\": \"service\", \"number\": 6, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.ServiceDescriptorProto\" }, { \"name\": \"extension\", \"number\": 7, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.FieldDescriptorProto\" }, { \"name\": \"options\", \"number\": 8, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FileOptions\" }, { \"name\": \"source_code_info\", \"number\": 9, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.SourceCodeInfo\" }, { \"name\": \"syntax\", \"number\": 12, \"type\": 9, \"label\": 1 }, { \"name\": \"edition\", \"number\": 14, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }] }, { \"name\": \"DescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"field\", \"number\": 2, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.FieldDescriptorProto\" }, { \"name\": \"extension\", \"number\": 6, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.FieldDescriptorProto\" }, { \"name\": \"nested_type\", \"number\": 3, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.DescriptorProto\" }, { \"name\": \"enum_type\", \"number\": 4, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.EnumDescriptorProto\" }, { \"name\": \"extension_range\", \"number\": 5, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.DescriptorProto.ExtensionRange\" }, { \"name\": \"oneof_decl\", \"number\": 8, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.OneofDescriptorProto\" }, { \"name\": \"options\", \"number\": 7, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.MessageOptions\" }, { \"name\": \"reserved_range\", \"number\": 9, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.DescriptorProto.ReservedRange\" }, { \"name\": \"reserved_name\", \"number\": 10, \"type\": 9, \"label\": 3 }, { \"name\": \"visibility\", \"number\": 11, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.SymbolVisibility\" }], \"nestedType\": [{ \"name\": \"ExtensionRange\", \"field\": [{ \"name\": \"start\", \"number\": 1, \"type\": 5, \"label\": 1 }, { \"name\": \"end\", \"number\": 2, \"type\": 5, \"label\": 1 }, { \"name\": \"options\", \"number\": 3, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.ExtensionRangeOptions\" }] }, { \"name\": \"ReservedRange\", \"field\": [{ \"name\": \"start\", \"number\": 1, \"type\": 5, \"label\": 1 }, { \"name\": \"end\", \"number\": 2, \"type\": 5, \"label\": 1 }] }] }, { \"name\": \"ExtensionRangeOptions\", \"field\": [{ \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }, { \"name\": \"declaration\", \"number\": 2, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.ExtensionRangeOptions.Declaration\", \"options\": { \"retention\": 2 } }, { \"name\": \"features\", \"number\": 50, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"verification\", \"number\": 3, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.ExtensionRangeOptions.VerificationState\", \"defaultValue\": \"UNVERIFIED\", \"options\": { \"retention\": 2 } }], \"nestedType\": [{ \"name\": \"Declaration\", \"field\": [{ \"name\": \"number\", \"number\": 1, \"type\": 5, \"label\": 1 }, { \"name\": \"full_name\", \"number\": 2, \"type\": 9, \"label\": 1 }, { \"name\": \"type\", \"number\": 3, \"type\": 9, \"label\": 1 }, { \"name\": \"reserved\", \"number\": 5, \"type\": 8, \"label\": 1 }, { \"name\": \"repeated\", \"number\": 6, \"type\": 8, \"label\": 1 }] }], \"enumType\": [{ \"name\": \"VerificationState\", \"value\": [{ \"name\": \"DECLARATION\", \"number\": 0 }, { \"name\": \"UNVERIFIED\", \"number\": 1 }] }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"FieldDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"number\", \"number\": 3, \"type\": 5, \"label\": 1 }, { \"name\": \"label\", \"number\": 4, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FieldDescriptorProto.Label\" }, { \"name\": \"type\", \"number\": 5, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FieldDescriptorProto.Type\" }, { \"name\": \"type_name\", \"number\": 6, \"type\": 9, \"label\": 1 }, { \"name\": \"extendee\", \"number\": 2, \"type\": 9, \"label\": 1 }, { \"name\": \"default_value\", \"number\": 7, \"type\": 9, \"label\": 1 }, { \"name\": \"oneof_index\", \"number\": 9, \"type\": 5, \"label\": 1 }, { \"name\": \"json_name\", \"number\": 10, \"type\": 9, \"label\": 1 }, { \"name\": \"options\", \"number\": 8, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FieldOptions\" }, { \"name\": \"proto3_optional\", \"number\": 17, \"type\": 8, \"label\": 1 }], \"enumType\": [{ \"name\": \"Type\", \"value\": [{ \"name\": \"TYPE_DOUBLE\", \"number\": 1 }, { \"name\": \"TYPE_FLOAT\", \"number\": 2 }, { \"name\": \"TYPE_INT64\", \"number\": 3 }, { \"name\": \"TYPE_UINT64\", \"number\": 4 }, { \"name\": \"TYPE_INT32\", \"number\": 5 }, { \"name\": \"TYPE_FIXED64\", \"number\": 6 }, { \"name\": \"TYPE_FIXED32\", \"number\": 7 }, { \"name\": \"TYPE_BOOL\", \"number\": 8 }, { \"name\": \"TYPE_STRING\", \"number\": 9 }, { \"name\": \"TYPE_GROUP\", \"number\": 10 }, { \"name\": \"TYPE_MESSAGE\", \"number\": 11 }, { \"name\": \"TYPE_BYTES\", \"number\": 12 }, { \"name\": \"TYPE_UINT32\", \"number\": 13 }, { \"name\": \"TYPE_ENUM\", \"number\": 14 }, { \"name\": \"TYPE_SFIXED32\", \"number\": 15 }, { \"name\": \"TYPE_SFIXED64\", \"number\": 16 }, { \"name\": \"TYPE_SINT32\", \"number\": 17 }, { \"name\": \"TYPE_SINT64\", \"number\": 18 }] }, { \"name\": \"Label\", \"value\": [{ \"name\": \"LABEL_OPTIONAL\", \"number\": 1 }, { \"name\": \"LABEL_REPEATED\", \"number\": 3 }, { \"name\": \"LABEL_REQUIRED\", \"number\": 2 }] }] }, { \"name\": \"OneofDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"options\", \"number\": 2, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.OneofOptions\" }] }, { \"name\": \"EnumDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"value\", \"number\": 2, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.EnumValueDescriptorProto\" }, { \"name\": \"options\", \"number\": 3, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.EnumOptions\" }, { \"name\": \"reserved_range\", \"number\": 4, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.EnumDescriptorProto.EnumReservedRange\" }, { \"name\": \"reserved_name\", \"number\": 5, \"type\": 9, \"label\": 3 }, { \"name\": \"visibility\", \"number\": 6, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.SymbolVisibility\" }], \"nestedType\": [{ \"name\": \"EnumReservedRange\", \"field\": [{ \"name\": \"start\", \"number\": 1, \"type\": 5, \"label\": 1 }, { \"name\": \"end\", \"number\": 2, \"type\": 5, \"label\": 1 }] }] }, { \"name\": \"EnumValueDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"number\", \"number\": 2, \"type\": 5, \"label\": 1 }, { \"name\": \"options\", \"number\": 3, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.EnumValueOptions\" }] }, { \"name\": \"ServiceDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"method\", \"number\": 2, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.MethodDescriptorProto\" }, { \"name\": \"options\", \"number\": 3, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.ServiceOptions\" }] }, { \"name\": \"MethodDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"input_type\", \"number\": 2, \"type\": 9, \"label\": 1 }, { \"name\": \"output_type\", \"number\": 3, \"type\": 9, \"label\": 1 }, { \"name\": \"options\", \"number\": 4, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.MethodOptions\" }, { \"name\": \"client_streaming\", \"number\": 5, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"server_streaming\", \"number\": 6, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }] }, { \"name\": \"FileOptions\", \"field\": [{ \"name\": \"java_package\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"java_outer_classname\", \"number\": 8, \"type\": 9, \"label\": 1 }, { \"name\": \"java_multiple_files\", \"number\": 10, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"java_generate_equals_and_hash\", \"number\": 20, \"type\": 8, \"label\": 1, \"options\": { \"deprecated\": true } }, { \"name\": \"java_string_check_utf8\", \"number\": 27, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"optimize_for\", \"number\": 9, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FileOptions.OptimizeMode\", \"defaultValue\": \"SPEED\" }, { \"name\": \"go_package\", \"number\": 11, \"type\": 9, \"label\": 1 }, { \"name\": \"cc_generic_services\", \"number\": 16, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"java_generic_services\", \"number\": 17, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"py_generic_services\", \"number\": 18, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"deprecated\", \"number\": 23, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"cc_enable_arenas\", \"number\": 31, \"type\": 8, \"label\": 1, \"defaultValue\": \"true\" }, { \"name\": \"objc_class_prefix\", \"number\": 36, \"type\": 9, \"label\": 1 }, { \"name\": \"csharp_namespace\", \"number\": 37, \"type\": 9, \"label\": 1 }, { \"name\": \"swift_prefix\", \"number\": 39, \"type\": 9, \"label\": 1 }, { \"name\": \"php_class_prefix\", \"number\": 40, \"type\": 9, \"label\": 1 }, { \"name\": \"php_namespace\", \"number\": 41, \"type\": 9, \"label\": 1 }, { \"name\": \"php_metadata_namespace\", \"number\": 44, \"type\": 9, \"label\": 1 }, { \"name\": \"ruby_package\", \"number\": 45, \"type\": 9, \"label\": 1 }, { \"name\": \"features\", \"number\": 50, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"enumType\": [{ \"name\": \"OptimizeMode\", \"value\": [{ \"name\": \"SPEED\", \"number\": 1 }, { \"name\": \"CODE_SIZE\", \"number\": 2 }, { \"name\": \"LITE_RUNTIME\", \"number\": 3 }] }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"MessageOptions\", \"field\": [{ \"name\": \"message_set_wire_format\", \"number\": 1, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"no_standard_descriptor_accessor\", \"number\": 2, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"deprecated\", \"number\": 3, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"map_entry\", \"number\": 7, \"type\": 8, \"label\": 1 }, { \"name\": \"deprecated_legacy_json_field_conflicts\", \"number\": 11, \"type\": 8, \"label\": 1, \"options\": { \"deprecated\": true } }, { \"name\": \"features\", \"number\": 12, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"FieldOptions\", \"field\": [{ \"name\": \"ctype\", \"number\": 1, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FieldOptions.CType\", \"defaultValue\": \"STRING\" }, { \"name\": \"packed\", \"number\": 2, \"type\": 8, \"label\": 1 }, { \"name\": \"jstype\", \"number\": 6, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FieldOptions.JSType\", \"defaultValue\": \"JS_NORMAL\" }, { \"name\": \"lazy\", \"number\": 5, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"unverified_lazy\", \"number\": 15, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"deprecated\", \"number\": 3, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"weak\", \"number\": 10, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"debug_redact\", \"number\": 16, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"retention\", \"number\": 17, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FieldOptions.OptionRetention\" }, { \"name\": \"targets\", \"number\": 19, \"type\": 14, \"label\": 3, \"typeName\": \".google.protobuf.FieldOptions.OptionTargetType\" }, { \"name\": \"edition_defaults\", \"number\": 20, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.FieldOptions.EditionDefault\" }, { \"name\": \"features\", \"number\": 21, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"feature_support\", \"number\": 22, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FieldOptions.FeatureSupport\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"nestedType\": [{ \"name\": \"EditionDefault\", \"field\": [{ \"name\": \"edition\", \"number\": 3, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }, { \"name\": \"value\", \"number\": 2, \"type\": 9, \"label\": 1 }] }, { \"name\": \"FeatureSupport\", \"field\": [{ \"name\": \"edition_introduced\", \"number\": 1, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }, { \"name\": \"edition_deprecated\", \"number\": 2, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }, { \"name\": \"deprecation_warning\", \"number\": 3, \"type\": 9, \"label\": 1 }, { \"name\": \"edition_removed\", \"number\": 4, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }] }], \"enumType\": [{ \"name\": \"CType\", \"value\": [{ \"name\": \"STRING\", \"number\": 0 }, { \"name\": \"CORD\", \"number\": 1 }, { \"name\": \"STRING_PIECE\", \"number\": 2 }] }, { \"name\": \"JSType\", \"value\": [{ \"name\": \"JS_NORMAL\", \"number\": 0 }, { \"name\": \"JS_STRING\", \"number\": 1 }, { \"name\": \"JS_NUMBER\", \"number\": 2 }] }, { \"name\": \"OptionRetention\", \"value\": [{ \"name\": \"RETENTION_UNKNOWN\", \"number\": 0 }, { \"name\": \"RETENTION_RUNTIME\", \"number\": 1 }, { \"name\": \"RETENTION_SOURCE\", \"number\": 2 }] }, { \"name\": \"OptionTargetType\", \"value\": [{ \"name\": \"TARGET_TYPE_UNKNOWN\", \"number\": 0 }, { \"name\": \"TARGET_TYPE_FILE\", \"number\": 1 }, { \"name\": \"TARGET_TYPE_EXTENSION_RANGE\", \"number\": 2 }, { \"name\": \"TARGET_TYPE_MESSAGE\", \"number\": 3 }, { \"name\": \"TARGET_TYPE_FIELD\", \"number\": 4 }, { \"name\": \"TARGET_TYPE_ONEOF\", \"number\": 5 }, { \"name\": \"TARGET_TYPE_ENUM\", \"number\": 6 }, { \"name\": \"TARGET_TYPE_ENUM_ENTRY\", \"number\": 7 }, { \"name\": \"TARGET_TYPE_SERVICE\", \"number\": 8 }, { \"name\": \"TARGET_TYPE_METHOD\", \"number\": 9 }] }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"OneofOptions\", \"field\": [{ \"name\": \"features\", \"number\": 1, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"EnumOptions\", \"field\": [{ \"name\": \"allow_alias\", \"number\": 2, \"type\": 8, \"label\": 1 }, { \"name\": \"deprecated\", \"number\": 3, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"deprecated_legacy_json_field_conflicts\", \"number\": 6, \"type\": 8, \"label\": 1, \"options\": { \"deprecated\": true } }, { \"name\": \"features\", \"number\": 7, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"EnumValueOptions\", \"field\": [{ \"name\": \"deprecated\", \"number\": 1, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"features\", \"number\": 2, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"debug_redact\", \"number\": 3, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"feature_support\", \"number\": 4, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FieldOptions.FeatureSupport\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"ServiceOptions\", \"field\": [{ \"name\": \"features\", \"number\": 34, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"deprecated\", \"number\": 33, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"MethodOptions\", \"field\": [{ \"name\": \"deprecated\", \"number\": 33, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"idempotency_level\", \"number\": 34, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.MethodOptions.IdempotencyLevel\", \"defaultValue\": \"IDEMPOTENCY_UNKNOWN\" }, { \"name\": \"features\", \"number\": 35, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"enumType\": [{ \"name\": \"IdempotencyLevel\", \"value\": [{ \"name\": \"IDEMPOTENCY_UNKNOWN\", \"number\": 0 }, { \"name\": \"NO_SIDE_EFFECTS\", \"number\": 1 }, { \"name\": \"IDEMPOTENT\", \"number\": 2 }] }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"UninterpretedOption\", \"field\": [{ \"name\": \"name\", \"number\": 2, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption.NamePart\" }, { \"name\": \"identifier_value\", \"number\": 3, \"type\": 9, \"label\": 1 }, { \"name\": \"positive_int_value\", \"number\": 4, \"type\": 4, \"label\": 1 }, { \"name\": \"negative_int_value\", \"number\": 5, \"type\": 3, \"label\": 1 }, { \"name\": \"double_value\", \"number\": 6, \"type\": 1, \"label\": 1 }, { \"name\": \"string_value\", \"number\": 7, \"type\": 12, \"label\": 1 }, { \"name\": \"aggregate_value\", \"number\": 8, \"type\": 9, \"label\": 1 }], \"nestedType\": [{ \"name\": \"NamePart\", \"field\": [{ \"name\": \"name_part\", \"number\": 1, \"type\": 9, \"label\": 2 }, { \"name\": \"is_extension\", \"number\": 2, \"type\": 8, \"label\": 2 }] }] }, { \"name\": \"FeatureSet\", \"field\": [{ \"name\": \"field_presence\", \"number\": 1, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.FieldPresence\", \"options\": { \"retention\": 1, \"targets\": [4, 1], \"editionDefaults\": [{ \"value\": \"EXPLICIT\", \"edition\": 900 }, { \"value\": \"IMPLICIT\", \"edition\": 999 }, { \"value\": \"EXPLICIT\", \"edition\": 1000 }] } }, { \"name\": \"enum_type\", \"number\": 2, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.EnumType\", \"options\": { \"retention\": 1, \"targets\": [6, 1], \"editionDefaults\": [{ \"value\": \"CLOSED\", \"edition\": 900 }, { \"value\": \"OPEN\", \"edition\": 999 }] } }, { \"name\": \"repeated_field_encoding\", \"number\": 3, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.RepeatedFieldEncoding\", \"options\": { \"retention\": 1, \"targets\": [4, 1], \"editionDefaults\": [{ \"value\": \"EXPANDED\", \"edition\": 900 }, { \"value\": \"PACKED\", \"edition\": 999 }] } }, { \"name\": \"utf8_validation\", \"number\": 4, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.Utf8Validation\", \"options\": { \"retention\": 1, \"targets\": [4, 1], \"editionDefaults\": [{ \"value\": \"NONE\", \"edition\": 900 }, { \"value\": \"VERIFY\", \"edition\": 999 }] } }, { \"name\": \"message_encoding\", \"number\": 5, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.MessageEncoding\", \"options\": { \"retention\": 1, \"targets\": [4, 1], \"editionDefaults\": [{ \"value\": \"LENGTH_PREFIXED\", \"edition\": 900 }] } }, { \"name\": \"json_format\", \"number\": 6, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.JsonFormat\", \"options\": { \"retention\": 1, \"targets\": [3, 6, 1], \"editionDefaults\": [{ \"value\": \"LEGACY_BEST_EFFORT\", \"edition\": 900 }, { \"value\": \"ALLOW\", \"edition\": 999 }] } }, { \"name\": \"enforce_naming_style\", \"number\": 7, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.EnforceNamingStyle\", \"options\": { \"retention\": 2, \"targets\": [1, 2, 3, 4, 5, 6, 7, 8, 9], \"editionDefaults\": [{ \"value\": \"STYLE_LEGACY\", \"edition\": 900 }, { \"value\": \"STYLE2024\", \"edition\": 1001 }] } }, { \"name\": \"default_symbol_visibility\", \"number\": 8, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.VisibilityFeature.DefaultSymbolVisibility\", \"options\": { \"retention\": 2, \"targets\": [1], \"editionDefaults\": [{ \"value\": \"EXPORT_ALL\", \"edition\": 900 }, { \"value\": \"EXPORT_TOP_LEVEL\", \"edition\": 1001 }] } }], \"nestedType\": [{ \"name\": \"VisibilityFeature\", \"enumType\": [{ \"name\": \"DefaultSymbolVisibility\", \"value\": [{ \"name\": \"DEFAULT_SYMBOL_VISIBILITY_UNKNOWN\", \"number\": 0 }, { \"name\": \"EXPORT_ALL\", \"number\": 1 }, { \"name\": \"EXPORT_TOP_LEVEL\", \"number\": 2 }, { \"name\": \"LOCAL_ALL\", \"number\": 3 }, { \"name\": \"STRICT\", \"number\": 4 }] }] }], \"enumType\": [{ \"name\": \"FieldPresence\", \"value\": [{ \"name\": \"FIELD_PRESENCE_UNKNOWN\", \"number\": 0 }, { \"name\": \"EXPLICIT\", \"number\": 1 }, { \"name\": \"IMPLICIT\", \"number\": 2 }, { \"name\": \"LEGACY_REQUIRED\", \"number\": 3 }] }, { \"name\": \"EnumType\", \"value\": [{ \"name\": \"ENUM_TYPE_UNKNOWN\", \"number\": 0 }, { \"name\": \"OPEN\", \"number\": 1 }, { \"name\": \"CLOSED\", \"number\": 2 }] }, { \"name\": \"RepeatedFieldEncoding\", \"value\": [{ \"name\": \"REPEATED_FIELD_ENCODING_UNKNOWN\", \"number\": 0 }, { \"name\": \"PACKED\", \"number\": 1 }, { \"name\": \"EXPANDED\", \"number\": 2 }] }, { \"name\": \"Utf8Validation\", \"value\": [{ \"name\": \"UTF8_VALIDATION_UNKNOWN\", \"number\": 0 }, { \"name\": \"VERIFY\", \"number\": 2 }, { \"name\": \"NONE\", \"number\": 3 }] }, { \"name\": \"MessageEncoding\", \"value\": [{ \"name\": \"MESSAGE_ENCODING_UNKNOWN\", \"number\": 0 }, { \"name\": \"LENGTH_PREFIXED\", \"number\": 1 }, { \"name\": \"DELIMITED\", \"number\": 2 }] }, { \"name\": \"JsonFormat\", \"value\": [{ \"name\": \"JSON_FORMAT_UNKNOWN\", \"number\": 0 }, { \"name\": \"ALLOW\", \"number\": 1 }, { \"name\": \"LEGACY_BEST_EFFORT\", \"number\": 2 }] }, { \"name\": \"EnforceNamingStyle\", \"value\": [{ \"name\": \"ENFORCE_NAMING_STYLE_UNKNOWN\", \"number\": 0 }, { \"name\": \"STYLE2024\", \"number\": 1 }, { \"name\": \"STYLE_LEGACY\", \"number\": 2 }] }], \"extensionRange\": [{ \"start\": 1000, \"end\": 9995 }, { \"start\": 9995, \"end\": 10000 }, { \"start\": 10000, \"end\": 10001 }] }, { \"name\": \"FeatureSetDefaults\", \"field\": [{ \"name\": \"defaults\", \"number\": 1, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault\" }, { \"name\": \"minimum_edition\", \"number\": 4, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }, { \"name\": \"maximum_edition\", \"number\": 5, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }], \"nestedType\": [{ \"name\": \"FeatureSetEditionDefault\", \"field\": [{ \"name\": \"edition\", \"number\": 3, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }, { \"name\": \"overridable_features\", \"number\": 4, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"fixed_features\", \"number\": 5, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }] }] }, { \"name\": \"SourceCodeInfo\", \"field\": [{ \"name\": \"location\", \"number\": 1, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.SourceCodeInfo.Location\" }], \"nestedType\": [{ \"name\": \"Location\", \"field\": [{ \"name\": \"path\", \"number\": 1, \"type\": 5, \"label\": 3, \"options\": { \"packed\": true } }, { \"name\": \"span\", \"number\": 2, \"type\": 5, \"label\": 3, \"options\": { \"packed\": true } }, { \"name\": \"leading_comments\", \"number\": 3, \"type\": 9, \"label\": 1 }, { \"name\": \"trailing_comments\", \"number\": 4, \"type\": 9, \"label\": 1 }, { \"name\": \"leading_detached_comments\", \"number\": 6, \"type\": 9, \"label\": 3 }] }], \"extensionRange\": [{ \"start\": 536000000, \"end\": 536000001 }] }, { \"name\": \"GeneratedCodeInfo\", \"field\": [{ \"name\": \"annotation\", \"number\": 1, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.GeneratedCodeInfo.Annotation\" }], \"nestedType\": [{ \"name\": \"Annotation\", \"field\": [{ \"name\": \"path\", \"number\": 1, \"type\": 5, \"label\": 3, \"options\": { \"packed\": true } }, { \"name\": \"source_file\", \"number\": 2, \"type\": 9, \"label\": 1 }, { \"name\": \"begin\", \"number\": 3, \"type\": 5, \"label\": 1 }, { \"name\": \"end\", \"number\": 4, \"type\": 5, \"label\": 1 }, { \"name\": \"semantic\", \"number\": 5, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.GeneratedCodeInfo.Annotation.Semantic\" }], \"enumType\": [{ \"name\": \"Semantic\", \"value\": [{ \"name\": \"NONE\", \"number\": 0 }, { \"name\": \"SET\", \"number\": 1 }, { \"name\": \"ALIAS\", \"number\": 2 }] }] }] }], \"enumType\": [{ \"name\": \"Edition\", \"value\": [{ \"name\": \"EDITION_UNKNOWN\", \"number\": 0 }, { \"name\": \"EDITION_LEGACY\", \"number\": 900 }, { \"name\": \"EDITION_PROTO2\", \"number\": 998 }, { \"name\": \"EDITION_PROTO3\", \"number\": 999 }, { \"name\": \"EDITION_2023\", \"number\": 1000 }, { \"name\": \"EDITION_2024\", \"number\": 1001 }, { \"name\": \"EDITION_1_TEST_ONLY\", \"number\": 1 }, { \"name\": \"EDITION_2_TEST_ONLY\", \"number\": 2 }, { \"name\": \"EDITION_99997_TEST_ONLY\", \"number\": 99997 }, { \"name\": \"EDITION_99998_TEST_ONLY\", \"number\": 99998 }, { \"name\": \"EDITION_99999_TEST_ONLY\", \"number\": 99999 }, { \"name\": \"EDITION_MAX\", \"number\": 2147483647 }] }, { \"name\": \"SymbolVisibility\", \"value\": [{ \"name\": \"VISIBILITY_UNSET\", \"number\": 0 }, { \"name\": \"VISIBILITY_LOCAL\", \"number\": 1 }, { \"name\": \"VISIBILITY_EXPORT\", \"number\": 2 }] }] });\n/**\n * Describes the message google.protobuf.FileDescriptorSet.\n * Use `create(FileDescriptorSetSchema)` to create a new message.\n */\nexport const FileDescriptorSetSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 0);\n/**\n * Describes the message google.protobuf.FileDescriptorProto.\n * Use `create(FileDescriptorProtoSchema)` to create a new message.\n */\nexport const FileDescriptorProtoSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 1);\n/**\n * Describes the message google.protobuf.DescriptorProto.\n * Use `create(DescriptorProtoSchema)` to create a new message.\n */\nexport const DescriptorProtoSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 2);\n/**\n * Describes the message google.protobuf.DescriptorProto.ExtensionRange.\n * Use `create(DescriptorProto_ExtensionRangeSchema)` to create a new message.\n */\nexport const DescriptorProto_ExtensionRangeSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 2, 0);\n/**\n * Describes the message google.protobuf.DescriptorProto.ReservedRange.\n * Use `create(DescriptorProto_ReservedRangeSchema)` to create a new message.\n */\nexport const DescriptorProto_ReservedRangeSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 2, 1);\n/**\n * Describes the message google.protobuf.ExtensionRangeOptions.\n * Use `create(ExtensionRangeOptionsSchema)` to create a new message.\n */\nexport const ExtensionRangeOptionsSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 3);\n/**\n * Describes the message google.protobuf.ExtensionRangeOptions.Declaration.\n * Use `create(ExtensionRangeOptions_DeclarationSchema)` to create a new message.\n */\nexport const ExtensionRangeOptions_DeclarationSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 3, 0);\n/**\n * The verification state of the extension range.\n *\n * @generated from enum google.protobuf.ExtensionRangeOptions.VerificationState\n */\nexport var ExtensionRangeOptions_VerificationState;\n(function (ExtensionRangeOptions_VerificationState) {\n    /**\n     * All the extensions of the range must be declared.\n     *\n     * @generated from enum value: DECLARATION = 0;\n     */\n    ExtensionRangeOptions_VerificationState[ExtensionRangeOptions_VerificationState[\"DECLARATION\"] = 0] = \"DECLARATION\";\n    /**\n     * @generated from enum value: UNVERIFIED = 1;\n     */\n    ExtensionRangeOptions_VerificationState[ExtensionRangeOptions_VerificationState[\"UNVERIFIED\"] = 1] = \"UNVERIFIED\";\n})(ExtensionRangeOptions_VerificationState || (ExtensionRangeOptions_VerificationState = {}));\n/**\n * Describes the enum google.protobuf.ExtensionRangeOptions.VerificationState.\n */\nexport const ExtensionRangeOptions_VerificationStateSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 3, 0);\n/**\n * Describes the message google.protobuf.FieldDescriptorProto.\n * Use `create(FieldDescriptorProtoSchema)` to create a new message.\n */\nexport const FieldDescriptorProtoSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 4);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Type\n */\nexport var FieldDescriptorProto_Type;\n(function (FieldDescriptorProto_Type) {\n    /**\n     * 0 is reserved for errors.\n     * Order is weird for historical reasons.\n     *\n     * @generated from enum value: TYPE_DOUBLE = 1;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    /**\n     * @generated from enum value: TYPE_FLOAT = 2;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FLOAT\"] = 2] = \"FLOAT\";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT64 = 3;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"INT64\"] = 3] = \"INT64\";\n    /**\n     * @generated from enum value: TYPE_UINT64 = 4;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"UINT64\"] = 4] = \"UINT64\";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT32 = 5;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"INT32\"] = 5] = \"INT32\";\n    /**\n     * @generated from enum value: TYPE_FIXED64 = 6;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FIXED64\"] = 6] = \"FIXED64\";\n    /**\n     * @generated from enum value: TYPE_FIXED32 = 7;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FIXED32\"] = 7] = \"FIXED32\";\n    /**\n     * @generated from enum value: TYPE_BOOL = 8;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"BOOL\"] = 8] = \"BOOL\";\n    /**\n     * @generated from enum value: TYPE_STRING = 9;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"STRING\"] = 9] = \"STRING\";\n    /**\n     * Tag-delimited aggregate.\n     * Group type is deprecated and not supported after google.protobuf. However, Proto3\n     * implementations should still be able to parse the group wire format and\n     * treat group fields as unknown fields.  In Editions, the group wire format\n     * can be enabled via the `message_encoding` feature.\n     *\n     * @generated from enum value: TYPE_GROUP = 10;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"GROUP\"] = 10] = \"GROUP\";\n    /**\n     * Length-delimited aggregate.\n     *\n     * @generated from enum value: TYPE_MESSAGE = 11;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"MESSAGE\"] = 11] = \"MESSAGE\";\n    /**\n     * New in version 2.\n     *\n     * @generated from enum value: TYPE_BYTES = 12;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"BYTES\"] = 12] = \"BYTES\";\n    /**\n     * @generated from enum value: TYPE_UINT32 = 13;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"UINT32\"] = 13] = \"UINT32\";\n    /**\n     * @generated from enum value: TYPE_ENUM = 14;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"ENUM\"] = 14] = \"ENUM\";\n    /**\n     * @generated from enum value: TYPE_SFIXED32 = 15;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    /**\n     * @generated from enum value: TYPE_SFIXED64 = 16;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT32 = 17;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SINT32\"] = 17] = \"SINT32\";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT64 = 18;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SINT64\"] = 18] = \"SINT64\";\n})(FieldDescriptorProto_Type || (FieldDescriptorProto_Type = {}));\n/**\n * Describes the enum google.protobuf.FieldDescriptorProto.Type.\n */\nexport const FieldDescriptorProto_TypeSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 4, 0);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Label\n */\nexport var FieldDescriptorProto_Label;\n(function (FieldDescriptorProto_Label) {\n    /**\n     * 0 is reserved for errors\n     *\n     * @generated from enum value: LABEL_OPTIONAL = 1;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"OPTIONAL\"] = 1] = \"OPTIONAL\";\n    /**\n     * @generated from enum value: LABEL_REPEATED = 3;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"REPEATED\"] = 3] = \"REPEATED\";\n    /**\n     * The required label is only allowed in google.protobuf.  In proto3 and Editions\n     * it's explicitly prohibited.  In Editions, the `field_presence` feature\n     * can be used to get this behavior.\n     *\n     * @generated from enum value: LABEL_REQUIRED = 2;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"REQUIRED\"] = 2] = \"REQUIRED\";\n})(FieldDescriptorProto_Label || (FieldDescriptorProto_Label = {}));\n/**\n * Describes the enum google.protobuf.FieldDescriptorProto.Label.\n */\nexport const FieldDescriptorProto_LabelSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 4, 1);\n/**\n * Describes the message google.protobuf.OneofDescriptorProto.\n * Use `create(OneofDescriptorProtoSchema)` to create a new message.\n */\nexport const OneofDescriptorProtoSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 5);\n/**\n * Describes the message google.protobuf.EnumDescriptorProto.\n * Use `create(EnumDescriptorProtoSchema)` to create a new message.\n */\nexport const EnumDescriptorProtoSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 6);\n/**\n * Describes the message google.protobuf.EnumDescriptorProto.EnumReservedRange.\n * Use `create(EnumDescriptorProto_EnumReservedRangeSchema)` to create a new message.\n */\nexport const EnumDescriptorProto_EnumReservedRangeSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 6, 0);\n/**\n * Describes the message google.protobuf.EnumValueDescriptorProto.\n * Use `create(EnumValueDescriptorProtoSchema)` to create a new message.\n */\nexport const EnumValueDescriptorProtoSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 7);\n/**\n * Describes the message google.protobuf.ServiceDescriptorProto.\n * Use `create(ServiceDescriptorProtoSchema)` to create a new message.\n */\nexport const ServiceDescriptorProtoSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 8);\n/**\n * Describes the message google.protobuf.MethodDescriptorProto.\n * Use `create(MethodDescriptorProtoSchema)` to create a new message.\n */\nexport const MethodDescriptorProtoSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 9);\n/**\n * Describes the message google.protobuf.FileOptions.\n * Use `create(FileOptionsSchema)` to create a new message.\n */\nexport const FileOptionsSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 10);\n/**\n * Generated classes can be optimized for speed or code size.\n *\n * @generated from enum google.protobuf.FileOptions.OptimizeMode\n */\nexport var FileOptions_OptimizeMode;\n(function (FileOptions_OptimizeMode) {\n    /**\n     * Generate complete code for parsing, serialization,\n     *\n     * @generated from enum value: SPEED = 1;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"SPEED\"] = 1] = \"SPEED\";\n    /**\n     * etc.\n     *\n     * Use ReflectionOps to implement these methods.\n     *\n     * @generated from enum value: CODE_SIZE = 2;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"CODE_SIZE\"] = 2] = \"CODE_SIZE\";\n    /**\n     * Generate code using MessageLite and the lite runtime.\n     *\n     * @generated from enum value: LITE_RUNTIME = 3;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"LITE_RUNTIME\"] = 3] = \"LITE_RUNTIME\";\n})(FileOptions_OptimizeMode || (FileOptions_OptimizeMode = {}));\n/**\n * Describes the enum google.protobuf.FileOptions.OptimizeMode.\n */\nexport const FileOptions_OptimizeModeSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 10, 0);\n/**\n * Describes the message google.protobuf.MessageOptions.\n * Use `create(MessageOptionsSchema)` to create a new message.\n */\nexport const MessageOptionsSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 11);\n/**\n * Describes the message google.protobuf.FieldOptions.\n * Use `create(FieldOptionsSchema)` to create a new message.\n */\nexport const FieldOptionsSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 12);\n/**\n * Describes the message google.protobuf.FieldOptions.EditionDefault.\n * Use `create(FieldOptions_EditionDefaultSchema)` to create a new message.\n */\nexport const FieldOptions_EditionDefaultSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 12, 0);\n/**\n * Describes the message google.protobuf.FieldOptions.FeatureSupport.\n * Use `create(FieldOptions_FeatureSupportSchema)` to create a new message.\n */\nexport const FieldOptions_FeatureSupportSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 12, 1);\n/**\n * @generated from enum google.protobuf.FieldOptions.CType\n */\nexport var FieldOptions_CType;\n(function (FieldOptions_CType) {\n    /**\n     * Default mode.\n     *\n     * @generated from enum value: STRING = 0;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"STRING\"] = 0] = \"STRING\";\n    /**\n     * The option [ctype=CORD] may be applied to a non-repeated field of type\n     * \"bytes\". It indicates that in C++, the data should be stored in a Cord\n     * instead of a string.  For very large strings, this may reduce memory\n     * fragmentation. It may also allow better performance when parsing from a\n     * Cord, or when parsing with aliasing enabled, as the parsed Cord may then\n     * alias the original buffer.\n     *\n     * @generated from enum value: CORD = 1;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"CORD\"] = 1] = \"CORD\";\n    /**\n     * @generated from enum value: STRING_PIECE = 2;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"STRING_PIECE\"] = 2] = \"STRING_PIECE\";\n})(FieldOptions_CType || (FieldOptions_CType = {}));\n/**\n * Describes the enum google.protobuf.FieldOptions.CType.\n */\nexport const FieldOptions_CTypeSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 12, 0);\n/**\n * @generated from enum google.protobuf.FieldOptions.JSType\n */\nexport var FieldOptions_JSType;\n(function (FieldOptions_JSType) {\n    /**\n     * Use the default type.\n     *\n     * @generated from enum value: JS_NORMAL = 0;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_NORMAL\"] = 0] = \"JS_NORMAL\";\n    /**\n     * Use JavaScript strings.\n     *\n     * @generated from enum value: JS_STRING = 1;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_STRING\"] = 1] = \"JS_STRING\";\n    /**\n     * Use JavaScript numbers.\n     *\n     * @generated from enum value: JS_NUMBER = 2;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_NUMBER\"] = 2] = \"JS_NUMBER\";\n})(FieldOptions_JSType || (FieldOptions_JSType = {}));\n/**\n * Describes the enum google.protobuf.FieldOptions.JSType.\n */\nexport const FieldOptions_JSTypeSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 12, 1);\n/**\n * If set to RETENTION_SOURCE, the option will be omitted from the binary.\n *\n * @generated from enum google.protobuf.FieldOptions.OptionRetention\n */\nexport var FieldOptions_OptionRetention;\n(function (FieldOptions_OptionRetention) {\n    /**\n     * @generated from enum value: RETENTION_UNKNOWN = 0;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_UNKNOWN\"] = 0] = \"RETENTION_UNKNOWN\";\n    /**\n     * @generated from enum value: RETENTION_RUNTIME = 1;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_RUNTIME\"] = 1] = \"RETENTION_RUNTIME\";\n    /**\n     * @generated from enum value: RETENTION_SOURCE = 2;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_SOURCE\"] = 2] = \"RETENTION_SOURCE\";\n})(FieldOptions_OptionRetention || (FieldOptions_OptionRetention = {}));\n/**\n * Describes the enum google.protobuf.FieldOptions.OptionRetention.\n */\nexport const FieldOptions_OptionRetentionSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 12, 2);\n/**\n * This indicates the types of entities that the field may apply to when used\n * as an option. If it is unset, then the field may be freely used as an\n * option on any kind of entity.\n *\n * @generated from enum google.protobuf.FieldOptions.OptionTargetType\n */\nexport var FieldOptions_OptionTargetType;\n(function (FieldOptions_OptionTargetType) {\n    /**\n     * @generated from enum value: TARGET_TYPE_UNKNOWN = 0;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_UNKNOWN\"] = 0] = \"TARGET_TYPE_UNKNOWN\";\n    /**\n     * @generated from enum value: TARGET_TYPE_FILE = 1;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_FILE\"] = 1] = \"TARGET_TYPE_FILE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_EXTENSION_RANGE = 2;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_EXTENSION_RANGE\"] = 2] = \"TARGET_TYPE_EXTENSION_RANGE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_MESSAGE = 3;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_MESSAGE\"] = 3] = \"TARGET_TYPE_MESSAGE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_FIELD = 4;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_FIELD\"] = 4] = \"TARGET_TYPE_FIELD\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ONEOF = 5;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ONEOF\"] = 5] = \"TARGET_TYPE_ONEOF\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ENUM = 6;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ENUM\"] = 6] = \"TARGET_TYPE_ENUM\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ENUM_ENTRY = 7;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ENUM_ENTRY\"] = 7] = \"TARGET_TYPE_ENUM_ENTRY\";\n    /**\n     * @generated from enum value: TARGET_TYPE_SERVICE = 8;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_SERVICE\"] = 8] = \"TARGET_TYPE_SERVICE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_METHOD = 9;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_METHOD\"] = 9] = \"TARGET_TYPE_METHOD\";\n})(FieldOptions_OptionTargetType || (FieldOptions_OptionTargetType = {}));\n/**\n * Describes the enum google.protobuf.FieldOptions.OptionTargetType.\n */\nexport const FieldOptions_OptionTargetTypeSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 12, 3);\n/**\n * Describes the message google.protobuf.OneofOptions.\n * Use `create(OneofOptionsSchema)` to create a new message.\n */\nexport const OneofOptionsSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 13);\n/**\n * Describes the message google.protobuf.EnumOptions.\n * Use `create(EnumOptionsSchema)` to create a new message.\n */\nexport const EnumOptionsSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 14);\n/**\n * Describes the message google.protobuf.EnumValueOptions.\n * Use `create(EnumValueOptionsSchema)` to create a new message.\n */\nexport const EnumValueOptionsSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 15);\n/**\n * Describes the message google.protobuf.ServiceOptions.\n * Use `create(ServiceOptionsSchema)` to create a new message.\n */\nexport const ServiceOptionsSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 16);\n/**\n * Describes the message google.protobuf.MethodOptions.\n * Use `create(MethodOptionsSchema)` to create a new message.\n */\nexport const MethodOptionsSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 17);\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n * or neither? HTTP based RPC implementation may choose GET verb for safe\n * methods, and PUT verb for idempotent methods instead of the default POST.\n *\n * @generated from enum google.protobuf.MethodOptions.IdempotencyLevel\n */\nexport var MethodOptions_IdempotencyLevel;\n(function (MethodOptions_IdempotencyLevel) {\n    /**\n     * @generated from enum value: IDEMPOTENCY_UNKNOWN = 0;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"IDEMPOTENCY_UNKNOWN\"] = 0] = \"IDEMPOTENCY_UNKNOWN\";\n    /**\n     * implies idempotent\n     *\n     * @generated from enum value: NO_SIDE_EFFECTS = 1;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"NO_SIDE_EFFECTS\"] = 1] = \"NO_SIDE_EFFECTS\";\n    /**\n     * idempotent, but may have side effects\n     *\n     * @generated from enum value: IDEMPOTENT = 2;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"IDEMPOTENT\"] = 2] = \"IDEMPOTENT\";\n})(MethodOptions_IdempotencyLevel || (MethodOptions_IdempotencyLevel = {}));\n/**\n * Describes the enum google.protobuf.MethodOptions.IdempotencyLevel.\n */\nexport const MethodOptions_IdempotencyLevelSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 17, 0);\n/**\n * Describes the message google.protobuf.UninterpretedOption.\n * Use `create(UninterpretedOptionSchema)` to create a new message.\n */\nexport const UninterpretedOptionSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 18);\n/**\n * Describes the message google.protobuf.UninterpretedOption.NamePart.\n * Use `create(UninterpretedOption_NamePartSchema)` to create a new message.\n */\nexport const UninterpretedOption_NamePartSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 18, 0);\n/**\n * Describes the message google.protobuf.FeatureSet.\n * Use `create(FeatureSetSchema)` to create a new message.\n */\nexport const FeatureSetSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 19);\n/**\n * Describes the message google.protobuf.FeatureSet.VisibilityFeature.\n * Use `create(FeatureSet_VisibilityFeatureSchema)` to create a new message.\n */\nexport const FeatureSet_VisibilityFeatureSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 19, 0);\n/**\n * @generated from enum google.protobuf.FeatureSet.VisibilityFeature.DefaultSymbolVisibility\n */\nexport var FeatureSet_VisibilityFeature_DefaultSymbolVisibility;\n(function (FeatureSet_VisibilityFeature_DefaultSymbolVisibility) {\n    /**\n     * @generated from enum value: DEFAULT_SYMBOL_VISIBILITY_UNKNOWN = 0;\n     */\n    FeatureSet_VisibilityFeature_DefaultSymbolVisibility[FeatureSet_VisibilityFeature_DefaultSymbolVisibility[\"DEFAULT_SYMBOL_VISIBILITY_UNKNOWN\"] = 0] = \"DEFAULT_SYMBOL_VISIBILITY_UNKNOWN\";\n    /**\n     * Default pre-EDITION_2024, all UNSET visibility are export.\n     *\n     * @generated from enum value: EXPORT_ALL = 1;\n     */\n    FeatureSet_VisibilityFeature_DefaultSymbolVisibility[FeatureSet_VisibilityFeature_DefaultSymbolVisibility[\"EXPORT_ALL\"] = 1] = \"EXPORT_ALL\";\n    /**\n     * All top-level symbols default to export, nested default to local.\n     *\n     * @generated from enum value: EXPORT_TOP_LEVEL = 2;\n     */\n    FeatureSet_VisibilityFeature_DefaultSymbolVisibility[FeatureSet_VisibilityFeature_DefaultSymbolVisibility[\"EXPORT_TOP_LEVEL\"] = 2] = \"EXPORT_TOP_LEVEL\";\n    /**\n     * All symbols default to local.\n     *\n     * @generated from enum value: LOCAL_ALL = 3;\n     */\n    FeatureSet_VisibilityFeature_DefaultSymbolVisibility[FeatureSet_VisibilityFeature_DefaultSymbolVisibility[\"LOCAL_ALL\"] = 3] = \"LOCAL_ALL\";\n    /**\n     * All symbols local by default. Nested types cannot be exported.\n     * With special case caveat for message { enum {} reserved 1 to max; }\n     * This is the recommended setting for new protos.\n     *\n     * @generated from enum value: STRICT = 4;\n     */\n    FeatureSet_VisibilityFeature_DefaultSymbolVisibility[FeatureSet_VisibilityFeature_DefaultSymbolVisibility[\"STRICT\"] = 4] = \"STRICT\";\n})(FeatureSet_VisibilityFeature_DefaultSymbolVisibility || (FeatureSet_VisibilityFeature_DefaultSymbolVisibility = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.VisibilityFeature.DefaultSymbolVisibility.\n */\nexport const FeatureSet_VisibilityFeature_DefaultSymbolVisibilitySchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 19, 0, 0);\n/**\n * @generated from enum google.protobuf.FeatureSet.FieldPresence\n */\nexport var FeatureSet_FieldPresence;\n(function (FeatureSet_FieldPresence) {\n    /**\n     * @generated from enum value: FIELD_PRESENCE_UNKNOWN = 0;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"FIELD_PRESENCE_UNKNOWN\"] = 0] = \"FIELD_PRESENCE_UNKNOWN\";\n    /**\n     * @generated from enum value: EXPLICIT = 1;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"EXPLICIT\"] = 1] = \"EXPLICIT\";\n    /**\n     * @generated from enum value: IMPLICIT = 2;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"IMPLICIT\"] = 2] = \"IMPLICIT\";\n    /**\n     * @generated from enum value: LEGACY_REQUIRED = 3;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"LEGACY_REQUIRED\"] = 3] = \"LEGACY_REQUIRED\";\n})(FeatureSet_FieldPresence || (FeatureSet_FieldPresence = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.FieldPresence.\n */\nexport const FeatureSet_FieldPresenceSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 19, 0);\n/**\n * @generated from enum google.protobuf.FeatureSet.EnumType\n */\nexport var FeatureSet_EnumType;\n(function (FeatureSet_EnumType) {\n    /**\n     * @generated from enum value: ENUM_TYPE_UNKNOWN = 0;\n     */\n    FeatureSet_EnumType[FeatureSet_EnumType[\"ENUM_TYPE_UNKNOWN\"] = 0] = \"ENUM_TYPE_UNKNOWN\";\n    /**\n     * @generated from enum value: OPEN = 1;\n     */\n    FeatureSet_EnumType[FeatureSet_EnumType[\"OPEN\"] = 1] = \"OPEN\";\n    /**\n     * @generated from enum value: CLOSED = 2;\n     */\n    FeatureSet_EnumType[FeatureSet_EnumType[\"CLOSED\"] = 2] = \"CLOSED\";\n})(FeatureSet_EnumType || (FeatureSet_EnumType = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.EnumType.\n */\nexport const FeatureSet_EnumTypeSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 19, 1);\n/**\n * @generated from enum google.protobuf.FeatureSet.RepeatedFieldEncoding\n */\nexport var FeatureSet_RepeatedFieldEncoding;\n(function (FeatureSet_RepeatedFieldEncoding) {\n    /**\n     * @generated from enum value: REPEATED_FIELD_ENCODING_UNKNOWN = 0;\n     */\n    FeatureSet_RepeatedFieldEncoding[FeatureSet_RepeatedFieldEncoding[\"REPEATED_FIELD_ENCODING_UNKNOWN\"] = 0] = \"REPEATED_FIELD_ENCODING_UNKNOWN\";\n    /**\n     * @generated from enum value: PACKED = 1;\n     */\n    FeatureSet_RepeatedFieldEncoding[FeatureSet_RepeatedFieldEncoding[\"PACKED\"] = 1] = \"PACKED\";\n    /**\n     * @generated from enum value: EXPANDED = 2;\n     */\n    FeatureSet_RepeatedFieldEncoding[FeatureSet_RepeatedFieldEncoding[\"EXPANDED\"] = 2] = \"EXPANDED\";\n})(FeatureSet_RepeatedFieldEncoding || (FeatureSet_RepeatedFieldEncoding = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.RepeatedFieldEncoding.\n */\nexport const FeatureSet_RepeatedFieldEncodingSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 19, 2);\n/**\n * @generated from enum google.protobuf.FeatureSet.Utf8Validation\n */\nexport var FeatureSet_Utf8Validation;\n(function (FeatureSet_Utf8Validation) {\n    /**\n     * @generated from enum value: UTF8_VALIDATION_UNKNOWN = 0;\n     */\n    FeatureSet_Utf8Validation[FeatureSet_Utf8Validation[\"UTF8_VALIDATION_UNKNOWN\"] = 0] = \"UTF8_VALIDATION_UNKNOWN\";\n    /**\n     * @generated from enum value: VERIFY = 2;\n     */\n    FeatureSet_Utf8Validation[FeatureSet_Utf8Validation[\"VERIFY\"] = 2] = \"VERIFY\";\n    /**\n     * @generated from enum value: NONE = 3;\n     */\n    FeatureSet_Utf8Validation[FeatureSet_Utf8Validation[\"NONE\"] = 3] = \"NONE\";\n})(FeatureSet_Utf8Validation || (FeatureSet_Utf8Validation = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.Utf8Validation.\n */\nexport const FeatureSet_Utf8ValidationSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 19, 3);\n/**\n * @generated from enum google.protobuf.FeatureSet.MessageEncoding\n */\nexport var FeatureSet_MessageEncoding;\n(function (FeatureSet_MessageEncoding) {\n    /**\n     * @generated from enum value: MESSAGE_ENCODING_UNKNOWN = 0;\n     */\n    FeatureSet_MessageEncoding[FeatureSet_MessageEncoding[\"MESSAGE_ENCODING_UNKNOWN\"] = 0] = \"MESSAGE_ENCODING_UNKNOWN\";\n    /**\n     * @generated from enum value: LENGTH_PREFIXED = 1;\n     */\n    FeatureSet_MessageEncoding[FeatureSet_MessageEncoding[\"LENGTH_PREFIXED\"] = 1] = \"LENGTH_PREFIXED\";\n    /**\n     * @generated from enum value: DELIMITED = 2;\n     */\n    FeatureSet_MessageEncoding[FeatureSet_MessageEncoding[\"DELIMITED\"] = 2] = \"DELIMITED\";\n})(FeatureSet_MessageEncoding || (FeatureSet_MessageEncoding = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.MessageEncoding.\n */\nexport const FeatureSet_MessageEncodingSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 19, 4);\n/**\n * @generated from enum google.protobuf.FeatureSet.JsonFormat\n */\nexport var FeatureSet_JsonFormat;\n(function (FeatureSet_JsonFormat) {\n    /**\n     * @generated from enum value: JSON_FORMAT_UNKNOWN = 0;\n     */\n    FeatureSet_JsonFormat[FeatureSet_JsonFormat[\"JSON_FORMAT_UNKNOWN\"] = 0] = \"JSON_FORMAT_UNKNOWN\";\n    /**\n     * @generated from enum value: ALLOW = 1;\n     */\n    FeatureSet_JsonFormat[FeatureSet_JsonFormat[\"ALLOW\"] = 1] = \"ALLOW\";\n    /**\n     * @generated from enum value: LEGACY_BEST_EFFORT = 2;\n     */\n    FeatureSet_JsonFormat[FeatureSet_JsonFormat[\"LEGACY_BEST_EFFORT\"] = 2] = \"LEGACY_BEST_EFFORT\";\n})(FeatureSet_JsonFormat || (FeatureSet_JsonFormat = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.JsonFormat.\n */\nexport const FeatureSet_JsonFormatSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 19, 5);\n/**\n * @generated from enum google.protobuf.FeatureSet.EnforceNamingStyle\n */\nexport var FeatureSet_EnforceNamingStyle;\n(function (FeatureSet_EnforceNamingStyle) {\n    /**\n     * @generated from enum value: ENFORCE_NAMING_STYLE_UNKNOWN = 0;\n     */\n    FeatureSet_EnforceNamingStyle[FeatureSet_EnforceNamingStyle[\"ENFORCE_NAMING_STYLE_UNKNOWN\"] = 0] = \"ENFORCE_NAMING_STYLE_UNKNOWN\";\n    /**\n     * @generated from enum value: STYLE2024 = 1;\n     */\n    FeatureSet_EnforceNamingStyle[FeatureSet_EnforceNamingStyle[\"STYLE2024\"] = 1] = \"STYLE2024\";\n    /**\n     * @generated from enum value: STYLE_LEGACY = 2;\n     */\n    FeatureSet_EnforceNamingStyle[FeatureSet_EnforceNamingStyle[\"STYLE_LEGACY\"] = 2] = \"STYLE_LEGACY\";\n})(FeatureSet_EnforceNamingStyle || (FeatureSet_EnforceNamingStyle = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.EnforceNamingStyle.\n */\nexport const FeatureSet_EnforceNamingStyleSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 19, 6);\n/**\n * Describes the message google.protobuf.FeatureSetDefaults.\n * Use `create(FeatureSetDefaultsSchema)` to create a new message.\n */\nexport const FeatureSetDefaultsSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 20);\n/**\n * Describes the message google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.\n * Use `create(FeatureSetDefaults_FeatureSetEditionDefaultSchema)` to create a new message.\n */\nexport const FeatureSetDefaults_FeatureSetEditionDefaultSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 20, 0);\n/**\n * Describes the message google.protobuf.SourceCodeInfo.\n * Use `create(SourceCodeInfoSchema)` to create a new message.\n */\nexport const SourceCodeInfoSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 21);\n/**\n * Describes the message google.protobuf.SourceCodeInfo.Location.\n * Use `create(SourceCodeInfo_LocationSchema)` to create a new message.\n */\nexport const SourceCodeInfo_LocationSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 21, 0);\n/**\n * Describes the message google.protobuf.GeneratedCodeInfo.\n * Use `create(GeneratedCodeInfoSchema)` to create a new message.\n */\nexport const GeneratedCodeInfoSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 22);\n/**\n * Describes the message google.protobuf.GeneratedCodeInfo.Annotation.\n * Use `create(GeneratedCodeInfo_AnnotationSchema)` to create a new message.\n */\nexport const GeneratedCodeInfo_AnnotationSchema = /*@__PURE__*/ messageDesc(file_google_protobuf_descriptor, 22, 0);\n/**\n * Represents the identified object's effect on the element in the original\n * .proto file.\n *\n * @generated from enum google.protobuf.GeneratedCodeInfo.Annotation.Semantic\n */\nexport var GeneratedCodeInfo_Annotation_Semantic;\n(function (GeneratedCodeInfo_Annotation_Semantic) {\n    /**\n     * There is no effect or the effect is indescribable.\n     *\n     * @generated from enum value: NONE = 0;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * The element is set or otherwise mutated.\n     *\n     * @generated from enum value: SET = 1;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"SET\"] = 1] = \"SET\";\n    /**\n     * An alias to the element is returned.\n     *\n     * @generated from enum value: ALIAS = 2;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"ALIAS\"] = 2] = \"ALIAS\";\n})(GeneratedCodeInfo_Annotation_Semantic || (GeneratedCodeInfo_Annotation_Semantic = {}));\n/**\n * Describes the enum google.protobuf.GeneratedCodeInfo.Annotation.Semantic.\n */\nexport const GeneratedCodeInfo_Annotation_SemanticSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 22, 0, 0);\n/**\n * The full set of known editions.\n *\n * @generated from enum google.protobuf.Edition\n */\nexport var Edition;\n(function (Edition) {\n    /**\n     * A placeholder for an unknown edition value.\n     *\n     * @generated from enum value: EDITION_UNKNOWN = 0;\n     */\n    Edition[Edition[\"EDITION_UNKNOWN\"] = 0] = \"EDITION_UNKNOWN\";\n    /**\n     * A placeholder edition for specifying default behaviors *before* a feature\n     * was first introduced.  This is effectively an \"infinite past\".\n     *\n     * @generated from enum value: EDITION_LEGACY = 900;\n     */\n    Edition[Edition[\"EDITION_LEGACY\"] = 900] = \"EDITION_LEGACY\";\n    /**\n     * Legacy syntax \"editions\".  These pre-date editions, but behave much like\n     * distinct editions.  These can't be used to specify the edition of proto\n     * files, but feature definitions must supply proto2/proto3 defaults for\n     * backwards compatibility.\n     *\n     * @generated from enum value: EDITION_PROTO2 = 998;\n     */\n    Edition[Edition[\"EDITION_PROTO2\"] = 998] = \"EDITION_PROTO2\";\n    /**\n     * @generated from enum value: EDITION_PROTO3 = 999;\n     */\n    Edition[Edition[\"EDITION_PROTO3\"] = 999] = \"EDITION_PROTO3\";\n    /**\n     * Editions that have been released.  The specific values are arbitrary and\n     * should not be depended on, but they will always be time-ordered for easy\n     * comparison.\n     *\n     * @generated from enum value: EDITION_2023 = 1000;\n     */\n    Edition[Edition[\"EDITION_2023\"] = 1000] = \"EDITION_2023\";\n    /**\n     * @generated from enum value: EDITION_2024 = 1001;\n     */\n    Edition[Edition[\"EDITION_2024\"] = 1001] = \"EDITION_2024\";\n    /**\n     * Placeholder editions for testing feature resolution.  These should not be\n     * used or relied on outside of tests.\n     *\n     * @generated from enum value: EDITION_1_TEST_ONLY = 1;\n     */\n    Edition[Edition[\"EDITION_1_TEST_ONLY\"] = 1] = \"EDITION_1_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_2_TEST_ONLY = 2;\n     */\n    Edition[Edition[\"EDITION_2_TEST_ONLY\"] = 2] = \"EDITION_2_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_99997_TEST_ONLY = 99997;\n     */\n    Edition[Edition[\"EDITION_99997_TEST_ONLY\"] = 99997] = \"EDITION_99997_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_99998_TEST_ONLY = 99998;\n     */\n    Edition[Edition[\"EDITION_99998_TEST_ONLY\"] = 99998] = \"EDITION_99998_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_99999_TEST_ONLY = 99999;\n     */\n    Edition[Edition[\"EDITION_99999_TEST_ONLY\"] = 99999] = \"EDITION_99999_TEST_ONLY\";\n    /**\n     * Placeholder for specifying unbounded edition support.  This should only\n     * ever be used by plugins that can expect to never require any changes to\n     * support a new edition.\n     *\n     * @generated from enum value: EDITION_MAX = 2147483647;\n     */\n    Edition[Edition[\"EDITION_MAX\"] = 2147483647] = \"EDITION_MAX\";\n})(Edition || (Edition = {}));\n/**\n * Describes the enum google.protobuf.Edition.\n */\nexport const EditionSchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 0);\n/**\n * Describes the 'visibility' of a symbol with respect to the proto import\n * system. Symbols can only be imported when the visibility rules do not prevent\n * it (ex: local symbols cannot be imported).  Visibility modifiers can only set\n * on `message` and `enum` as they are the only types available to be referenced\n * from other files.\n *\n * @generated from enum google.protobuf.SymbolVisibility\n */\nexport var SymbolVisibility;\n(function (SymbolVisibility) {\n    /**\n     * @generated from enum value: VISIBILITY_UNSET = 0;\n     */\n    SymbolVisibility[SymbolVisibility[\"VISIBILITY_UNSET\"] = 0] = \"VISIBILITY_UNSET\";\n    /**\n     * @generated from enum value: VISIBILITY_LOCAL = 1;\n     */\n    SymbolVisibility[SymbolVisibility[\"VISIBILITY_LOCAL\"] = 1] = \"VISIBILITY_LOCAL\";\n    /**\n     * @generated from enum value: VISIBILITY_EXPORT = 2;\n     */\n    SymbolVisibility[SymbolVisibility[\"VISIBILITY_EXPORT\"] = 2] = \"VISIBILITY_EXPORT\";\n})(SymbolVisibility || (SymbolVisibility = {}));\n/**\n * Describes the enum google.protobuf.SymbolVisibility.\n */\nexport const SymbolVisibilitySchema = /*@__PURE__*/ enumDesc(file_google_protobuf_descriptor, 1);\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { protoCamelCase } from \"../reflect/names.js\";\nimport { isFieldSet, clearField } from \"../fields.js\";\nimport { base64Encode } from \"../wire/base64-encoding.js\";\nimport { toBinary } from \"../to-binary.js\";\nimport { clone } from \"../clone.js\";\nimport { Edition, FieldDescriptorProtoSchema, FieldOptionsSchema, FileDescriptorProtoSchema, DescriptorProtoSchema, EnumDescriptorProtoSchema, } from \"../wkt/gen/google/protobuf/descriptor_pb.js\";\n/**\n * Create necessary information to embed a file descriptor in\n * generated code.\n *\n * @private\n */\nexport function embedFileDesc(file) {\n    const embed = {\n        bootable: false,\n        proto() {\n            const stripped = clone(FileDescriptorProtoSchema, file);\n            clearField(stripped, FileDescriptorProtoSchema.field.dependency);\n            clearField(stripped, FileDescriptorProtoSchema.field.sourceCodeInfo);\n            stripped.messageType.map(stripJsonNames);\n            return stripped;\n        },\n        base64() {\n            const bytes = toBinary(FileDescriptorProtoSchema, this.proto());\n            return base64Encode(bytes, \"std_raw\");\n        },\n    };\n    return file.name == \"google/protobuf/descriptor.proto\"\n        ? Object.assign(Object.assign({}, embed), { bootable: true, boot() {\n                return createFileDescriptorProtoBoot(this.proto());\n            } }) : embed;\n}\nfunction stripJsonNames(d) {\n    for (const f of d.field) {\n        if (f.jsonName === protoCamelCase(f.name)) {\n            clearField(f, FieldDescriptorProtoSchema.field.jsonName);\n        }\n    }\n    for (const n of d.nestedType) {\n        stripJsonNames(n);\n    }\n}\n/**\n * Compute the path to a message, enumeration, extension, or service in a\n * file descriptor.\n *\n * @private\n */\nexport function pathInFileDesc(desc) {\n    if (desc.kind == \"service\") {\n        return [desc.file.services.indexOf(desc)];\n    }\n    const parent = desc.parent;\n    if (parent == undefined) {\n        switch (desc.kind) {\n            case \"enum\":\n                return [desc.file.enums.indexOf(desc)];\n            case \"message\":\n                return [desc.file.messages.indexOf(desc)];\n            case \"extension\":\n                return [desc.file.extensions.indexOf(desc)];\n        }\n    }\n    function findPath(cur) {\n        const nested = [];\n        for (let parent = cur.parent; parent;) {\n            const idx = parent.nestedMessages.indexOf(cur);\n            nested.unshift(idx);\n            cur = parent;\n            parent = cur.parent;\n        }\n        nested.unshift(cur.file.messages.indexOf(cur));\n        return nested;\n    }\n    const path = findPath(parent);\n    switch (desc.kind) {\n        case \"extension\":\n            return [...path, parent.nestedExtensions.indexOf(desc)];\n        case \"message\":\n            return [...path, parent.nestedMessages.indexOf(desc)];\n        case \"enum\":\n            return [...path, parent.nestedEnums.indexOf(desc)];\n    }\n}\n/**\n * The file descriptor for google/protobuf/descriptor.proto cannot be embedded\n * in serialized form, since it is required to parse itself.\n *\n * This function takes an instance of the message, and returns a plain object\n * that can be hydrated to the message again via bootFileDescriptorProto().\n *\n * This function only works with a message google.protobuf.FileDescriptorProto\n * for google/protobuf/descriptor.proto, and only supports features that are\n * relevant for the specific use case. For example, it discards file options,\n * reserved ranges and reserved names, and field options that are unused in\n * descriptor.proto.\n *\n * @private\n */\nexport function createFileDescriptorProtoBoot(proto) {\n    var _a;\n    assert(proto.name == \"google/protobuf/descriptor.proto\");\n    assert(proto.package == \"google.protobuf\");\n    assert(!proto.dependency.length);\n    assert(!proto.publicDependency.length);\n    assert(!proto.weakDependency.length);\n    assert(!proto.optionDependency.length);\n    assert(!proto.service.length);\n    assert(!proto.extension.length);\n    assert(proto.sourceCodeInfo === undefined);\n    assert(proto.syntax == \"\" || proto.syntax == \"proto2\");\n    assert(!((_a = proto.options) === null || _a === void 0 ? void 0 : _a.features)); // we're dropping file options\n    assert(proto.edition === Edition.EDITION_UNKNOWN);\n    return {\n        name: proto.name,\n        package: proto.package,\n        messageType: proto.messageType.map(createDescriptorBoot),\n        enumType: proto.enumType.map(createEnumDescriptorBoot),\n    };\n}\nfunction createDescriptorBoot(proto) {\n    assert(proto.extension.length == 0);\n    assert(!proto.oneofDecl.length);\n    assert(!proto.options);\n    assert(!isFieldSet(proto, DescriptorProtoSchema.field.visibility));\n    const b = {\n        name: proto.name,\n    };\n    if (proto.field.length) {\n        b.field = proto.field.map(createFieldDescriptorBoot);\n    }\n    if (proto.nestedType.length) {\n        b.nestedType = proto.nestedType.map(createDescriptorBoot);\n    }\n    if (proto.enumType.length) {\n        b.enumType = proto.enumType.map(createEnumDescriptorBoot);\n    }\n    if (proto.extensionRange.length) {\n        b.extensionRange = proto.extensionRange.map((r) => {\n            assert(!r.options);\n            return { start: r.start, end: r.end };\n        });\n    }\n    return b;\n}\nfunction createFieldDescriptorBoot(proto) {\n    assert(isFieldSet(proto, FieldDescriptorProtoSchema.field.name));\n    assert(isFieldSet(proto, FieldDescriptorProtoSchema.field.number));\n    assert(isFieldSet(proto, FieldDescriptorProtoSchema.field.type));\n    assert(!isFieldSet(proto, FieldDescriptorProtoSchema.field.oneofIndex));\n    assert(!isFieldSet(proto, FieldDescriptorProtoSchema.field.jsonName) ||\n        proto.jsonName === protoCamelCase(proto.name));\n    const b = {\n        name: proto.name,\n        number: proto.number,\n        type: proto.type,\n    };\n    if (isFieldSet(proto, FieldDescriptorProtoSchema.field.label)) {\n        b.label = proto.label;\n    }\n    if (isFieldSet(proto, FieldDescriptorProtoSchema.field.typeName)) {\n        b.typeName = proto.typeName;\n    }\n    if (isFieldSet(proto, FieldDescriptorProtoSchema.field.extendee)) {\n        b.extendee = proto.extendee;\n    }\n    if (isFieldSet(proto, FieldDescriptorProtoSchema.field.defaultValue)) {\n        b.defaultValue = proto.defaultValue;\n    }\n    if (proto.options) {\n        b.options = createFieldOptionsBoot(proto.options);\n    }\n    return b;\n}\nfunction createFieldOptionsBoot(proto) {\n    const b = {};\n    assert(!isFieldSet(proto, FieldOptionsSchema.field.ctype));\n    if (isFieldSet(proto, FieldOptionsSchema.field.packed)) {\n        b.packed = proto.packed;\n    }\n    assert(!isFieldSet(proto, FieldOptionsSchema.field.jstype));\n    assert(!isFieldSet(proto, FieldOptionsSchema.field.lazy));\n    assert(!isFieldSet(proto, FieldOptionsSchema.field.unverifiedLazy));\n    if (isFieldSet(proto, FieldOptionsSchema.field.deprecated)) {\n        b.deprecated = proto.deprecated;\n    }\n    assert(!isFieldSet(proto, FieldOptionsSchema.field.weak));\n    assert(!isFieldSet(proto, FieldOptionsSchema.field.debugRedact));\n    if (isFieldSet(proto, FieldOptionsSchema.field.retention)) {\n        b.retention = proto.retention;\n    }\n    if (proto.targets.length) {\n        b.targets = proto.targets;\n    }\n    if (proto.editionDefaults.length) {\n        b.editionDefaults = proto.editionDefaults.map((d) => ({\n            value: d.value,\n            edition: d.edition,\n        }));\n    }\n    assert(!isFieldSet(proto, FieldOptionsSchema.field.features));\n    assert(!isFieldSet(proto, FieldOptionsSchema.field.uninterpretedOption));\n    return b;\n}\nfunction createEnumDescriptorBoot(proto) {\n    assert(!proto.options);\n    assert(!isFieldSet(proto, EnumDescriptorProtoSchema.field.visibility));\n    return {\n        name: proto.name,\n        value: proto.value.map((v) => {\n            assert(!v.options);\n            return {\n                name: v.name,\n                number: v.number,\n            };\n        }),\n    };\n}\n/**\n * Assert that condition is truthy or throw error.\n */\nfunction assert(condition) {\n    if (!condition) {\n        throw new Error();\n    }\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Hydrate an extension descriptor.\n *\n * @private\n */\nexport function extDesc(file, path, ...paths) {\n    if (paths.length == 0) {\n        return file.extensions[path];\n    }\n    const e = paths.pop(); // we checked length above\n    return paths.reduce((acc, cur) => acc.nestedMessages[cur], file.messages[path]).nestedExtensions[e];\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType } from \"./descriptors.js\";\nimport { scalarZeroValue } from \"./reflect/scalar.js\";\nimport { reflect } from \"./reflect/reflect.js\";\nimport { BinaryReader, WireType } from \"./wire/binary-encoding.js\";\nimport { varint32write } from \"./wire/varint.js\";\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\n/**\n * Parse serialized binary data.\n */\nexport function fromBinary(schema, bytes, options) {\n    const msg = reflect(schema, undefined, false);\n    readMessage(msg, new BinaryReader(bytes), makeReadOptions(options), false, bytes.byteLength);\n    return msg.message;\n}\n/**\n * Parse from binary data, merging fields.\n *\n * Repeated fields are appended. Map entries are added, overwriting\n * existing keys.\n *\n * If a message field is already present, it will be merged with the\n * new data.\n */\nexport function mergeFromBinary(schema, target, bytes, options) {\n    readMessage(reflect(schema, target, false), new BinaryReader(bytes), makeReadOptions(options), false, bytes.byteLength);\n    return target;\n}\n/**\n * If `delimited` is false, read the length given in `lengthOrDelimitedFieldNo`.\n *\n * If `delimited` is true, read until an EndGroup tag. `lengthOrDelimitedFieldNo`\n * is the expected field number.\n *\n * @private\n */\nfunction readMessage(message, reader, options, delimited, lengthOrDelimitedFieldNo) {\n    var _a;\n    const end = delimited ? reader.len : reader.pos + lengthOrDelimitedFieldNo;\n    let fieldNo;\n    let wireType;\n    const unknownFields = (_a = message.getUnknown()) !== null && _a !== void 0 ? _a : [];\n    while (reader.pos < end) {\n        [fieldNo, wireType] = reader.tag();\n        if (delimited && wireType == WireType.EndGroup) {\n            break;\n        }\n        const field = message.findNumber(fieldNo);\n        if (!field) {\n            const data = reader.skip(wireType, fieldNo);\n            if (options.readUnknownFields) {\n                unknownFields.push({ no: fieldNo, wireType, data });\n            }\n            continue;\n        }\n        readField(message, reader, field, wireType, options);\n    }\n    if (delimited) {\n        if (wireType != WireType.EndGroup || fieldNo !== lengthOrDelimitedFieldNo) {\n            throw new Error(\"invalid end group tag\");\n        }\n    }\n    if (unknownFields.length > 0) {\n        message.setUnknown(unknownFields);\n    }\n}\n/**\n * @private\n */\nexport function readField(message, reader, field, wireType, options) {\n    var _a;\n    switch (field.fieldKind) {\n        case \"scalar\":\n            message.set(field, readScalar(reader, field.scalar));\n            break;\n        case \"enum\":\n            const val = readScalar(reader, ScalarType.INT32);\n            if (field.enum.open) {\n                message.set(field, val);\n            }\n            else {\n                const ok = field.enum.values.some((v) => v.number === val);\n                if (ok) {\n                    message.set(field, val);\n                }\n                else if (options.readUnknownFields) {\n                    const bytes = [];\n                    varint32write(val, bytes);\n                    const unknownFields = (_a = message.getUnknown()) !== null && _a !== void 0 ? _a : [];\n                    unknownFields.push({\n                        no: field.number,\n                        wireType,\n                        data: new Uint8Array(bytes),\n                    });\n                    message.setUnknown(unknownFields);\n                }\n            }\n            break;\n        case \"message\":\n            message.set(field, readMessageField(reader, options, field, message.get(field)));\n            break;\n        case \"list\":\n            readListField(reader, wireType, message.get(field), options);\n            break;\n        case \"map\":\n            readMapEntry(reader, message.get(field), options);\n            break;\n    }\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(reader, map, options) {\n    const field = map.field();\n    let key;\n    let val;\n    // Read the length of the map entry, which is a varint.\n    const len = reader.uint32();\n    // WARNING: Calculate end AFTER advancing reader.pos (above), so that\n    //          reader.pos is at the start of the map entry.\n    const end = reader.pos + len;\n    while (reader.pos < end) {\n        const [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader, field.mapKey);\n                break;\n            case 2:\n                switch (field.mapKind) {\n                    case \"scalar\":\n                        val = readScalar(reader, field.scalar);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = readMessageField(reader, options, field);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        key = scalarZeroValue(field.mapKey, false);\n    }\n    if (val === undefined) {\n        switch (field.mapKind) {\n            case \"scalar\":\n                val = scalarZeroValue(field.scalar, false);\n                break;\n            case \"enum\":\n                val = field.enum.values[0].number;\n                break;\n            case \"message\":\n                val = reflect(field.message, undefined, false);\n                break;\n        }\n    }\n    map.set(key, val);\n}\nfunction readListField(reader, wireType, list, options) {\n    var _a;\n    const field = list.field();\n    if (field.listKind === \"message\") {\n        list.add(readMessageField(reader, options, field));\n        return;\n    }\n    const scalarType = (_a = field.scalar) !== null && _a !== void 0 ? _a : ScalarType.INT32;\n    const packed = wireType == WireType.LengthDelimited &&\n        scalarType != ScalarType.STRING &&\n        scalarType != ScalarType.BYTES;\n    if (!packed) {\n        list.add(readScalar(reader, scalarType));\n        return;\n    }\n    const e = reader.uint32() + reader.pos;\n    while (reader.pos < e) {\n        list.add(readScalar(reader, scalarType));\n    }\n}\nfunction readMessageField(reader, options, field, mergeMessage) {\n    const delimited = field.delimitedEncoding;\n    const message = mergeMessage !== null && mergeMessage !== void 0 ? mergeMessage : reflect(field.message, undefined, false);\n    readMessage(message, reader, options, delimited, delimited ? field.number : reader.uint32());\n    return message;\n}\nfunction readScalar(reader, type) {\n    switch (type) {\n        case ScalarType.STRING:\n            return reader.string();\n        case ScalarType.BOOL:\n            return reader.bool();\n        case ScalarType.DOUBLE:\n            return reader.double();\n        case ScalarType.FLOAT:\n            return reader.float();\n        case ScalarType.INT32:\n            return reader.int32();\n        case ScalarType.INT64:\n            return reader.int64();\n        case ScalarType.UINT64:\n            return reader.uint64();\n        case ScalarType.FIXED64:\n            return reader.fixed64();\n        case ScalarType.BYTES:\n            return reader.bytes();\n        case ScalarType.FIXED32:\n            return reader.fixed32();\n        case ScalarType.SFIXED32:\n            return reader.sfixed32();\n        case ScalarType.SFIXED64:\n            return reader.sfixed64();\n        case ScalarType.SINT64:\n            return reader.sint64();\n        case ScalarType.UINT32:\n            return reader.uint32();\n        case ScalarType.SINT32:\n            return reader.sint32();\n    }\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { base64Decode } from \"../wire/base64-encoding.js\";\nimport { FileDescriptorProtoSchema } from \"../wkt/gen/google/protobuf/descriptor_pb.js\";\nimport { createFileRegistry } from \"../registry.js\";\nimport { restoreJsonNames } from \"./restore-json-names.js\";\nimport { fromBinary } from \"../from-binary.js\";\n/**\n * Hydrate a file descriptor.\n *\n * @private\n */\nexport function fileDesc(b64, imports) {\n    var _a;\n    const root = fromBinary(FileDescriptorProtoSchema, base64Decode(b64));\n    root.messageType.forEach(restoreJsonNames);\n    root.dependency = (_a = imports === null || imports === void 0 ? void 0 : imports.map((f) => f.proto.name)) !== null && _a !== void 0 ? _a : [];\n    const reg = createFileRegistry(root, (protoFileName) => imports === null || imports === void 0 ? void 0 : imports.find((f) => f.proto.name === protoFileName));\n    // biome-ignore lint/style/noNonNullAssertion: non-null assertion because we just created the registry from the file we look up\n    return reg.getFile(root.name);\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Hydrate a service descriptor.\n *\n * @private\n */\nexport function serviceDesc(file, path, ...paths) {\n    if (paths.length > 0) {\n        throw new Error();\n    }\n    return file.services[path];\n}\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private\n */\nexport const packageName = \"@bufbuild/protobuf\";\n/**\n * @private\n */\nexport const wktPublicImportPaths = {\n    \"google/protobuf/compiler/plugin.proto\": packageName + \"/wkt\",\n    \"google/protobuf/any.proto\": packageName + \"/wkt\",\n    \"google/protobuf/api.proto\": packageName + \"/wkt\",\n    \"google/protobuf/cpp_features.proto\": packageName + \"/wkt\",\n    \"google/protobuf/descriptor.proto\": packageName + \"/wkt\",\n    \"google/protobuf/duration.proto\": packageName + \"/wkt\",\n    \"google/protobuf/empty.proto\": packageName + \"/wkt\",\n    \"google/protobuf/field_mask.proto\": packageName + \"/wkt\",\n    \"google/protobuf/go_features.proto\": packageName + \"/wkt\",\n    \"google/protobuf/java_features.proto\": packageName + \"/wkt\",\n    \"google/protobuf/source_context.proto\": packageName + \"/wkt\",\n    \"google/protobuf/struct.proto\": packageName + \"/wkt\",\n    \"google/protobuf/timestamp.proto\": packageName + \"/wkt\",\n    \"google/protobuf/type.proto\": packageName + \"/wkt\",\n    \"google/protobuf/wrappers.proto\": packageName + \"/wkt\",\n};\n/**\n * @private\n */\n// biome-ignore format: want this to read well\nexport const symbols = {\n    isMessage: { typeOnly: false, bootstrapWktFrom: \"../../is-message.js\", from: packageName },\n    Message: { typeOnly: true, bootstrapWktFrom: \"../../types.js\", from: packageName },\n    create: { typeOnly: false, bootstrapWktFrom: \"../../create.js\", from: packageName },\n    fromJson: { typeOnly: false, bootstrapWktFrom: \"../../from-json.js\", from: packageName },\n    fromJsonString: { typeOnly: false, bootstrapWktFrom: \"../../from-json.js\", from: packageName },\n    fromBinary: { typeOnly: false, bootstrapWktFrom: \"../../from-binary.js\", from: packageName },\n    toBinary: { typeOnly: false, bootstrapWktFrom: \"../../to-binary.js\", from: packageName },\n    toJson: { typeOnly: false, bootstrapWktFrom: \"../../to-json.js\", from: packageName },\n    toJsonString: { typeOnly: false, bootstrapWktFrom: \"../../to-json.js\", from: packageName },\n    protoInt64: { typeOnly: false, bootstrapWktFrom: \"../../proto-int64.js\", from: packageName },\n    JsonValue: { typeOnly: true, bootstrapWktFrom: \"../../json-value.js\", from: packageName },\n    JsonObject: { typeOnly: true, bootstrapWktFrom: \"../../json-value.js\", from: packageName },\n    codegen: {\n        boot: { typeOnly: false, bootstrapWktFrom: \"../../codegenv2/boot.js\", from: packageName + \"/codegenv2\" },\n        fileDesc: { typeOnly: false, bootstrapWktFrom: \"../../codegenv2/file.js\", from: packageName + \"/codegenv2\" },\n        enumDesc: { typeOnly: false, bootstrapWktFrom: \"../../codegenv2/enum.js\", from: packageName + \"/codegenv2\" },\n        extDesc: { typeOnly: false, bootstrapWktFrom: \"../../codegenv2/extension.js\", from: packageName + \"/codegenv2\" },\n        messageDesc: { typeOnly: false, bootstrapWktFrom: \"../../codegenv2/message.js\", from: packageName + \"/codegenv2\" },\n        serviceDesc: { typeOnly: false, bootstrapWktFrom: \"../../codegenv2/service.js\", from: packageName + \"/codegenv2\" },\n        tsEnum: { typeOnly: false, bootstrapWktFrom: \"../../codegenv2/enum.js\", from: packageName + \"/codegenv2\" },\n        GenFile: { typeOnly: true, bootstrapWktFrom: \"../../codegenv2/types.js\", from: packageName + \"/codegenv2\" },\n        GenEnum: { typeOnly: true, bootstrapWktFrom: \"../../codegenv2/types.js\", from: packageName + \"/codegenv2\" },\n        GenExtension: { typeOnly: true, bootstrapWktFrom: \"../../codegenv2/types.js\", from: packageName + \"/codegenv2\" },\n        GenMessage: { typeOnly: true, bootstrapWktFrom: \"../../codegenv2/types.js\", from: packageName + \"/codegenv2\" },\n        GenService: { typeOnly: true, bootstrapWktFrom: \"../../codegenv2/types.js\", from: packageName + \"/codegenv2\" },\n    },\n};\n", "// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType } from \"../descriptors.js\";\n/**\n * Return the TypeScript type (as a string) for the given scalar type.\n */\nexport function scalarTypeScriptType(scalar, longAsString) {\n    switch (scalar) {\n        case ScalarType.STRING:\n            return \"string\";\n        case ScalarType.BOOL:\n            return \"boolean\";\n        case ScalarType.UINT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.FIXED64:\n        case ScalarType.SINT64:\n        case ScalarType.INT64:\n            return longAsString ? \"string\" : \"bigint\";\n        case ScalarType.BYTES:\n            return \"Uint8Array\";\n        default:\n            return \"number\";\n    }\n}\n/**\n * Return the JSON type (as a string) for the given scalar type.\n */\nexport function scalarJsonType(scalar) {\n    switch (scalar) {\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return `number | \"NaN\" | \"Infinity\" | \"-Infinity\"`;\n        case ScalarType.UINT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.FIXED64:\n        case ScalarType.SINT64:\n        case ScalarType.INT64:\n            return \"string\";\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n            return \"number\";\n        case ScalarType.STRING:\n            return \"string\";\n        case ScalarType.BOOL:\n            return \"boolean\";\n        case ScalarType.BYTES:\n            return \"string\";\n    }\n}\n"],
  "mappings": "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",
  "names": ["ScalarType", "IMPLICIT", "_a", "IMPLICIT", "boot", "isMessage", "messageDesc", "WireType", "messageDesc", "EDITION_PROTO3", "EDITION_PROTO2", "IMPLICIT", "messageDesc", "messageDesc", "LEGACY_REQUIRED", "ExtensionRangeOptions_VerificationState", "FieldDescriptorProto_Type", "FieldDescriptorProto_Label", "FileOptions_OptimizeMode", "FieldOptions_CType", "FieldOptions_JSType", "FieldOptions_OptionRetention", "FieldOptions_OptionTargetType", "MethodOptions_IdempotencyLevel", "FeatureSet_VisibilityFeature_DefaultSymbolVisibility", "FeatureSet_FieldPresence", "FeatureSet_EnumType", "FeatureSet_RepeatedFieldEncoding", "FeatureSet_Utf8Validation", "FeatureSet_MessageEncoding", "FeatureSet_JsonFormat", "FeatureSet_EnforceNamingStyle", "GeneratedCodeInfo_Annotation_Semantic", "Edition", "SymbolVisibility", "parent", "assert"]
}
