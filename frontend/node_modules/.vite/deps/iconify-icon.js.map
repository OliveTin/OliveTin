{
  "version": 3,
  "sources": ["../../iconify-icon/dist/iconify-icon.mjs"],
  "sourcesContent": ["/**\n* (c) Iconify\n*\n* For the full copyright and license information, please view the license.txt\n* files at https://github.com/iconify/iconify\n*\n* Licensed under MIT.\n*\n* @license MIT\n* @version 3.0.2\n*/\n/** Default values for dimensions */\nconst defaultIconDimensions = Object.freeze({\n\tleft: 0,\n\ttop: 0,\n\twidth: 16,\n\theight: 16\n});\n/** Default values for transformations */\nconst defaultIconTransformations = Object.freeze({\n\trotate: 0,\n\tvFlip: false,\n\thFlip: false\n});\n/** Default values for all optional IconifyIcon properties */\nconst defaultIconProps = Object.freeze({\n\t...defaultIconDimensions,\n\t...defaultIconTransformations\n});\n/** Default values for all properties used in ExtendedIconifyIcon */\nconst defaultExtendedIconProps = Object.freeze({\n\t...defaultIconProps,\n\tbody: \"\",\n\thidden: false\n});\n\n/**\n* Default icon customisations values\n*/\nconst defaultIconSizeCustomisations = Object.freeze({\n\twidth: null,\n\theight: null\n});\nconst defaultIconCustomisations = Object.freeze({\n\t...defaultIconSizeCustomisations,\n\t...defaultIconTransformations\n});\n\n/**\n* Get rotation value\n*/\nfunction rotateFromString(value, defaultValue = 0) {\n\tconst units = value.replace(/^-?[0-9.]*/, \"\");\n\tfunction cleanup(value$1) {\n\t\twhile (value$1 < 0) value$1 += 4;\n\t\treturn value$1 % 4;\n\t}\n\tif (units === \"\") {\n\t\tconst num = parseInt(value);\n\t\treturn isNaN(num) ? 0 : cleanup(num);\n\t} else if (units !== value) {\n\t\tlet split = 0;\n\t\tswitch (units) {\n\t\t\tcase \"%\":\n\t\t\t\tsplit = 25;\n\t\t\t\tbreak;\n\t\t\tcase \"deg\": split = 90;\n\t\t}\n\t\tif (split) {\n\t\t\tlet num = parseFloat(value.slice(0, value.length - units.length));\n\t\t\tif (isNaN(num)) return 0;\n\t\t\tnum = num / split;\n\t\t\treturn num % 1 === 0 ? cleanup(num) : 0;\n\t\t}\n\t}\n\treturn defaultValue;\n}\n\nconst separator = /[\\s,]+/;\n/**\n* Apply \"flip\" string to icon customisations\n*/\nfunction flipFromString(custom, flip) {\n\tflip.split(separator).forEach((str) => {\n\t\tswitch (str.trim()) {\n\t\t\tcase \"horizontal\":\n\t\t\t\tcustom.hFlip = true;\n\t\t\t\tbreak;\n\t\t\tcase \"vertical\":\n\t\t\t\tcustom.vFlip = true;\n\t\t\t\tbreak;\n\t\t}\n\t});\n}\n\nconst defaultCustomisations = {\n    ...defaultIconCustomisations,\n    preserveAspectRatio: '',\n};\n/**\n * Get customisations\n */\nfunction getCustomisations(node) {\n    const customisations = {\n        ...defaultCustomisations,\n    };\n    const attr = (key, def) => node.getAttribute(key) || def;\n    // Dimensions\n    customisations.width = attr('width', null);\n    customisations.height = attr('height', null);\n    // Rotation\n    customisations.rotate = rotateFromString(attr('rotate', ''));\n    // Flip\n    flipFromString(customisations, attr('flip', ''));\n    // SVG attributes\n    customisations.preserveAspectRatio = attr('preserveAspectRatio', attr('preserveaspectratio', ''));\n    return customisations;\n}\n/**\n * Check if customisations have been updated\n */\nfunction haveCustomisationsChanged(value1, value2) {\n    for (const key in defaultCustomisations) {\n        if (value1[key] !== value2[key]) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n* Expression to test part of icon name.\n*\n* Used when loading icons from Iconify API due to project naming convension.\n* Ignored when using custom icon sets - convension does not apply.\n*/\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\n/**\n* Convert string icon name to IconifyIconName object.\n*/\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n\tconst colonSeparated = value.split(\":\");\n\tif (value.slice(0, 1) === \"@\") {\n\t\tif (colonSeparated.length < 2 || colonSeparated.length > 3) return null;\n\t\tprovider = colonSeparated.shift().slice(1);\n\t}\n\tif (colonSeparated.length > 3 || !colonSeparated.length) return null;\n\tif (colonSeparated.length > 1) {\n\t\tconst name$1 = colonSeparated.pop();\n\t\tconst prefix = colonSeparated.pop();\n\t\tconst result = {\n\t\t\tprovider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n\t\t\tprefix,\n\t\t\tname: name$1\n\t\t};\n\t\treturn validate && !validateIconName(result) ? null : result;\n\t}\n\tconst name = colonSeparated[0];\n\tconst dashSeparated = name.split(\"-\");\n\tif (dashSeparated.length > 1) {\n\t\tconst result = {\n\t\t\tprovider,\n\t\t\tprefix: dashSeparated.shift(),\n\t\t\tname: dashSeparated.join(\"-\")\n\t\t};\n\t\treturn validate && !validateIconName(result) ? null : result;\n\t}\n\tif (allowSimpleName && provider === \"\") {\n\t\tconst result = {\n\t\t\tprovider,\n\t\t\tprefix: \"\",\n\t\t\tname\n\t\t};\n\t\treturn validate && !validateIconName(result, allowSimpleName) ? null : result;\n\t}\n\treturn null;\n};\n/**\n* Check if icon is valid.\n*\n* This function is not part of stringToIcon because validation is not needed for most code.\n*/\nconst validateIconName = (icon, allowSimpleName) => {\n\tif (!icon) return false;\n\treturn !!((allowSimpleName && icon.prefix === \"\" || !!icon.prefix) && !!icon.name);\n};\n\n/**\n* Resolve icon set icons\n*\n* Returns parent icon for each icon\n*/\nfunction getIconsTree(data, names) {\n\tconst icons = data.icons;\n\tconst aliases = data.aliases || Object.create(null);\n\tconst resolved = Object.create(null);\n\tfunction resolve(name) {\n\t\tif (icons[name]) return resolved[name] = [];\n\t\tif (!(name in resolved)) {\n\t\t\tresolved[name] = null;\n\t\t\tconst parent = aliases[name] && aliases[name].parent;\n\t\t\tconst value = parent && resolve(parent);\n\t\t\tif (value) resolved[name] = [parent].concat(value);\n\t\t}\n\t\treturn resolved[name];\n\t}\n\t(Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n\treturn resolved;\n}\n\n/**\n* Merge transformations\n*/\nfunction mergeIconTransformations(obj1, obj2) {\n\tconst result = {};\n\tif (!obj1.hFlip !== !obj2.hFlip) result.hFlip = true;\n\tif (!obj1.vFlip !== !obj2.vFlip) result.vFlip = true;\n\tconst rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n\tif (rotate) result.rotate = rotate;\n\treturn result;\n}\n\n/**\n* Merge icon and alias\n*\n* Can also be used to merge default values and icon\n*/\nfunction mergeIconData(parent, child) {\n\tconst result = mergeIconTransformations(parent, child);\n\tfor (const key in defaultExtendedIconProps) if (key in defaultIconTransformations) {\n\t\tif (key in parent && !(key in result)) result[key] = defaultIconTransformations[key];\n\t} else if (key in child) result[key] = child[key];\n\telse if (key in parent) result[key] = parent[key];\n\treturn result;\n}\n\n/**\n* Get icon data, using prepared aliases tree\n*/\nfunction internalGetIconData(data, name, tree) {\n\tconst icons = data.icons;\n\tconst aliases = data.aliases || Object.create(null);\n\tlet currentProps = {};\n\tfunction parse(name$1) {\n\t\tcurrentProps = mergeIconData(icons[name$1] || aliases[name$1], currentProps);\n\t}\n\tparse(name);\n\ttree.forEach(parse);\n\treturn mergeIconData(data, currentProps);\n}\n\n/**\n* Extract icons from an icon set\n*\n* Returns list of icons that were found in icon set\n*/\nfunction parseIconSet(data, callback) {\n\tconst names = [];\n\tif (typeof data !== \"object\" || typeof data.icons !== \"object\") return names;\n\tif (data.not_found instanceof Array) data.not_found.forEach((name) => {\n\t\tcallback(name, null);\n\t\tnames.push(name);\n\t});\n\tconst tree = getIconsTree(data);\n\tfor (const name in tree) {\n\t\tconst item = tree[name];\n\t\tif (item) {\n\t\t\tcallback(name, internalGetIconData(data, name, item));\n\t\t\tnames.push(name);\n\t\t}\n\t}\n\treturn names;\n}\n\n/**\n* Optional properties\n*/\nconst optionalPropertyDefaults = {\n\tprovider: \"\",\n\taliases: {},\n\tnot_found: {},\n\t...defaultIconDimensions\n};\n/**\n* Check props\n*/\nfunction checkOptionalProps(item, defaults) {\n\tfor (const prop in defaults) if (prop in item && typeof item[prop] !== typeof defaults[prop]) return false;\n\treturn true;\n}\n/**\n* Validate icon set, return it as IconifyJSON on success, null on failure\n*\n* Unlike validateIconSet(), this function is very basic.\n* It does not throw exceptions, it does not check metadata, it does not fix stuff.\n*/\nfunction quicklyValidateIconSet(obj) {\n\tif (typeof obj !== \"object\" || obj === null) return null;\n\tconst data = obj;\n\tif (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") return null;\n\tif (!checkOptionalProps(obj, optionalPropertyDefaults)) return null;\n\tconst icons = data.icons;\n\tfor (const name in icons) {\n\t\tconst icon = icons[name];\n\t\tif (!name || typeof icon.body !== \"string\" || !checkOptionalProps(icon, defaultExtendedIconProps)) return null;\n\t}\n\tconst aliases = data.aliases || Object.create(null);\n\tfor (const name in aliases) {\n\t\tconst icon = aliases[name];\n\t\tconst parent = icon.parent;\n\t\tif (!name || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(icon, defaultExtendedIconProps)) return null;\n\t}\n\treturn data;\n}\n\n/**\n* Storage by provider and prefix\n*/\nconst dataStorage = Object.create(null);\n/**\n* Create new storage\n*/\nfunction newStorage(provider, prefix) {\n\treturn {\n\t\tprovider,\n\t\tprefix,\n\t\ticons: Object.create(null),\n\t\tmissing: /* @__PURE__ */ new Set()\n\t};\n}\n/**\n* Get storage for provider and prefix\n*/\nfunction getStorage(provider, prefix) {\n\tconst providerStorage = dataStorage[provider] || (dataStorage[provider] = Object.create(null));\n\treturn providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\n/**\n* Add icon set to storage\n*\n* Returns array of added icons\n*/\nfunction addIconSet(storage, data) {\n\tif (!quicklyValidateIconSet(data)) return [];\n\treturn parseIconSet(data, (name, icon) => {\n\t\tif (icon) storage.icons[name] = icon;\n\t\telse storage.missing.add(name);\n\t});\n}\n/**\n* Add icon to storage\n*/\nfunction addIconToStorage(storage, name, icon) {\n\ttry {\n\t\tif (typeof icon.body === \"string\") {\n\t\t\tstorage.icons[name] = { ...icon };\n\t\t\treturn true;\n\t\t}\n\t} catch (err) {}\n\treturn false;\n}\n/**\n* List available icons\n*/\nfunction listIcons$1(provider, prefix) {\n\tlet allIcons = [];\n\t(typeof provider === \"string\" ? [provider] : Object.keys(dataStorage)).forEach((provider$1) => {\n\t\t(typeof provider$1 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider$1] || {})).forEach((prefix$1) => {\n\t\t\tconst storage = getStorage(provider$1, prefix$1);\n\t\t\tallIcons = allIcons.concat(Object.keys(storage.icons).map((name) => (provider$1 !== \"\" ? \"@\" + provider$1 + \":\" : \"\") + prefix$1 + \":\" + name));\n\t\t});\n\t});\n\treturn allIcons;\n}\n\n/**\n* Allow storing icons without provider or prefix, making it possible to store icons like \"home\"\n*/\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n\tif (typeof allow === \"boolean\") simpleNames = allow;\n\treturn simpleNames;\n}\n/**\n* Get icon data\n*\n* Returns:\n* - IconifyIcon on success, object directly from storage so don't modify it\n* - null if icon is marked as missing (returned in `not_found` property from API, so don't bother sending API requests)\n* - undefined if icon is missing in storage\n*/\nfunction getIconData(name) {\n\tconst icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n\tif (icon) {\n\t\tconst storage = getStorage(icon.provider, icon.prefix);\n\t\tconst iconName = icon.name;\n\t\treturn storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n\t}\n}\n/**\n* Add one icon\n*/\nfunction addIcon$1(name, data) {\n\tconst icon = stringToIcon(name, true, simpleNames);\n\tif (!icon) return false;\n\tconst storage = getStorage(icon.provider, icon.prefix);\n\tif (data) return addIconToStorage(storage, icon.name, data);\n\telse {\n\t\tstorage.missing.add(icon.name);\n\t\treturn true;\n\t}\n}\n/**\n* Add icon set\n*/\nfunction addCollection$1(data, provider) {\n\tif (typeof data !== \"object\") return false;\n\tif (typeof provider !== \"string\") provider = data.provider || \"\";\n\tif (simpleNames && !provider && !data.prefix) {\n\t\tlet added = false;\n\t\tif (quicklyValidateIconSet(data)) {\n\t\t\tdata.prefix = \"\";\n\t\t\tparseIconSet(data, (name, icon) => {\n\t\t\t\tif (addIcon$1(name, icon)) added = true;\n\t\t\t});\n\t\t}\n\t\treturn added;\n\t}\n\tconst prefix = data.prefix;\n\tif (!validateIconName({\n\t\tprefix,\n\t\tname: \"a\"\n\t})) return false;\n\treturn !!addIconSet(getStorage(provider, prefix), data);\n}\n/**\n* Check if icon data is available\n*/\nfunction iconLoaded$1(name) {\n\treturn !!getIconData(name);\n}\n/**\n* Get full icon\n*/\nfunction getIcon$1(name) {\n\tconst result = getIconData(name);\n\treturn result ? {\n\t\t...defaultIconProps,\n\t\t...result\n\t} : result;\n}\n\n/**\n* Remove callback\n*/\nfunction removeCallback(storages, id) {\n\tstorages.forEach((storage) => {\n\t\tconst items = storage.loaderCallbacks;\n\t\tif (items) storage.loaderCallbacks = items.filter((row) => row.id !== id);\n\t});\n}\n/**\n* Update all callbacks for provider and prefix\n*/\nfunction updateCallbacks(storage) {\n\tif (!storage.pendingCallbacksFlag) {\n\t\tstorage.pendingCallbacksFlag = true;\n\t\tsetTimeout(() => {\n\t\t\tstorage.pendingCallbacksFlag = false;\n\t\t\tconst items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n\t\t\tif (!items.length) return;\n\t\t\tlet hasPending = false;\n\t\t\tconst provider = storage.provider;\n\t\t\tconst prefix = storage.prefix;\n\t\t\titems.forEach((item) => {\n\t\t\t\tconst icons = item.icons;\n\t\t\t\tconst oldLength = icons.pending.length;\n\t\t\t\ticons.pending = icons.pending.filter((icon) => {\n\t\t\t\t\tif (icon.prefix !== prefix) return true;\n\t\t\t\t\tconst name = icon.name;\n\t\t\t\t\tif (storage.icons[name]) icons.loaded.push({\n\t\t\t\t\t\tprovider,\n\t\t\t\t\t\tprefix,\n\t\t\t\t\t\tname\n\t\t\t\t\t});\n\t\t\t\t\telse if (storage.missing.has(name)) icons.missing.push({\n\t\t\t\t\t\tprovider,\n\t\t\t\t\t\tprefix,\n\t\t\t\t\t\tname\n\t\t\t\t\t});\n\t\t\t\t\telse {\n\t\t\t\t\t\thasPending = true;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\tif (icons.pending.length !== oldLength) {\n\t\t\t\t\tif (!hasPending) removeCallback([storage], item.id);\n\t\t\t\t\titem.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n/**\n* Unique id counter for callbacks\n*/\nlet idCounter = 0;\n/**\n* Add callback\n*/\nfunction storeCallback(callback, icons, pendingSources) {\n\tconst id = idCounter++;\n\tconst abort = removeCallback.bind(null, pendingSources, id);\n\tif (!icons.pending.length) return abort;\n\tconst item = {\n\t\tid,\n\t\ticons,\n\t\tcallback,\n\t\tabort\n\t};\n\tpendingSources.forEach((storage) => {\n\t\t(storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n\t});\n\treturn abort;\n}\n\n/**\n* Check if icons have been loaded\n*/\nfunction sortIcons(icons) {\n\tconst result = {\n\t\tloaded: [],\n\t\tmissing: [],\n\t\tpending: []\n\t};\n\tconst storage = Object.create(null);\n\ticons.sort((a, b) => {\n\t\tif (a.provider !== b.provider) return a.provider.localeCompare(b.provider);\n\t\tif (a.prefix !== b.prefix) return a.prefix.localeCompare(b.prefix);\n\t\treturn a.name.localeCompare(b.name);\n\t});\n\tlet lastIcon = {\n\t\tprovider: \"\",\n\t\tprefix: \"\",\n\t\tname: \"\"\n\t};\n\ticons.forEach((icon) => {\n\t\tif (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) return;\n\t\tlastIcon = icon;\n\t\tconst provider = icon.provider;\n\t\tconst prefix = icon.prefix;\n\t\tconst name = icon.name;\n\t\tconst providerStorage = storage[provider] || (storage[provider] = Object.create(null));\n\t\tconst localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n\t\tlet list;\n\t\tif (name in localStorage.icons) list = result.loaded;\n\t\telse if (prefix === \"\" || localStorage.missing.has(name)) list = result.missing;\n\t\telse list = result.pending;\n\t\tconst item = {\n\t\t\tprovider,\n\t\t\tprefix,\n\t\t\tname\n\t\t};\n\t\tlist.push(item);\n\t});\n\treturn result;\n}\n\n/**\n* Local storate types and entries\n*/\nconst storage = Object.create(null);\n/**\n* Set API module\n*/\nfunction setAPIModule(provider, item) {\n\tstorage[provider] = item;\n}\n/**\n* Get API module\n*/\nfunction getAPIModule(provider) {\n\treturn storage[provider] || storage[\"\"];\n}\n\n/**\n* Convert icons list from string/icon mix to icons and validate them\n*/\nfunction listToIcons(list, validate = true, simpleNames = false) {\n\tconst result = [];\n\tlist.forEach((item) => {\n\t\tconst icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n\t\tif (icon) result.push(icon);\n\t});\n\treturn result;\n}\n\n/**\n* Create full API configuration from partial data\n*/\nfunction createAPIConfig(source) {\n\tlet resources;\n\tif (typeof source.resources === \"string\") resources = [source.resources];\n\telse {\n\t\tresources = source.resources;\n\t\tif (!(resources instanceof Array) || !resources.length) return null;\n\t}\n\treturn {\n\t\tresources,\n\t\tpath: source.path || \"/\",\n\t\tmaxURL: source.maxURL || 500,\n\t\trotate: source.rotate || 750,\n\t\ttimeout: source.timeout || 5e3,\n\t\trandom: source.random === true,\n\t\tindex: source.index || 0,\n\t\tdataAfterTimeout: source.dataAfterTimeout !== false\n\t};\n}\n/**\n* Local storage\n*/\nconst configStorage = Object.create(null);\n/**\n* Redundancy for API servers.\n*\n* API should have very high uptime because of implemented redundancy at server level, but\n* sometimes bad things happen. On internet 100% uptime is not possible.\n*\n* There could be routing problems. Server might go down for whatever reason, but it takes\n* few minutes to detect that downtime, so during those few minutes API might not be accessible.\n*\n* This script has some redundancy to mitigate possible network issues.\n*\n* If one host cannot be reached in 'rotate' (750 by default) ms, script will try to retrieve\n* data from different host. Hosts have different configurations, pointing to different\n* API servers hosted at different providers.\n*/\nconst fallBackAPISources = [\"https://api.simplesvg.com\", \"https://api.unisvg.com\"];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) if (fallBackAPISources.length === 1) fallBackAPI.push(fallBackAPISources.shift());\nelse if (Math.random() > .5) fallBackAPI.push(fallBackAPISources.shift());\nelse fallBackAPI.push(fallBackAPISources.pop());\nconfigStorage[\"\"] = createAPIConfig({ resources: [\"https://api.iconify.design\"].concat(fallBackAPI) });\n/**\n* Add custom config for provider\n*/\nfunction addAPIProvider$1(provider, customConfig) {\n\tconst config = createAPIConfig(customConfig);\n\tif (config === null) return false;\n\tconfigStorage[provider] = config;\n\treturn true;\n}\n/**\n* Get API configuration\n*/\nfunction getAPIConfig(provider) {\n\treturn configStorage[provider];\n}\n/**\n* List API providers\n*/\nfunction listAPIProviders() {\n\treturn Object.keys(configStorage);\n}\n\n/**\n* Default RedundancyConfig for API calls\n*/\nconst defaultConfig = {\n\tresources: [],\n\tindex: 0,\n\ttimeout: 2e3,\n\trotate: 750,\n\trandom: false,\n\tdataAfterTimeout: false\n};\n\n/**\n* Send query\n*/\nfunction sendQuery(config, payload, query, done) {\n\tconst resourcesCount = config.resources.length;\n\tconst startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n\tlet resources;\n\tif (config.random) {\n\t\tlet list = config.resources.slice(0);\n\t\tresources = [];\n\t\twhile (list.length > 1) {\n\t\t\tconst nextIndex = Math.floor(Math.random() * list.length);\n\t\t\tresources.push(list[nextIndex]);\n\t\t\tlist = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n\t\t}\n\t\tresources = resources.concat(list);\n\t} else resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n\tconst startTime = Date.now();\n\tlet status = \"pending\";\n\tlet queriesSent = 0;\n\tlet lastError;\n\tlet timer = null;\n\tlet queue = [];\n\tlet doneCallbacks = [];\n\tif (typeof done === \"function\") doneCallbacks.push(done);\n\t/**\n\t* Reset timer\n\t*/\n\tfunction resetTimer() {\n\t\tif (timer) {\n\t\t\tclearTimeout(timer);\n\t\t\ttimer = null;\n\t\t}\n\t}\n\t/**\n\t* Abort everything\n\t*/\n\tfunction abort() {\n\t\tif (status === \"pending\") status = \"aborted\";\n\t\tresetTimer();\n\t\tqueue.forEach((item) => {\n\t\t\tif (item.status === \"pending\") item.status = \"aborted\";\n\t\t});\n\t\tqueue = [];\n\t}\n\t/**\n\t* Add / replace callback to call when execution is complete.\n\t* This can be used to abort pending query implementations when query is complete or aborted.\n\t*/\n\tfunction subscribe(callback, overwrite) {\n\t\tif (overwrite) doneCallbacks = [];\n\t\tif (typeof callback === \"function\") doneCallbacks.push(callback);\n\t}\n\t/**\n\t* Get query status\n\t*/\n\tfunction getQueryStatus() {\n\t\treturn {\n\t\t\tstartTime,\n\t\t\tpayload,\n\t\t\tstatus,\n\t\t\tqueriesSent,\n\t\t\tqueriesPending: queue.length,\n\t\t\tsubscribe,\n\t\t\tabort\n\t\t};\n\t}\n\t/**\n\t* Fail query\n\t*/\n\tfunction failQuery() {\n\t\tstatus = \"failed\";\n\t\tdoneCallbacks.forEach((callback) => {\n\t\t\tcallback(void 0, lastError);\n\t\t});\n\t}\n\t/**\n\t* Clear queue\n\t*/\n\tfunction clearQueue() {\n\t\tqueue.forEach((item) => {\n\t\t\tif (item.status === \"pending\") item.status = \"aborted\";\n\t\t});\n\t\tqueue = [];\n\t}\n\t/**\n\t* Got response from module\n\t*/\n\tfunction moduleResponse(item, response, data) {\n\t\tconst isError = response !== \"success\";\n\t\tqueue = queue.filter((queued) => queued !== item);\n\t\tswitch (status) {\n\t\t\tcase \"pending\": break;\n\t\t\tcase \"failed\":\n\t\t\t\tif (isError || !config.dataAfterTimeout) return;\n\t\t\t\tbreak;\n\t\t\tdefault: return;\n\t\t}\n\t\tif (response === \"abort\") {\n\t\t\tlastError = data;\n\t\t\tfailQuery();\n\t\t\treturn;\n\t\t}\n\t\tif (isError) {\n\t\t\tlastError = data;\n\t\t\tif (!queue.length) if (!resources.length) failQuery();\n\t\t\telse execNext();\n\t\t\treturn;\n\t\t}\n\t\tresetTimer();\n\t\tclearQueue();\n\t\tif (!config.random) {\n\t\t\tconst index = config.resources.indexOf(item.resource);\n\t\t\tif (index !== -1 && index !== config.index) config.index = index;\n\t\t}\n\t\tstatus = \"completed\";\n\t\tdoneCallbacks.forEach((callback) => {\n\t\t\tcallback(data);\n\t\t});\n\t}\n\t/**\n\t* Execute next query\n\t*/\n\tfunction execNext() {\n\t\tif (status !== \"pending\") return;\n\t\tresetTimer();\n\t\tconst resource = resources.shift();\n\t\tif (resource === void 0) {\n\t\t\tif (queue.length) {\n\t\t\t\ttimer = setTimeout(() => {\n\t\t\t\t\tresetTimer();\n\t\t\t\t\tif (status === \"pending\") {\n\t\t\t\t\t\tclearQueue();\n\t\t\t\t\t\tfailQuery();\n\t\t\t\t\t}\n\t\t\t\t}, config.timeout);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfailQuery();\n\t\t\treturn;\n\t\t}\n\t\tconst item = {\n\t\t\tstatus: \"pending\",\n\t\t\tresource,\n\t\t\tcallback: (status$1, data) => {\n\t\t\t\tmoduleResponse(item, status$1, data);\n\t\t\t}\n\t\t};\n\t\tqueue.push(item);\n\t\tqueriesSent++;\n\t\ttimer = setTimeout(execNext, config.rotate);\n\t\tquery(resource, payload, item.callback);\n\t}\n\tsetTimeout(execNext);\n\treturn getQueryStatus;\n}\n\n/**\n* Redundancy instance\n*/\nfunction initRedundancy(cfg) {\n\tconst config = {\n\t\t...defaultConfig,\n\t\t...cfg\n\t};\n\tlet queries = [];\n\t/**\n\t* Remove aborted and completed queries\n\t*/\n\tfunction cleanup() {\n\t\tqueries = queries.filter((item) => item().status === \"pending\");\n\t}\n\t/**\n\t* Send query\n\t*/\n\tfunction query(payload, queryCallback, doneCallback) {\n\t\tconst query$1 = sendQuery(config, payload, queryCallback, (data, error) => {\n\t\t\tcleanup();\n\t\t\tif (doneCallback) doneCallback(data, error);\n\t\t});\n\t\tqueries.push(query$1);\n\t\treturn query$1;\n\t}\n\t/**\n\t* Find instance\n\t*/\n\tfunction find(callback) {\n\t\treturn queries.find((value) => {\n\t\t\treturn callback(value);\n\t\t}) || null;\n\t}\n\treturn {\n\t\tquery,\n\t\tfind,\n\t\tsetIndex: (index) => {\n\t\t\tconfig.index = index;\n\t\t},\n\t\tgetIndex: () => config.index,\n\t\tcleanup\n\t};\n}\n\nfunction emptyCallback$1() {}\nconst redundancyCache = Object.create(null);\n/**\n* Get Redundancy instance for provider\n*/\nfunction getRedundancyCache(provider) {\n\tif (!redundancyCache[provider]) {\n\t\tconst config = getAPIConfig(provider);\n\t\tif (!config) return;\n\t\tredundancyCache[provider] = {\n\t\t\tconfig,\n\t\t\tredundancy: initRedundancy(config)\n\t\t};\n\t}\n\treturn redundancyCache[provider];\n}\n/**\n* Send API query\n*/\nfunction sendAPIQuery(target, query, callback) {\n\tlet redundancy;\n\tlet send;\n\tif (typeof target === \"string\") {\n\t\tconst api = getAPIModule(target);\n\t\tif (!api) {\n\t\t\tcallback(void 0, 424);\n\t\t\treturn emptyCallback$1;\n\t\t}\n\t\tsend = api.send;\n\t\tconst cached = getRedundancyCache(target);\n\t\tif (cached) redundancy = cached.redundancy;\n\t} else {\n\t\tconst config = createAPIConfig(target);\n\t\tif (config) {\n\t\t\tredundancy = initRedundancy(config);\n\t\t\tconst api = getAPIModule(target.resources ? target.resources[0] : \"\");\n\t\t\tif (api) send = api.send;\n\t\t}\n\t}\n\tif (!redundancy || !send) {\n\t\tcallback(void 0, 424);\n\t\treturn emptyCallback$1;\n\t}\n\treturn redundancy.query(query, send, callback)().abort;\n}\n\nfunction emptyCallback() {}\n/**\n* Function called when new icons have been loaded\n*/\nfunction loadedNewIcons(storage) {\n\tif (!storage.iconsLoaderFlag) {\n\t\tstorage.iconsLoaderFlag = true;\n\t\tsetTimeout(() => {\n\t\t\tstorage.iconsLoaderFlag = false;\n\t\t\tupdateCallbacks(storage);\n\t\t});\n\t}\n}\n/**\n* Check icon names for API\n*/\nfunction checkIconNamesForAPI(icons) {\n\tconst valid = [];\n\tconst invalid = [];\n\ticons.forEach((name) => {\n\t\t(name.match(matchIconName) ? valid : invalid).push(name);\n\t});\n\treturn {\n\t\tvalid,\n\t\tinvalid\n\t};\n}\n/**\n* Parse loader response\n*/\nfunction parseLoaderResponse(storage, icons, data) {\n\tfunction checkMissing() {\n\t\tconst pending = storage.pendingIcons;\n\t\ticons.forEach((name) => {\n\t\t\tif (pending) pending.delete(name);\n\t\t\tif (!storage.icons[name]) storage.missing.add(name);\n\t\t});\n\t}\n\tif (data && typeof data === \"object\") try {\n\t\tif (!addIconSet(storage, data).length) {\n\t\t\tcheckMissing();\n\t\t\treturn;\n\t\t}\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n\tcheckMissing();\n\tloadedNewIcons(storage);\n}\n/**\n* Handle response that can be async\n*/\nfunction parsePossiblyAsyncResponse(response, callback) {\n\tif (response instanceof Promise) response.then((data) => {\n\t\tcallback(data);\n\t}).catch(() => {\n\t\tcallback(null);\n\t});\n\telse callback(response);\n}\n/**\n* Load icons\n*/\nfunction loadNewIcons(storage, icons) {\n\tif (!storage.iconsToLoad) storage.iconsToLoad = icons;\n\telse storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n\tif (!storage.iconsQueueFlag) {\n\t\tstorage.iconsQueueFlag = true;\n\t\tsetTimeout(() => {\n\t\t\tstorage.iconsQueueFlag = false;\n\t\t\tconst { provider, prefix } = storage;\n\t\t\tconst icons$1 = storage.iconsToLoad;\n\t\t\tdelete storage.iconsToLoad;\n\t\t\tif (!icons$1 || !icons$1.length) return;\n\t\t\tconst customIconLoader = storage.loadIcon;\n\t\t\tif (storage.loadIcons && (icons$1.length > 1 || !customIconLoader)) {\n\t\t\t\tparsePossiblyAsyncResponse(storage.loadIcons(icons$1, prefix, provider), (data) => {\n\t\t\t\t\tparseLoaderResponse(storage, icons$1, data);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (customIconLoader) {\n\t\t\t\ticons$1.forEach((name) => {\n\t\t\t\t\tparsePossiblyAsyncResponse(customIconLoader(name, prefix, provider), (data) => {\n\t\t\t\t\t\tparseLoaderResponse(storage, [name], data ? {\n\t\t\t\t\t\t\tprefix,\n\t\t\t\t\t\t\ticons: { [name]: data }\n\t\t\t\t\t\t} : null);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst { valid, invalid } = checkIconNamesForAPI(icons$1);\n\t\t\tif (invalid.length) parseLoaderResponse(storage, invalid, null);\n\t\t\tif (!valid.length) return;\n\t\t\tconst api = prefix.match(matchIconName) ? getAPIModule(provider) : null;\n\t\t\tif (!api) {\n\t\t\t\tparseLoaderResponse(storage, valid, null);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tapi.prepare(provider, prefix, valid).forEach((item) => {\n\t\t\t\tsendAPIQuery(provider, item, (data) => {\n\t\t\t\t\tparseLoaderResponse(storage, item.icons, data);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}\n/**\n* Load icons\n*/\nconst loadIcons$1 = (icons, callback) => {\n\tconst sortedIcons = sortIcons(listToIcons(icons, true, allowSimpleNames()));\n\tif (!sortedIcons.pending.length) {\n\t\tlet callCallback = true;\n\t\tif (callback) setTimeout(() => {\n\t\t\tif (callCallback) callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n\t\t});\n\t\treturn () => {\n\t\t\tcallCallback = false;\n\t\t};\n\t}\n\tconst newIcons = Object.create(null);\n\tconst sources = [];\n\tlet lastProvider, lastPrefix;\n\tsortedIcons.pending.forEach((icon) => {\n\t\tconst { provider, prefix } = icon;\n\t\tif (prefix === lastPrefix && provider === lastProvider) return;\n\t\tlastProvider = provider;\n\t\tlastPrefix = prefix;\n\t\tsources.push(getStorage(provider, prefix));\n\t\tconst providerNewIcons = newIcons[provider] || (newIcons[provider] = Object.create(null));\n\t\tif (!providerNewIcons[prefix]) providerNewIcons[prefix] = [];\n\t});\n\tsortedIcons.pending.forEach((icon) => {\n\t\tconst { provider, prefix, name } = icon;\n\t\tconst storage = getStorage(provider, prefix);\n\t\tconst pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n\t\tif (!pendingQueue.has(name)) {\n\t\t\tpendingQueue.add(name);\n\t\t\tnewIcons[provider][prefix].push(name);\n\t\t}\n\t});\n\tsources.forEach((storage) => {\n\t\tconst list = newIcons[storage.provider][storage.prefix];\n\t\tif (list.length) loadNewIcons(storage, list);\n\t});\n\treturn callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\n/**\n* Load one icon using Promise\n*/\nconst loadIcon$1 = (icon) => {\n\treturn new Promise((fulfill, reject) => {\n\t\tconst iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n\t\tif (!iconObj) {\n\t\t\treject(icon);\n\t\t\treturn;\n\t\t}\n\t\tloadIcons$1([iconObj || icon], (loaded) => {\n\t\t\tif (loaded.length && iconObj) {\n\t\t\t\tconst data = getIconData(iconObj);\n\t\t\t\tif (data) {\n\t\t\t\t\tfulfill({\n\t\t\t\t\t\t...defaultIconProps,\n\t\t\t\t\t\t...data\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\treject(icon);\n\t\t});\n\t});\n};\n\n/**\n * Test icon string\n */\nfunction testIconObject(value) {\n    try {\n        const obj = typeof value === 'string' ? JSON.parse(value) : value;\n        if (typeof obj.body === 'string') {\n            return {\n                ...obj,\n            };\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    }\n    catch (err) {\n        //\n    }\n}\n\n/**\n * Parse icon value, load if needed\n */\nfunction parseIconValue(value, onload) {\n    if (typeof value === 'object') {\n        const data = testIconObject(value);\n        return {\n            data,\n            value,\n        };\n    }\n    if (typeof value !== 'string') {\n        // Invalid value\n        return {\n            value,\n        };\n    }\n    // Check for JSON\n    if (value.includes('{')) {\n        const data = testIconObject(value);\n        if (data) {\n            return {\n                data,\n                value,\n            };\n        }\n    }\n    // Parse icon name\n    const name = stringToIcon(value, true, true);\n    if (!name) {\n        return {\n            value,\n        };\n    }\n    // Valid icon name: check if data is available\n    const data = getIconData(name);\n    // Icon data exists or icon has no prefix. Do not load icon from API if icon has no prefix\n    if (data !== undefined || !name.prefix) {\n        return {\n            value,\n            name,\n            data, // could be 'null' -> icon is missing\n        };\n    }\n    // Load icon\n    const loading = loadIcons$1([name], () => onload(value, name, getIconData(name)));\n    return {\n        value,\n        name,\n        loading,\n    };\n}\n\n// Check for Safari\nlet isBuggedSafari = false;\ntry {\n    isBuggedSafari = navigator.vendor.indexOf('Apple') === 0;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n}\ncatch (err) {\n    //\n}\n/**\n * Get render mode\n */\nfunction getRenderMode(body, mode) {\n    switch (mode) {\n        // Force mode\n        case 'svg':\n        case 'bg':\n        case 'mask':\n            return mode;\n    }\n    // Check for animation, use 'style' for animated icons, unless browser is Safari\n    // (only <a>, which should be ignored or animations start with '<a')\n    if (mode !== 'style' &&\n        (isBuggedSafari || body.indexOf('<a') === -1)) {\n        // Render <svg>\n        return 'svg';\n    }\n    // Use background or mask\n    return body.indexOf('currentColor') === -1 ? 'bg' : 'mask';\n}\n\n/**\n* Regular expressions for calculating dimensions\n*/\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize$1(size, ratio, precision) {\n\tif (ratio === 1) return size;\n\tprecision = precision || 100;\n\tif (typeof size === \"number\") return Math.ceil(size * ratio * precision) / precision;\n\tif (typeof size !== \"string\") return size;\n\tconst oldParts = size.split(unitsSplit);\n\tif (oldParts === null || !oldParts.length) return size;\n\tconst newParts = [];\n\tlet code = oldParts.shift();\n\tlet isNumber = unitsTest.test(code);\n\twhile (true) {\n\t\tif (isNumber) {\n\t\t\tconst num = parseFloat(code);\n\t\t\tif (isNaN(num)) newParts.push(code);\n\t\t\telse newParts.push(Math.ceil(num * ratio * precision) / precision);\n\t\t} else newParts.push(code);\n\t\tcode = oldParts.shift();\n\t\tif (code === void 0) return newParts.join(\"\");\n\t\tisNumber = !isNumber;\n\t}\n}\n\nfunction splitSVGDefs(content, tag = \"defs\") {\n\tlet defs = \"\";\n\tconst index = content.indexOf(\"<\" + tag);\n\twhile (index >= 0) {\n\t\tconst start = content.indexOf(\">\", index);\n\t\tconst end = content.indexOf(\"</\" + tag);\n\t\tif (start === -1 || end === -1) break;\n\t\tconst endEnd = content.indexOf(\">\", end);\n\t\tif (endEnd === -1) break;\n\t\tdefs += content.slice(start + 1, end).trim();\n\t\tcontent = content.slice(0, index).trim() + content.slice(endEnd + 1);\n\t}\n\treturn {\n\t\tdefs,\n\t\tcontent\n\t};\n}\n/**\n* Merge defs and content\n*/\nfunction mergeDefsAndContent(defs, content) {\n\treturn defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\n/**\n* Wrap SVG content, without wrapping definitions\n*/\nfunction wrapSVGContent(body, start, end) {\n\tconst split = splitSVGDefs(body);\n\treturn mergeDefsAndContent(split.defs, start + split.content + end);\n}\n\n/**\n* Check if value should be unset. Allows multiple keywords\n*/\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\n/**\n* Get SVG attributes and content from icon + customisations\n*\n* Does not generate style to make it compatible with frameworks that use objects for style, such as React.\n* Instead, it generates 'inline' value. If true, rendering engine should add verticalAlign: -0.125em to icon.\n*\n* Customisations should be normalised by platform specific parser.\n* Result should be converted to <svg> by platform specific parser.\n* Use replaceIDs to generate unique IDs for body.\n*/\nfunction iconToSVG(icon, customisations) {\n\tconst fullIcon = {\n\t\t...defaultIconProps,\n\t\t...icon\n\t};\n\tconst fullCustomisations = {\n\t\t...defaultIconCustomisations,\n\t\t...customisations\n\t};\n\tconst box = {\n\t\tleft: fullIcon.left,\n\t\ttop: fullIcon.top,\n\t\twidth: fullIcon.width,\n\t\theight: fullIcon.height\n\t};\n\tlet body = fullIcon.body;\n\t[fullIcon, fullCustomisations].forEach((props) => {\n\t\tconst transformations = [];\n\t\tconst hFlip = props.hFlip;\n\t\tconst vFlip = props.vFlip;\n\t\tlet rotation = props.rotate;\n\t\tif (hFlip) if (vFlip) rotation += 2;\n\t\telse {\n\t\t\ttransformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n\t\t\ttransformations.push(\"scale(-1 1)\");\n\t\t\tbox.top = box.left = 0;\n\t\t}\n\t\telse if (vFlip) {\n\t\t\ttransformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n\t\t\ttransformations.push(\"scale(1 -1)\");\n\t\t\tbox.top = box.left = 0;\n\t\t}\n\t\tlet tempValue;\n\t\tif (rotation < 0) rotation -= Math.floor(rotation / 4) * 4;\n\t\trotation = rotation % 4;\n\t\tswitch (rotation) {\n\t\t\tcase 1:\n\t\t\t\ttempValue = box.height / 2 + box.top;\n\t\t\t\ttransformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\ttransformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\ttempValue = box.width / 2 + box.left;\n\t\t\t\ttransformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n\t\t\t\tbreak;\n\t\t}\n\t\tif (rotation % 2 === 1) {\n\t\t\tif (box.left !== box.top) {\n\t\t\t\ttempValue = box.left;\n\t\t\t\tbox.left = box.top;\n\t\t\t\tbox.top = tempValue;\n\t\t\t}\n\t\t\tif (box.width !== box.height) {\n\t\t\t\ttempValue = box.width;\n\t\t\t\tbox.width = box.height;\n\t\t\t\tbox.height = tempValue;\n\t\t\t}\n\t\t}\n\t\tif (transformations.length) body = wrapSVGContent(body, \"<g transform=\\\"\" + transformations.join(\" \") + \"\\\">\", \"</g>\");\n\t});\n\tconst customisationsWidth = fullCustomisations.width;\n\tconst customisationsHeight = fullCustomisations.height;\n\tconst boxWidth = box.width;\n\tconst boxHeight = box.height;\n\tlet width;\n\tlet height;\n\tif (customisationsWidth === null) {\n\t\theight = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n\t\twidth = calculateSize$1(height, boxWidth / boxHeight);\n\t} else {\n\t\twidth = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n\t\theight = customisationsHeight === null ? calculateSize$1(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n\t}\n\tconst attributes = {};\n\tconst setAttr = (prop, value) => {\n\t\tif (!isUnsetKeyword(value)) attributes[prop] = value.toString();\n\t};\n\tsetAttr(\"width\", width);\n\tsetAttr(\"height\", height);\n\tconst viewBox = [\n\t\tbox.left,\n\t\tbox.top,\n\t\tboxWidth,\n\t\tboxHeight\n\t];\n\tattributes.viewBox = viewBox.join(\" \");\n\treturn {\n\t\tattributes,\n\t\tviewBox,\n\t\tbody\n\t};\n}\n\n/**\n* Generate <svg>\n*/\nfunction iconToHTML$1(body, attributes) {\n\tlet renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : \" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\";\n\tfor (const attr in attributes) renderAttribsHTML += \" \" + attr + \"=\\\"\" + attributes[attr] + \"\\\"\";\n\treturn \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\n/**\n* Encode SVG for use in url()\n*\n* Short alternative to encodeURIComponent() that encodes only stuff used in SVG, generating\n* smaller code.\n*/\nfunction encodeSVGforURL(svg) {\n\treturn svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\n/**\n* Generate data: URL from SVG\n*/\nfunction svgToData(svg) {\n\treturn \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\n/**\n* Generate url() from SVG\n*/\nfunction svgToURL$1(svg) {\n\treturn \"url(\\\"\" + svgToData(svg) + \"\\\")\";\n}\n\nconst detectFetch = () => {\n\tlet callback;\n\ttry {\n\t\tcallback = fetch;\n\t\tif (typeof callback === \"function\") return callback;\n\t} catch (err) {}\n};\n/**\n* Fetch function\n*/\nlet fetchModule = detectFetch();\n/**\n* Set custom fetch() function\n*/\nfunction setFetch(fetch$1) {\n\tfetchModule = fetch$1;\n}\n/**\n* Get fetch() function. Used by Icon Finder Core\n*/\nfunction getFetch() {\n\treturn fetchModule;\n}\n/**\n* Calculate maximum icons list length for prefix\n*/\nfunction calculateMaxLength(provider, prefix) {\n\tconst config = getAPIConfig(provider);\n\tif (!config) return 0;\n\tlet result;\n\tif (!config.maxURL) result = 0;\n\telse {\n\t\tlet maxHostLength = 0;\n\t\tconfig.resources.forEach((item) => {\n\t\t\tconst host = item;\n\t\t\tmaxHostLength = Math.max(maxHostLength, host.length);\n\t\t});\n\t\tconst url = prefix + \".json?icons=\";\n\t\tresult = config.maxURL - maxHostLength - config.path.length - url.length;\n\t}\n\treturn result;\n}\n/**\n* Should query be aborted, based on last HTTP status\n*/\nfunction shouldAbort(status) {\n\treturn status === 404;\n}\n/**\n* Prepare params\n*/\nconst prepare = (provider, prefix, icons) => {\n\tconst results = [];\n\tconst maxLength = calculateMaxLength(provider, prefix);\n\tconst type = \"icons\";\n\tlet item = {\n\t\ttype,\n\t\tprovider,\n\t\tprefix,\n\t\ticons: []\n\t};\n\tlet length = 0;\n\ticons.forEach((name, index) => {\n\t\tlength += name.length + 1;\n\t\tif (length >= maxLength && index > 0) {\n\t\t\tresults.push(item);\n\t\t\titem = {\n\t\t\t\ttype,\n\t\t\t\tprovider,\n\t\t\t\tprefix,\n\t\t\t\ticons: []\n\t\t\t};\n\t\t\tlength = name.length;\n\t\t}\n\t\titem.icons.push(name);\n\t});\n\tresults.push(item);\n\treturn results;\n};\n/**\n* Get path\n*/\nfunction getPath(provider) {\n\tif (typeof provider === \"string\") {\n\t\tconst config = getAPIConfig(provider);\n\t\tif (config) return config.path;\n\t}\n\treturn \"/\";\n}\n/**\n* Load icons\n*/\nconst send = (host, params, callback) => {\n\tif (!fetchModule) {\n\t\tcallback(\"abort\", 424);\n\t\treturn;\n\t}\n\tlet path = getPath(params.provider);\n\tswitch (params.type) {\n\t\tcase \"icons\": {\n\t\t\tconst prefix = params.prefix;\n\t\t\tconst iconsList = params.icons.join(\",\");\n\t\t\tconst urlParams = new URLSearchParams({ icons: iconsList });\n\t\t\tpath += prefix + \".json?\" + urlParams.toString();\n\t\t\tbreak;\n\t\t}\n\t\tcase \"custom\": {\n\t\t\tconst uri = params.uri;\n\t\t\tpath += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tcallback(\"abort\", 400);\n\t\t\treturn;\n\t}\n\tlet defaultError = 503;\n\tfetchModule(host + path).then((response) => {\n\t\tconst status = response.status;\n\t\tif (status !== 200) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tcallback(shouldAbort(status) ? \"abort\" : \"next\", status);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tdefaultError = 501;\n\t\treturn response.json();\n\t}).then((data) => {\n\t\tif (typeof data !== \"object\" || data === null) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (data === 404) callback(\"abort\", data);\n\t\t\t\telse callback(\"next\", defaultError);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tcallback(\"success\", data);\n\t\t});\n\t}).catch(() => {\n\t\tcallback(\"next\", defaultError);\n\t});\n};\n/**\n* Export module\n*/\nconst fetchAPIModule = {\n\tprepare,\n\tsend\n};\n\n/**\n* Set custom loader for multiple icons\n*/\nfunction setCustomIconsLoader$1(loader, prefix, provider) {\n\tgetStorage(provider || \"\", prefix).loadIcons = loader;\n}\n/**\n* Set custom loader for one icon\n*/\nfunction setCustomIconLoader$1(loader, prefix, provider) {\n\tgetStorage(provider || \"\", prefix).loadIcon = loader;\n}\n\n/**\n * Attribute to add\n */\nconst nodeAttr = 'data-style';\n/**\n * Custom style to add to each node\n */\nlet customStyle = '';\n/**\n * Set custom style to add to all components\n *\n * Affects only components rendered after function call\n */\nfunction appendCustomStyle(style) {\n    customStyle = style;\n}\n/**\n * Add/update style node\n */\nfunction updateStyle(parent, inline) {\n    // Get node, create if needed\n    let styleNode = Array.from(parent.childNodes).find((node) => node.hasAttribute &&\n        node.hasAttribute(nodeAttr));\n    if (!styleNode) {\n        styleNode = document.createElement('style');\n        styleNode.setAttribute(nodeAttr, nodeAttr);\n        parent.appendChild(styleNode);\n    }\n    // Update content\n    styleNode.textContent =\n        ':host{display:inline-block;vertical-align:' +\n            (inline ? '-0.125em' : '0') +\n            '}span,svg{display:block;margin:auto}' +\n            customStyle;\n}\n\n// Core\n/**\n * Get functions and initialise stuff\n */\nfunction exportFunctions() {\n    /**\n     * Initialise stuff\n     */\n    // Set API module\n    setAPIModule('', fetchAPIModule);\n    // Allow simple icon names\n    allowSimpleNames(true);\n    let _window;\n    try {\n        _window = window;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    }\n    catch (err) {\n        //\n    }\n    if (_window) {\n        // Load icons from global \"IconifyPreload\"\n        if (_window.IconifyPreload !== void 0) {\n            const preload = _window.IconifyPreload;\n            const err = 'Invalid IconifyPreload syntax.';\n            if (typeof preload === 'object' && preload !== null) {\n                (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                    try {\n                        if (\n                        // Check if item is an object and not null/array\n                        typeof item !== 'object' ||\n                            item === null ||\n                            item instanceof Array ||\n                            // Check for 'icons' and 'prefix'\n                            typeof item.icons !== 'object' ||\n                            typeof item.prefix !== 'string' ||\n                            // Add icon set\n                            !addCollection$1(item)) {\n                            console.error(err);\n                        }\n                        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    }\n                    catch (e) {\n                        console.error(err);\n                    }\n                });\n            }\n        }\n        // Set API from global \"IconifyProviders\"\n        if (_window.IconifyProviders !== void 0) {\n            const providers = _window.IconifyProviders;\n            if (typeof providers === 'object' && providers !== null) {\n                for (const key in providers) {\n                    const err = 'IconifyProviders[' + key + '] is invalid.';\n                    try {\n                        const value = providers[key];\n                        if (typeof value !== 'object' ||\n                            !value ||\n                            value.resources === void 0) {\n                            continue;\n                        }\n                        if (!addAPIProvider$1(key, value)) {\n                            console.error(err);\n                        }\n                        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    }\n                    catch (e) {\n                        console.error(err);\n                    }\n                }\n            }\n        }\n    }\n    const _api = {\n        getAPIConfig,\n        setAPIModule,\n        sendAPIQuery,\n        setFetch,\n        getFetch,\n        listAPIProviders,\n    };\n    return {\n        iconLoaded: iconLoaded$1,\n        getIcon: getIcon$1,\n        listIcons: listIcons$1,\n        addIcon: addIcon$1,\n        addCollection: addCollection$1,\n        calculateSize: calculateSize$1,\n        buildIcon: iconToSVG,\n        iconToHTML: iconToHTML$1,\n        svgToURL: svgToURL$1,\n        loadIcons: loadIcons$1,\n        loadIcon: loadIcon$1,\n        addAPIProvider: addAPIProvider$1,\n        setCustomIconLoader: setCustomIconLoader$1,\n        setCustomIconsLoader: setCustomIconsLoader$1,\n        appendCustomStyle,\n        _api,\n    };\n}\n\n// List of properties to apply\nconst monotoneProps = {\n    'background-color': 'currentColor',\n};\nconst coloredProps = {\n    'background-color': 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    image: 'var(--svg)',\n    repeat: 'no-repeat',\n    size: '100% 100%',\n};\nconst propsToAddTo = {\n    '-webkit-mask': monotoneProps,\n    'mask': monotoneProps,\n    'background': coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + '-' + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value ? value + (value.match(/^[-0-9.]+$/) ? 'px' : '') : 'inherit';\n}\n/**\n * Render node as <span>\n */\nfunction renderSPAN(data, icon, useMask) {\n    const node = document.createElement('span');\n    // Body\n    let body = data.body;\n    if (body.indexOf('<a') !== -1) {\n        // Animated SVG: add something to fix timing bug\n        body += '<!-- ' + Date.now() + ' -->';\n    }\n    // Generate SVG as URL\n    const renderAttribs = data.attributes;\n    const html = iconToHTML$1(body, {\n        ...renderAttribs,\n        width: icon.width + '',\n        height: icon.height + '',\n    });\n    const url = svgToURL$1(html);\n    // Generate style\n    const svgStyle = node.style;\n    const styles = {\n        '--svg': url,\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...(useMask ? monotoneProps : coloredProps),\n    };\n    // Apply style\n    for (const prop in styles) {\n        svgStyle.setProperty(prop, styles[prop]);\n    }\n    return node;\n}\n\nlet policy;\n/**\n* Attempt to create policy\n*/\nfunction createPolicy() {\n\ttry {\n\t\tpolicy = window.trustedTypes.createPolicy(\"iconify\", { createHTML: (s) => s });\n\t} catch (err) {\n\t\tpolicy = null;\n\t}\n}\n/**\n* Clean up value for innerHTML assignment\n*\n* This code doesn't actually clean up anything.\n* It is intended be used with Iconify icon data, which has already been validated\n*/\nfunction cleanUpInnerHTML(html) {\n\tif (policy === void 0) createPolicy();\n\treturn policy ? policy.createHTML(html) : html;\n}\n\n/**\n * Render node as <svg>\n */\nfunction renderSVG(data) {\n    const node = document.createElement('span');\n    // Add style if needed\n    const attr = data.attributes;\n    let style = '';\n    if (!attr.width) {\n        style = 'width: inherit;';\n    }\n    if (!attr.height) {\n        style += 'height: inherit;';\n    }\n    if (style) {\n        attr.style = style;\n    }\n    // Generate SVG\n    const html = iconToHTML$1(data.body, attr);\n    node.innerHTML = cleanUpInnerHTML(html);\n    return node.firstChild;\n}\n\n/**\n * Find icon node\n */\nfunction findIconElement(parent) {\n    return Array.from(parent.childNodes).find((node) => {\n        const tag = node.tagName &&\n            node.tagName.toUpperCase();\n        return tag === 'SPAN' || tag === 'SVG';\n    });\n}\n/**\n * Render icon\n */\nfunction renderIcon(parent, state) {\n    const iconData = state.icon.data;\n    const customisations = state.customisations;\n    // Render icon\n    const renderData = iconToSVG(iconData, customisations);\n    if (customisations.preserveAspectRatio) {\n        renderData.attributes['preserveAspectRatio'] =\n            customisations.preserveAspectRatio;\n    }\n    const mode = state.renderedMode;\n    let node;\n    switch (mode) {\n        case 'svg':\n            node = renderSVG(renderData);\n            break;\n        default:\n            node = renderSPAN(renderData, {\n                ...defaultIconProps,\n                ...iconData,\n            }, mode === 'mask');\n    }\n    // Set element\n    const oldNode = findIconElement(parent);\n    if (oldNode) {\n        // Replace old element\n        if (node.tagName === 'SPAN' && oldNode.tagName === node.tagName) {\n            // Swap style instead of whole node\n            oldNode.setAttribute('style', node.getAttribute('style'));\n        }\n        else {\n            parent.replaceChild(node, oldNode);\n        }\n    }\n    else {\n        // Add new element\n        parent.appendChild(node);\n    }\n}\n\n/**\n * Set state to PendingState\n */\nfunction setPendingState(icon, inline, lastState) {\n    const lastRender = lastState &&\n        (lastState.rendered\n            ? lastState\n            : lastState.lastRender);\n    return {\n        rendered: false,\n        inline,\n        icon,\n        lastRender,\n    };\n}\n\n/**\n * Register 'iconify-icon' component, if it does not exist\n */\nfunction defineIconifyIcon(name = 'iconify-icon') {\n    // Check for custom elements registry and HTMLElement\n    let customElements;\n    let ParentClass;\n    try {\n        customElements = window.customElements;\n        ParentClass = window.HTMLElement;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    }\n    catch (err) {\n        return;\n    }\n    // Make sure registry and HTMLElement exist\n    if (!customElements || !ParentClass) {\n        return;\n    }\n    // Check for duplicate\n    const ConflictingClass = customElements.get(name);\n    if (ConflictingClass) {\n        return ConflictingClass;\n    }\n    // All attributes\n    const attributes = [\n        // Icon\n        'icon',\n        // Mode\n        'mode',\n        'inline',\n        'noobserver',\n        // Customisations\n        'width',\n        'height',\n        'rotate',\n        'flip',\n    ];\n    /**\n     * Component class\n     */\n    const IconifyIcon = class extends ParentClass {\n        // Root\n        _shadowRoot;\n        // Initialised\n        _initialised = false;\n        // Icon state\n        _state;\n        // Attributes check queued\n        _checkQueued = false;\n        // Connected\n        _connected = false;\n        // Observer\n        _observer = null;\n        _visible = true;\n        /**\n         * Constructor\n         */\n        constructor() {\n            super();\n            // Attach shadow DOM\n            const root = (this._shadowRoot = this.attachShadow({\n                mode: 'open',\n            }));\n            // Add style\n            const inline = this.hasAttribute('inline');\n            updateStyle(root, inline);\n            // Create empty state\n            this._state = setPendingState({\n                value: '',\n            }, inline);\n            // Queue icon render\n            this._queueCheck();\n        }\n        /**\n         * Connected to DOM\n         */\n        connectedCallback() {\n            this._connected = true;\n            this.startObserver();\n        }\n        /**\n         * Disconnected from DOM\n         */\n        disconnectedCallback() {\n            this._connected = false;\n            this.stopObserver();\n        }\n        /**\n         * Observed attributes\n         */\n        static get observedAttributes() {\n            return attributes.slice(0);\n        }\n        /**\n         * Observed properties that are different from attributes\n         *\n         * Experimental! Need to test with various frameworks that support it\n         */\n        /*\n        static get properties() {\n            return {\n                inline: {\n                    type: Boolean,\n                    reflect: true,\n                },\n                // Not listing other attributes because they are strings or combination\n                // of string and another type. Cannot have multiple types\n            };\n        }\n        */\n        /**\n         * Attribute has changed\n         */\n        attributeChangedCallback(name) {\n            switch (name) {\n                case 'inline': {\n                    // Update immediately: not affected by other attributes\n                    const newInline = this.hasAttribute('inline');\n                    const state = this._state;\n                    if (newInline !== state.inline) {\n                        // Update style if inline mode changed\n                        state.inline = newInline;\n                        updateStyle(this._shadowRoot, newInline);\n                    }\n                    break;\n                }\n                case 'noobserver': {\n                    const value = this.hasAttribute('noobserver');\n                    if (value) {\n                        this.startObserver();\n                    }\n                    else {\n                        this.stopObserver();\n                    }\n                    break;\n                }\n                default:\n                    // Queue check for other attributes\n                    this._queueCheck();\n            }\n        }\n        /**\n         * Get/set icon\n         */\n        get icon() {\n            const value = this.getAttribute('icon');\n            if (value && value.slice(0, 1) === '{') {\n                try {\n                    return JSON.parse(value);\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                }\n                catch (err) {\n                    //\n                }\n            }\n            return value;\n        }\n        set icon(value) {\n            if (typeof value === 'object') {\n                value = JSON.stringify(value);\n            }\n            this.setAttribute('icon', value);\n        }\n        /**\n         * Get/set inline\n         */\n        get inline() {\n            return this.hasAttribute('inline');\n        }\n        set inline(value) {\n            if (value) {\n                this.setAttribute('inline', 'true');\n            }\n            else {\n                this.removeAttribute('inline');\n            }\n        }\n        /**\n         * Get/set observer\n         */\n        get observer() {\n            return this.hasAttribute('observer');\n        }\n        set observer(value) {\n            if (value) {\n                this.setAttribute('observer', 'true');\n            }\n            else {\n                this.removeAttribute('observer');\n            }\n        }\n        /**\n         * Restart animation\n         */\n        restartAnimation() {\n            const state = this._state;\n            if (state.rendered) {\n                const root = this._shadowRoot;\n                if (state.renderedMode === 'svg') {\n                    // Update root node\n                    try {\n                        root.lastChild.setCurrentTime(0);\n                        return;\n                        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    }\n                    catch (err) {\n                        // Failed: setCurrentTime() is not supported\n                    }\n                }\n                renderIcon(root, state);\n            }\n        }\n        /**\n         * Get status\n         */\n        get status() {\n            const state = this._state;\n            return state.rendered\n                ? 'rendered'\n                : state.icon.data === null\n                    ? 'failed'\n                    : 'loading';\n        }\n        /**\n         * Queue attributes re-check\n         */\n        _queueCheck() {\n            if (!this._checkQueued) {\n                this._checkQueued = true;\n                setTimeout(() => {\n                    this._check();\n                });\n            }\n        }\n        /**\n         * Check for changes\n         */\n        _check() {\n            if (!this._checkQueued) {\n                return;\n            }\n            this._checkQueued = false;\n            const state = this._state;\n            // Get icon\n            const newIcon = this.getAttribute('icon');\n            if (newIcon !== state.icon.value) {\n                this._iconChanged(newIcon);\n                return;\n            }\n            // Ignore other attributes if icon is not rendered\n            if (!state.rendered || !this._visible) {\n                return;\n            }\n            // Check for mode and attribute changes\n            const mode = this.getAttribute('mode');\n            const customisations = getCustomisations(this);\n            if (state.attrMode !== mode ||\n                haveCustomisationsChanged(state.customisations, customisations) ||\n                !findIconElement(this._shadowRoot)) {\n                this._renderIcon(state.icon, customisations, mode);\n            }\n        }\n        /**\n         * Icon value has changed\n         */\n        _iconChanged(newValue) {\n            const icon = parseIconValue(newValue, (value, name, data) => {\n                // Asynchronous callback: re-check values to make sure stuff wasn't changed\n                const state = this._state;\n                if (state.rendered || this.getAttribute('icon') !== value) {\n                    // Icon data is already available or icon attribute was changed\n                    return;\n                }\n                // Change icon\n                const icon = {\n                    value,\n                    name,\n                    data,\n                };\n                if (icon.data) {\n                    // Render icon\n                    this._gotIconData(icon);\n                }\n                else {\n                    // Nothing to render: update icon in state\n                    state.icon = icon;\n                }\n            });\n            if (icon.data) {\n                // Icon is ready to render\n                this._gotIconData(icon);\n            }\n            else {\n                // Pending icon\n                this._state = setPendingState(icon, this._state.inline, this._state);\n            }\n        }\n        /**\n         * Force render icon on state change\n         */\n        _forceRender() {\n            if (!this._visible) {\n                // Remove icon\n                const node = findIconElement(this._shadowRoot);\n                if (node) {\n                    this._shadowRoot.removeChild(node);\n                }\n                return;\n            }\n            // Re-render icon\n            this._queueCheck();\n        }\n        /**\n         * Got new icon data, icon is ready to (re)render\n         */\n        _gotIconData(icon) {\n            this._checkQueued = false;\n            this._renderIcon(icon, getCustomisations(this), this.getAttribute('mode'));\n        }\n        /**\n         * Re-render based on icon data\n         */\n        _renderIcon(icon, customisations, attrMode) {\n            // Get mode\n            const renderedMode = getRenderMode(icon.data.body, attrMode);\n            // Inline was not changed\n            const inline = this._state.inline;\n            // Set state and render\n            renderIcon(this._shadowRoot, (this._state = {\n                rendered: true,\n                icon,\n                inline,\n                customisations,\n                attrMode,\n                renderedMode,\n            }));\n        }\n        /**\n         * Start observer\n         */\n        startObserver() {\n            if (!this._observer && !this.hasAttribute('noobserver')) {\n                try {\n                    this._observer = new IntersectionObserver((entries) => {\n                        const intersecting = entries.some((entry) => entry.isIntersecting);\n                        if (intersecting !== this._visible) {\n                            this._visible = intersecting;\n                            this._forceRender();\n                        }\n                    });\n                    this._observer.observe(this);\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                }\n                catch (err) {\n                    // Something went wrong, possibly observer is not supported\n                    if (this._observer) {\n                        try {\n                            this._observer.disconnect();\n                            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                        }\n                        catch (err) {\n                            //\n                        }\n                        this._observer = null;\n                    }\n                }\n            }\n        }\n        /**\n         * Stop observer\n         */\n        stopObserver() {\n            if (this._observer) {\n                this._observer.disconnect();\n                this._observer = null;\n                this._visible = true;\n                if (this._connected) {\n                    // Render icon\n                    this._forceRender();\n                }\n            }\n        }\n    };\n    // Add getters and setters\n    attributes.forEach((attr) => {\n        if (!(attr in IconifyIcon.prototype)) {\n            Object.defineProperty(IconifyIcon.prototype, attr, {\n                get: function () {\n                    return this.getAttribute(attr);\n                },\n                set: function (value) {\n                    if (value !== null) {\n                        this.setAttribute(attr, value);\n                    }\n                    else {\n                        this.removeAttribute(attr);\n                    }\n                },\n            });\n        }\n    });\n    // Add exported functions: both as static and instance methods\n    const functions = exportFunctions();\n    for (const key in functions) {\n        IconifyIcon[key] = IconifyIcon.prototype[key] = functions[key];\n    }\n    // Define new component\n    customElements.define(name, IconifyIcon);\n    return IconifyIcon;\n}\n\n/**\n * Create exported data: either component instance or functions\n */\nconst IconifyIconComponent = defineIconifyIcon() || exportFunctions();\n/**\n * Export functions\n */\nconst { iconLoaded, getIcon, listIcons, addIcon, addCollection, calculateSize, buildIcon, iconToHTML, svgToURL, loadIcons, loadIcon, setCustomIconLoader, setCustomIconsLoader, addAPIProvider, _api, } = IconifyIconComponent;\n\nexport { IconifyIconComponent, _api, addAPIProvider, addCollection, addIcon, appendCustomStyle, buildIcon, calculateSize, getIcon, iconLoaded, iconToHTML, listIcons, loadIcon, loadIcons, setCustomIconLoader, setCustomIconsLoader, svgToURL };\n"],
  "mappings": "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",
  "names": ["storage", "simpleNames", "send", "data", "_api", "name", "icon", "err"]
}
